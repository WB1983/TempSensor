

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 12 21:40:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x220,48
    51                           	dabs	1,0x1A0,80
    52                           	dabs	1,0x124,76
    53                           	dabs	1,0x20A4,0,_MOS_tModbusData
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F1827 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001E                     	;# 
   118  001F                     	;# 
   119  008C                     	;# 
   120  008D                     	;# 
   121  0091                     	;# 
   122  0092                     	;# 
   123  0093                     	;# 
   124  0094                     	;# 
   125  0095                     	;# 
   126  0096                     	;# 
   127  0097                     	;# 
   128  0098                     	;# 
   129  0099                     	;# 
   130  009A                     	;# 
   131  009B                     	;# 
   132  009B                     	;# 
   133  009C                     	;# 
   134  009D                     	;# 
   135  009E                     	;# 
   136  010C                     	;# 
   137  010D                     	;# 
   138  0111                     	;# 
   139  0112                     	;# 
   140  0113                     	;# 
   141  0114                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011D                     	;# 
   150  011E                     	;# 
   151  018C                     	;# 
   152  018D                     	;# 
   153  0191                     	;# 
   154  0191                     	;# 
   155  0192                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0193                     	;# 
   159  0194                     	;# 
   160  0195                     	;# 
   161  0196                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  020D                     	;# 
   175  0211                     	;# 
   176  0211                     	;# 
   177  0212                     	;# 
   178  0212                     	;# 
   179  0213                     	;# 
   180  0213                     	;# 
   181  0214                     	;# 
   182  0214                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0215                     	;# 
   186  0216                     	;# 
   187  0216                     	;# 
   188  0217                     	;# 
   189  0217                     	;# 
   190  0219                     	;# 
   191  021A                     	;# 
   192  021B                     	;# 
   193  021C                     	;# 
   194  021D                     	;# 
   195  021E                     	;# 
   196  021F                     	;# 
   197  0291                     	;# 
   198  0291                     	;# 
   199  0292                     	;# 
   200  0293                     	;# 
   201  0294                     	;# 
   202  0295                     	;# 
   203  0295                     	;# 
   204  0296                     	;# 
   205  0298                     	;# 
   206  0298                     	;# 
   207  0299                     	;# 
   208  029A                     	;# 
   209  029B                     	;# 
   210  029C                     	;# 
   211  029C                     	;# 
   212  029D                     	;# 
   213  029E                     	;# 
   214  029E                     	;# 
   215  0311                     	;# 
   216  0311                     	;# 
   217  0312                     	;# 
   218  0313                     	;# 
   219  0318                     	;# 
   220  0318                     	;# 
   221  0319                     	;# 
   222  031A                     	;# 
   223  0394                     	;# 
   224  0395                     	;# 
   225  0396                     	;# 
   226  039A                     	;# 
   227  039C                     	;# 
   228  039D                     	;# 
   229  039E                     	;# 
   230  039F                     	;# 
   231  0415                     	;# 
   232  0416                     	;# 
   233  0417                     	;# 
   234  041C                     	;# 
   235  041D                     	;# 
   236  041E                     	;# 
   237  0FE4                     	;# 
   238  0FE5                     	;# 
   239  0FE6                     	;# 
   240  0FE7                     	;# 
   241  0FE8                     	;# 
   242  0FE9                     	;# 
   243  0FEA                     	;# 
   244  0FEB                     	;# 
   245  0FED                     	;# 
   246  0FEE                     	;# 
   247  0FEF                     	;# 
   248  0000                     	;# 
   249  0001                     	;# 
   250  0002                     	;# 
   251  0003                     	;# 
   252  0004                     	;# 
   253  0005                     	;# 
   254  0006                     	;# 
   255  0007                     	;# 
   256  0008                     	;# 
   257  0009                     	;# 
   258  000A                     	;# 
   259  000B                     	;# 
   260  000C                     	;# 
   261  000D                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  0111                     	;# 
   297  0112                     	;# 
   298  0113                     	;# 
   299  0114                     	;# 
   300  0115                     	;# 
   301  0116                     	;# 
   302  0117                     	;# 
   303  0118                     	;# 
   304  0119                     	;# 
   305  011A                     	;# 
   306  011B                     	;# 
   307  011D                     	;# 
   308  011E                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0191                     	;# 
   312  0191                     	;# 
   313  0192                     	;# 
   314  0193                     	;# 
   315  0193                     	;# 
   316  0193                     	;# 
   317  0194                     	;# 
   318  0195                     	;# 
   319  0196                     	;# 
   320  0199                     	;# 
   321  019A                     	;# 
   322  019B                     	;# 
   323  019B                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019C                     	;# 
   327  019C                     	;# 
   328  019D                     	;# 
   329  019E                     	;# 
   330  019F                     	;# 
   331  020C                     	;# 
   332  020D                     	;# 
   333  0211                     	;# 
   334  0211                     	;# 
   335  0212                     	;# 
   336  0212                     	;# 
   337  0213                     	;# 
   338  0213                     	;# 
   339  0214                     	;# 
   340  0214                     	;# 
   341  0215                     	;# 
   342  0215                     	;# 
   343  0215                     	;# 
   344  0216                     	;# 
   345  0216                     	;# 
   346  0217                     	;# 
   347  0217                     	;# 
   348  0219                     	;# 
   349  021A                     	;# 
   350  021B                     	;# 
   351  021C                     	;# 
   352  021D                     	;# 
   353  021E                     	;# 
   354  021F                     	;# 
   355  0291                     	;# 
   356  0291                     	;# 
   357  0292                     	;# 
   358  0293                     	;# 
   359  0294                     	;# 
   360  0295                     	;# 
   361  0295                     	;# 
   362  0296                     	;# 
   363  0298                     	;# 
   364  0298                     	;# 
   365  0299                     	;# 
   366  029A                     	;# 
   367  029B                     	;# 
   368  029C                     	;# 
   369  029C                     	;# 
   370  029D                     	;# 
   371  029E                     	;# 
   372  029E                     	;# 
   373  0311                     	;# 
   374  0311                     	;# 
   375  0312                     	;# 
   376  0313                     	;# 
   377  0318                     	;# 
   378  0318                     	;# 
   379  0319                     	;# 
   380  031A                     	;# 
   381  0394                     	;# 
   382  0395                     	;# 
   383  0396                     	;# 
   384  039A                     	;# 
   385  039C                     	;# 
   386  039D                     	;# 
   387  039E                     	;# 
   388  039F                     	;# 
   389  0415                     	;# 
   390  0416                     	;# 
   391  0417                     	;# 
   392  041C                     	;# 
   393  041D                     	;# 
   394  041E                     	;# 
   395  0FE4                     	;# 
   396  0FE5                     	;# 
   397  0FE6                     	;# 
   398  0FE7                     	;# 
   399  0FE8                     	;# 
   400  0FE9                     	;# 
   401  0FEA                     	;# 
   402  0FEB                     	;# 
   403  0FED                     	;# 
   404  0FEE                     	;# 
   405  0FEF                     	;# 
   406  0000                     	;# 
   407  0001                     	;# 
   408  0002                     	;# 
   409  0003                     	;# 
   410  0004                     	;# 
   411  0005                     	;# 
   412  0006                     	;# 
   413  0007                     	;# 
   414  0008                     	;# 
   415  0009                     	;# 
   416  000A                     	;# 
   417  000B                     	;# 
   418  000C                     	;# 
   419  000D                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001E                     	;# 
   434  001F                     	;# 
   435  008C                     	;# 
   436  008D                     	;# 
   437  0091                     	;# 
   438  0092                     	;# 
   439  0093                     	;# 
   440  0094                     	;# 
   441  0095                     	;# 
   442  0096                     	;# 
   443  0097                     	;# 
   444  0098                     	;# 
   445  0099                     	;# 
   446  009A                     	;# 
   447  009B                     	;# 
   448  009B                     	;# 
   449  009C                     	;# 
   450  009D                     	;# 
   451  009E                     	;# 
   452  010C                     	;# 
   453  010D                     	;# 
   454  0111                     	;# 
   455  0112                     	;# 
   456  0113                     	;# 
   457  0114                     	;# 
   458  0115                     	;# 
   459  0116                     	;# 
   460  0117                     	;# 
   461  0118                     	;# 
   462  0119                     	;# 
   463  011A                     	;# 
   464  011B                     	;# 
   465  011D                     	;# 
   466  011E                     	;# 
   467  018C                     	;# 
   468  018D                     	;# 
   469  0191                     	;# 
   470  0191                     	;# 
   471  0192                     	;# 
   472  0193                     	;# 
   473  0193                     	;# 
   474  0193                     	;# 
   475  0194                     	;# 
   476  0195                     	;# 
   477  0196                     	;# 
   478  0199                     	;# 
   479  019A                     	;# 
   480  019B                     	;# 
   481  019B                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019C                     	;# 
   485  019C                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019F                     	;# 
   489  020C                     	;# 
   490  020D                     	;# 
   491  0211                     	;# 
   492  0211                     	;# 
   493  0212                     	;# 
   494  0212                     	;# 
   495  0213                     	;# 
   496  0213                     	;# 
   497  0214                     	;# 
   498  0214                     	;# 
   499  0215                     	;# 
   500  0215                     	;# 
   501  0215                     	;# 
   502  0216                     	;# 
   503  0216                     	;# 
   504  0217                     	;# 
   505  0217                     	;# 
   506  0219                     	;# 
   507  021A                     	;# 
   508  021B                     	;# 
   509  021C                     	;# 
   510  021D                     	;# 
   511  021E                     	;# 
   512  021F                     	;# 
   513  0291                     	;# 
   514  0291                     	;# 
   515  0292                     	;# 
   516  0293                     	;# 
   517  0294                     	;# 
   518  0295                     	;# 
   519  0295                     	;# 
   520  0296                     	;# 
   521  0298                     	;# 
   522  0298                     	;# 
   523  0299                     	;# 
   524  029A                     	;# 
   525  029B                     	;# 
   526  029C                     	;# 
   527  029C                     	;# 
   528  029D                     	;# 
   529  029E                     	;# 
   530  029E                     	;# 
   531  0311                     	;# 
   532  0311                     	;# 
   533  0312                     	;# 
   534  0313                     	;# 
   535  0318                     	;# 
   536  0318                     	;# 
   537  0319                     	;# 
   538  031A                     	;# 
   539  0394                     	;# 
   540  0395                     	;# 
   541  0396                     	;# 
   542  039A                     	;# 
   543  039C                     	;# 
   544  039D                     	;# 
   545  039E                     	;# 
   546  039F                     	;# 
   547  0415                     	;# 
   548  0416                     	;# 
   549  0417                     	;# 
   550  041C                     	;# 
   551  041D                     	;# 
   552  041E                     	;# 
   553  0FE4                     	;# 
   554  0FE5                     	;# 
   555  0FE6                     	;# 
   556  0FE7                     	;# 
   557  0FE8                     	;# 
   558  0FE9                     	;# 
   559  0FEA                     	;# 
   560  0FEB                     	;# 
   561  0FED                     	;# 
   562  0FEE                     	;# 
   563  0FEF                     	;# 
   564  0000                     	;# 
   565  0001                     	;# 
   566  0002                     	;# 
   567  0003                     	;# 
   568  0004                     	;# 
   569  0005                     	;# 
   570  0006                     	;# 
   571  0007                     	;# 
   572  0008                     	;# 
   573  0009                     	;# 
   574  000A                     	;# 
   575  000B                     	;# 
   576  000C                     	;# 
   577  000D                     	;# 
   578  0011                     	;# 
   579  0012                     	;# 
   580  0013                     	;# 
   581  0014                     	;# 
   582  0015                     	;# 
   583  0016                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001C                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  008C                     	;# 
   594  008D                     	;# 
   595  0091                     	;# 
   596  0092                     	;# 
   597  0093                     	;# 
   598  0094                     	;# 
   599  0095                     	;# 
   600  0096                     	;# 
   601  0097                     	;# 
   602  0098                     	;# 
   603  0099                     	;# 
   604  009A                     	;# 
   605  009B                     	;# 
   606  009B                     	;# 
   607  009C                     	;# 
   608  009D                     	;# 
   609  009E                     	;# 
   610  010C                     	;# 
   611  010D                     	;# 
   612  0111                     	;# 
   613  0112                     	;# 
   614  0113                     	;# 
   615  0114                     	;# 
   616  0115                     	;# 
   617  0116                     	;# 
   618  0117                     	;# 
   619  0118                     	;# 
   620  0119                     	;# 
   621  011A                     	;# 
   622  011B                     	;# 
   623  011D                     	;# 
   624  011E                     	;# 
   625  018C                     	;# 
   626  018D                     	;# 
   627  0191                     	;# 
   628  0191                     	;# 
   629  0192                     	;# 
   630  0193                     	;# 
   631  0193                     	;# 
   632  0193                     	;# 
   633  0194                     	;# 
   634  0195                     	;# 
   635  0196                     	;# 
   636  0199                     	;# 
   637  019A                     	;# 
   638  019B                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019C                     	;# 
   643  019C                     	;# 
   644  019D                     	;# 
   645  019E                     	;# 
   646  019F                     	;# 
   647  020C                     	;# 
   648  020D                     	;# 
   649  0211                     	;# 
   650  0211                     	;# 
   651  0212                     	;# 
   652  0212                     	;# 
   653  0213                     	;# 
   654  0213                     	;# 
   655  0214                     	;# 
   656  0214                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0215                     	;# 
   660  0216                     	;# 
   661  0216                     	;# 
   662  0217                     	;# 
   663  0217                     	;# 
   664  0219                     	;# 
   665  021A                     	;# 
   666  021B                     	;# 
   667  021C                     	;# 
   668  021D                     	;# 
   669  021E                     	;# 
   670  021F                     	;# 
   671  0291                     	;# 
   672  0291                     	;# 
   673  0292                     	;# 
   674  0293                     	;# 
   675  0294                     	;# 
   676  0295                     	;# 
   677  0295                     	;# 
   678  0296                     	;# 
   679  0298                     	;# 
   680  0298                     	;# 
   681  0299                     	;# 
   682  029A                     	;# 
   683  029B                     	;# 
   684  029C                     	;# 
   685  029C                     	;# 
   686  029D                     	;# 
   687  029E                     	;# 
   688  029E                     	;# 
   689  0311                     	;# 
   690  0311                     	;# 
   691  0312                     	;# 
   692  0313                     	;# 
   693  0318                     	;# 
   694  0318                     	;# 
   695  0319                     	;# 
   696  031A                     	;# 
   697  0394                     	;# 
   698  0395                     	;# 
   699  0396                     	;# 
   700  039A                     	;# 
   701  039C                     	;# 
   702  039D                     	;# 
   703  039E                     	;# 
   704  039F                     	;# 
   705  0415                     	;# 
   706  0416                     	;# 
   707  0417                     	;# 
   708  041C                     	;# 
   709  041D                     	;# 
   710  041E                     	;# 
   711  0FE4                     	;# 
   712  0FE5                     	;# 
   713  0FE6                     	;# 
   714  0FE7                     	;# 
   715  0FE8                     	;# 
   716  0FE9                     	;# 
   717  0FEA                     	;# 
   718  0FEB                     	;# 
   719  0FED                     	;# 
   720  0FEE                     	;# 
   721  0FEF                     	;# 
   722  0000                     	;# 
   723  0001                     	;# 
   724  0002                     	;# 
   725  0003                     	;# 
   726  0004                     	;# 
   727  0005                     	;# 
   728  0006                     	;# 
   729  0007                     	;# 
   730  0008                     	;# 
   731  0009                     	;# 
   732  000A                     	;# 
   733  000B                     	;# 
   734  000C                     	;# 
   735  000D                     	;# 
   736  0011                     	;# 
   737  0012                     	;# 
   738  0013                     	;# 
   739  0014                     	;# 
   740  0015                     	;# 
   741  0016                     	;# 
   742  0016                     	;# 
   743  0017                     	;# 
   744  0018                     	;# 
   745  0019                     	;# 
   746  001A                     	;# 
   747  001B                     	;# 
   748  001C                     	;# 
   749  001E                     	;# 
   750  001F                     	;# 
   751  008C                     	;# 
   752  008D                     	;# 
   753  0091                     	;# 
   754  0092                     	;# 
   755  0093                     	;# 
   756  0094                     	;# 
   757  0095                     	;# 
   758  0096                     	;# 
   759  0097                     	;# 
   760  0098                     	;# 
   761  0099                     	;# 
   762  009A                     	;# 
   763  009B                     	;# 
   764  009B                     	;# 
   765  009C                     	;# 
   766  009D                     	;# 
   767  009E                     	;# 
   768  010C                     	;# 
   769  010D                     	;# 
   770  0111                     	;# 
   771  0112                     	;# 
   772  0113                     	;# 
   773  0114                     	;# 
   774  0115                     	;# 
   775  0116                     	;# 
   776  0117                     	;# 
   777  0118                     	;# 
   778  0119                     	;# 
   779  011A                     	;# 
   780  011B                     	;# 
   781  011D                     	;# 
   782  011E                     	;# 
   783  018C                     	;# 
   784  018D                     	;# 
   785  0191                     	;# 
   786  0191                     	;# 
   787  0192                     	;# 
   788  0193                     	;# 
   789  0193                     	;# 
   790  0193                     	;# 
   791  0194                     	;# 
   792  0195                     	;# 
   793  0196                     	;# 
   794  0199                     	;# 
   795  019A                     	;# 
   796  019B                     	;# 
   797  019B                     	;# 
   798  019B                     	;# 
   799  019B                     	;# 
   800  019C                     	;# 
   801  019C                     	;# 
   802  019D                     	;# 
   803  019E                     	;# 
   804  019F                     	;# 
   805  020C                     	;# 
   806  020D                     	;# 
   807  0211                     	;# 
   808  0211                     	;# 
   809  0212                     	;# 
   810  0212                     	;# 
   811  0213                     	;# 
   812  0213                     	;# 
   813  0214                     	;# 
   814  0214                     	;# 
   815  0215                     	;# 
   816  0215                     	;# 
   817  0215                     	;# 
   818  0216                     	;# 
   819  0216                     	;# 
   820  0217                     	;# 
   821  0217                     	;# 
   822  0219                     	;# 
   823  021A                     	;# 
   824  021B                     	;# 
   825  021C                     	;# 
   826  021D                     	;# 
   827  021E                     	;# 
   828  021F                     	;# 
   829  0291                     	;# 
   830  0291                     	;# 
   831  0292                     	;# 
   832  0293                     	;# 
   833  0294                     	;# 
   834  0295                     	;# 
   835  0295                     	;# 
   836  0296                     	;# 
   837  0298                     	;# 
   838  0298                     	;# 
   839  0299                     	;# 
   840  029A                     	;# 
   841  029B                     	;# 
   842  029C                     	;# 
   843  029C                     	;# 
   844  029D                     	;# 
   845  029E                     	;# 
   846  029E                     	;# 
   847  0311                     	;# 
   848  0311                     	;# 
   849  0312                     	;# 
   850  0313                     	;# 
   851  0318                     	;# 
   852  0318                     	;# 
   853  0319                     	;# 
   854  031A                     	;# 
   855  0394                     	;# 
   856  0395                     	;# 
   857  0396                     	;# 
   858  039A                     	;# 
   859  039C                     	;# 
   860  039D                     	;# 
   861  039E                     	;# 
   862  039F                     	;# 
   863  0415                     	;# 
   864  0416                     	;# 
   865  0417                     	;# 
   866  041C                     	;# 
   867  041D                     	;# 
   868  041E                     	;# 
   869  0FE4                     	;# 
   870  0FE5                     	;# 
   871  0FE6                     	;# 
   872  0FE7                     	;# 
   873  0FE8                     	;# 
   874  0FE9                     	;# 
   875  0FEA                     	;# 
   876  0FEB                     	;# 
   877  0FED                     	;# 
   878  0FEE                     	;# 
   879  0FEF                     	;# 
   880  0000                     	;# 
   881  0001                     	;# 
   882  0002                     	;# 
   883  0003                     	;# 
   884  0004                     	;# 
   885  0005                     	;# 
   886  0006                     	;# 
   887  0007                     	;# 
   888  0008                     	;# 
   889  0009                     	;# 
   890  000A                     	;# 
   891  000B                     	;# 
   892  000C                     	;# 
   893  000D                     	;# 
   894  0011                     	;# 
   895  0012                     	;# 
   896  0013                     	;# 
   897  0014                     	;# 
   898  0015                     	;# 
   899  0016                     	;# 
   900  0016                     	;# 
   901  0017                     	;# 
   902  0018                     	;# 
   903  0019                     	;# 
   904  001A                     	;# 
   905  001B                     	;# 
   906  001C                     	;# 
   907  001E                     	;# 
   908  001F                     	;# 
   909  008C                     	;# 
   910  008D                     	;# 
   911  0091                     	;# 
   912  0092                     	;# 
   913  0093                     	;# 
   914  0094                     	;# 
   915  0095                     	;# 
   916  0096                     	;# 
   917  0097                     	;# 
   918  0098                     	;# 
   919  0099                     	;# 
   920  009A                     	;# 
   921  009B                     	;# 
   922  009B                     	;# 
   923  009C                     	;# 
   924  009D                     	;# 
   925  009E                     	;# 
   926  010C                     	;# 
   927  010D                     	;# 
   928  0111                     	;# 
   929  0112                     	;# 
   930  0113                     	;# 
   931  0114                     	;# 
   932  0115                     	;# 
   933  0116                     	;# 
   934  0117                     	;# 
   935  0118                     	;# 
   936  0119                     	;# 
   937  011A                     	;# 
   938  011B                     	;# 
   939  011D                     	;# 
   940  011E                     	;# 
   941  018C                     	;# 
   942  018D                     	;# 
   943  0191                     	;# 
   944  0191                     	;# 
   945  0192                     	;# 
   946  0193                     	;# 
   947  0193                     	;# 
   948  0193                     	;# 
   949  0194                     	;# 
   950  0195                     	;# 
   951  0196                     	;# 
   952  0199                     	;# 
   953  019A                     	;# 
   954  019B                     	;# 
   955  019B                     	;# 
   956  019B                     	;# 
   957  019B                     	;# 
   958  019C                     	;# 
   959  019C                     	;# 
   960  019D                     	;# 
   961  019E                     	;# 
   962  019F                     	;# 
   963  020C                     	;# 
   964  020D                     	;# 
   965  0211                     	;# 
   966  0211                     	;# 
   967  0212                     	;# 
   968  0212                     	;# 
   969  0213                     	;# 
   970  0213                     	;# 
   971  0214                     	;# 
   972  0214                     	;# 
   973  0215                     	;# 
   974  0215                     	;# 
   975  0215                     	;# 
   976  0216                     	;# 
   977  0216                     	;# 
   978  0217                     	;# 
   979  0217                     	;# 
   980  0219                     	;# 
   981  021A                     	;# 
   982  021B                     	;# 
   983  021C                     	;# 
   984  021D                     	;# 
   985  021E                     	;# 
   986  021F                     	;# 
   987  0291                     	;# 
   988  0291                     	;# 
   989  0292                     	;# 
   990  0293                     	;# 
   991  0294                     	;# 
   992  0295                     	;# 
   993  0295                     	;# 
   994  0296                     	;# 
   995  0298                     	;# 
   996  0298                     	;# 
   997  0299                     	;# 
   998  029A                     	;# 
   999  029B                     	;# 
  1000  029C                     	;# 
  1001  029C                     	;# 
  1002  029D                     	;# 
  1003  029E                     	;# 
  1004  029E                     	;# 
  1005  0311                     	;# 
  1006  0311                     	;# 
  1007  0312                     	;# 
  1008  0313                     	;# 
  1009  0318                     	;# 
  1010  0318                     	;# 
  1011  0319                     	;# 
  1012  031A                     	;# 
  1013  0394                     	;# 
  1014  0395                     	;# 
  1015  0396                     	;# 
  1016  039A                     	;# 
  1017  039C                     	;# 
  1018  039D                     	;# 
  1019  039E                     	;# 
  1020  039F                     	;# 
  1021  0415                     	;# 
  1022  0416                     	;# 
  1023  0417                     	;# 
  1024  041C                     	;# 
  1025  041D                     	;# 
  1026  041E                     	;# 
  1027  0FE4                     	;# 
  1028  0FE5                     	;# 
  1029  0FE6                     	;# 
  1030  0FE7                     	;# 
  1031  0FE8                     	;# 
  1032  0FE9                     	;# 
  1033  0FEA                     	;# 
  1034  0FEB                     	;# 
  1035  0FED                     	;# 
  1036  0FEE                     	;# 
  1037  0FEF                     	;# 
  1038  0000                     	;# 
  1039  0001                     	;# 
  1040  0002                     	;# 
  1041  0003                     	;# 
  1042  0004                     	;# 
  1043  0005                     	;# 
  1044  0006                     	;# 
  1045  0007                     	;# 
  1046  0008                     	;# 
  1047  0009                     	;# 
  1048  000A                     	;# 
  1049  000B                     	;# 
  1050  000C                     	;# 
  1051  000D                     	;# 
  1052  0011                     	;# 
  1053  0012                     	;# 
  1054  0013                     	;# 
  1055  0014                     	;# 
  1056  0015                     	;# 
  1057  0016                     	;# 
  1058  0016                     	;# 
  1059  0017                     	;# 
  1060  0018                     	;# 
  1061  0019                     	;# 
  1062  001A                     	;# 
  1063  001B                     	;# 
  1064  001C                     	;# 
  1065  001E                     	;# 
  1066  001F                     	;# 
  1067  008C                     	;# 
  1068  008D                     	;# 
  1069  0091                     	;# 
  1070  0092                     	;# 
  1071  0093                     	;# 
  1072  0094                     	;# 
  1073  0095                     	;# 
  1074  0096                     	;# 
  1075  0097                     	;# 
  1076  0098                     	;# 
  1077  0099                     	;# 
  1078  009A                     	;# 
  1079  009B                     	;# 
  1080  009B                     	;# 
  1081  009C                     	;# 
  1082  009D                     	;# 
  1083  009E                     	;# 
  1084  010C                     	;# 
  1085  010D                     	;# 
  1086  0111                     	;# 
  1087  0112                     	;# 
  1088  0113                     	;# 
  1089  0114                     	;# 
  1090  0115                     	;# 
  1091  0116                     	;# 
  1092  0117                     	;# 
  1093  0118                     	;# 
  1094  0119                     	;# 
  1095  011A                     	;# 
  1096  011B                     	;# 
  1097  011D                     	;# 
  1098  011E                     	;# 
  1099  018C                     	;# 
  1100  018D                     	;# 
  1101  0191                     	;# 
  1102  0191                     	;# 
  1103  0192                     	;# 
  1104  0193                     	;# 
  1105  0193                     	;# 
  1106  0193                     	;# 
  1107  0194                     	;# 
  1108  0195                     	;# 
  1109  0196                     	;# 
  1110  0199                     	;# 
  1111  019A                     	;# 
  1112  019B                     	;# 
  1113  019B                     	;# 
  1114  019B                     	;# 
  1115  019B                     	;# 
  1116  019C                     	;# 
  1117  019C                     	;# 
  1118  019D                     	;# 
  1119  019E                     	;# 
  1120  019F                     	;# 
  1121  020C                     	;# 
  1122  020D                     	;# 
  1123  0211                     	;# 
  1124  0211                     	;# 
  1125  0212                     	;# 
  1126  0212                     	;# 
  1127  0213                     	;# 
  1128  0213                     	;# 
  1129  0214                     	;# 
  1130  0214                     	;# 
  1131  0215                     	;# 
  1132  0215                     	;# 
  1133  0215                     	;# 
  1134  0216                     	;# 
  1135  0216                     	;# 
  1136  0217                     	;# 
  1137  0217                     	;# 
  1138  0219                     	;# 
  1139  021A                     	;# 
  1140  021B                     	;# 
  1141  021C                     	;# 
  1142  021D                     	;# 
  1143  021E                     	;# 
  1144  021F                     	;# 
  1145  0291                     	;# 
  1146  0291                     	;# 
  1147  0292                     	;# 
  1148  0293                     	;# 
  1149  0294                     	;# 
  1150  0295                     	;# 
  1151  0295                     	;# 
  1152  0296                     	;# 
  1153  0298                     	;# 
  1154  0298                     	;# 
  1155  0299                     	;# 
  1156  029A                     	;# 
  1157  029B                     	;# 
  1158  029C                     	;# 
  1159  029C                     	;# 
  1160  029D                     	;# 
  1161  029E                     	;# 
  1162  029E                     	;# 
  1163  0311                     	;# 
  1164  0311                     	;# 
  1165  0312                     	;# 
  1166  0313                     	;# 
  1167  0318                     	;# 
  1168  0318                     	;# 
  1169  0319                     	;# 
  1170  031A                     	;# 
  1171  0394                     	;# 
  1172  0395                     	;# 
  1173  0396                     	;# 
  1174  039A                     	;# 
  1175  039C                     	;# 
  1176  039D                     	;# 
  1177  039E                     	;# 
  1178  039F                     	;# 
  1179  0415                     	;# 
  1180  0416                     	;# 
  1181  0417                     	;# 
  1182  041C                     	;# 
  1183  041D                     	;# 
  1184  041E                     	;# 
  1185  0FE4                     	;# 
  1186  0FE5                     	;# 
  1187  0FE6                     	;# 
  1188  0FE7                     	;# 
  1189  0FE8                     	;# 
  1190  0FE9                     	;# 
  1191  0FEA                     	;# 
  1192  0FEB                     	;# 
  1193  0FED                     	;# 
  1194  0FEE                     	;# 
  1195  0FEF                     	;# 
  1196  0000                     	;# 
  1197  0001                     	;# 
  1198  0002                     	;# 
  1199  0003                     	;# 
  1200  0004                     	;# 
  1201  0005                     	;# 
  1202  0006                     	;# 
  1203  0007                     	;# 
  1204  0008                     	;# 
  1205  0009                     	;# 
  1206  000A                     	;# 
  1207  000B                     	;# 
  1208  000C                     	;# 
  1209  000D                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0013                     	;# 
  1213  0014                     	;# 
  1214  0015                     	;# 
  1215  0016                     	;# 
  1216  0016                     	;# 
  1217  0017                     	;# 
  1218  0018                     	;# 
  1219  0019                     	;# 
  1220  001A                     	;# 
  1221  001B                     	;# 
  1222  001C                     	;# 
  1223  001E                     	;# 
  1224  001F                     	;# 
  1225  008C                     	;# 
  1226  008D                     	;# 
  1227  0091                     	;# 
  1228  0092                     	;# 
  1229  0093                     	;# 
  1230  0094                     	;# 
  1231  0095                     	;# 
  1232  0096                     	;# 
  1233  0097                     	;# 
  1234  0098                     	;# 
  1235  0099                     	;# 
  1236  009A                     	;# 
  1237  009B                     	;# 
  1238  009B                     	;# 
  1239  009C                     	;# 
  1240  009D                     	;# 
  1241  009E                     	;# 
  1242  010C                     	;# 
  1243  010D                     	;# 
  1244  0111                     	;# 
  1245  0112                     	;# 
  1246  0113                     	;# 
  1247  0114                     	;# 
  1248  0115                     	;# 
  1249  0116                     	;# 
  1250  0117                     	;# 
  1251  0118                     	;# 
  1252  0119                     	;# 
  1253  011A                     	;# 
  1254  011B                     	;# 
  1255  011D                     	;# 
  1256  011E                     	;# 
  1257  018C                     	;# 
  1258  018D                     	;# 
  1259  0191                     	;# 
  1260  0191                     	;# 
  1261  0192                     	;# 
  1262  0193                     	;# 
  1263  0193                     	;# 
  1264  0193                     	;# 
  1265  0194                     	;# 
  1266  0195                     	;# 
  1267  0196                     	;# 
  1268  0199                     	;# 
  1269  019A                     	;# 
  1270  019B                     	;# 
  1271  019B                     	;# 
  1272  019B                     	;# 
  1273  019B                     	;# 
  1274  019C                     	;# 
  1275  019C                     	;# 
  1276  019D                     	;# 
  1277  019E                     	;# 
  1278  019F                     	;# 
  1279  020C                     	;# 
  1280  020D                     	;# 
  1281  0211                     	;# 
  1282  0211                     	;# 
  1283  0212                     	;# 
  1284  0212                     	;# 
  1285  0213                     	;# 
  1286  0213                     	;# 
  1287  0214                     	;# 
  1288  0214                     	;# 
  1289  0215                     	;# 
  1290  0215                     	;# 
  1291  0215                     	;# 
  1292  0216                     	;# 
  1293  0216                     	;# 
  1294  0217                     	;# 
  1295  0217                     	;# 
  1296  0219                     	;# 
  1297  021A                     	;# 
  1298  021B                     	;# 
  1299  021C                     	;# 
  1300  021D                     	;# 
  1301  021E                     	;# 
  1302  021F                     	;# 
  1303  0291                     	;# 
  1304  0291                     	;# 
  1305  0292                     	;# 
  1306  0293                     	;# 
  1307  0294                     	;# 
  1308  0295                     	;# 
  1309  0295                     	;# 
  1310  0296                     	;# 
  1311  0298                     	;# 
  1312  0298                     	;# 
  1313  0299                     	;# 
  1314  029A                     	;# 
  1315  029B                     	;# 
  1316  029C                     	;# 
  1317  029C                     	;# 
  1318  029D                     	;# 
  1319  029E                     	;# 
  1320  029E                     	;# 
  1321  0311                     	;# 
  1322  0311                     	;# 
  1323  0312                     	;# 
  1324  0313                     	;# 
  1325  0318                     	;# 
  1326  0318                     	;# 
  1327  0319                     	;# 
  1328  031A                     	;# 
  1329  0394                     	;# 
  1330  0395                     	;# 
  1331  0396                     	;# 
  1332  039A                     	;# 
  1333  039C                     	;# 
  1334  039D                     	;# 
  1335  039E                     	;# 
  1336  039F                     	;# 
  1337  0415                     	;# 
  1338  0416                     	;# 
  1339  0417                     	;# 
  1340  041C                     	;# 
  1341  041D                     	;# 
  1342  041E                     	;# 
  1343  0FE4                     	;# 
  1344  0FE5                     	;# 
  1345  0FE6                     	;# 
  1346  0FE7                     	;# 
  1347  0FE8                     	;# 
  1348  0FE9                     	;# 
  1349  0FEA                     	;# 
  1350  0FEB                     	;# 
  1351  0FED                     	;# 
  1352  0FEE                     	;# 
  1353  0FEF                     	;# 
  1354  0000                     	;# 
  1355  0001                     	;# 
  1356  0002                     	;# 
  1357  0003                     	;# 
  1358  0004                     	;# 
  1359  0005                     	;# 
  1360  0006                     	;# 
  1361  0007                     	;# 
  1362  0008                     	;# 
  1363  0009                     	;# 
  1364  000A                     	;# 
  1365  000B                     	;# 
  1366  000C                     	;# 
  1367  000D                     	;# 
  1368  0011                     	;# 
  1369  0012                     	;# 
  1370  0013                     	;# 
  1371  0014                     	;# 
  1372  0015                     	;# 
  1373  0016                     	;# 
  1374  0016                     	;# 
  1375  0017                     	;# 
  1376  0018                     	;# 
  1377  0019                     	;# 
  1378  001A                     	;# 
  1379  001B                     	;# 
  1380  001C                     	;# 
  1381  001E                     	;# 
  1382  001F                     	;# 
  1383  008C                     	;# 
  1384  008D                     	;# 
  1385  0091                     	;# 
  1386  0092                     	;# 
  1387  0093                     	;# 
  1388  0094                     	;# 
  1389  0095                     	;# 
  1390  0096                     	;# 
  1391  0097                     	;# 
  1392  0098                     	;# 
  1393  0099                     	;# 
  1394  009A                     	;# 
  1395  009B                     	;# 
  1396  009B                     	;# 
  1397  009C                     	;# 
  1398  009D                     	;# 
  1399  009E                     	;# 
  1400  010C                     	;# 
  1401  010D                     	;# 
  1402  0111                     	;# 
  1403  0112                     	;# 
  1404  0113                     	;# 
  1405  0114                     	;# 
  1406  0115                     	;# 
  1407  0116                     	;# 
  1408  0117                     	;# 
  1409  0118                     	;# 
  1410  0119                     	;# 
  1411  011A                     	;# 
  1412  011B                     	;# 
  1413  011D                     	;# 
  1414  011E                     	;# 
  1415  018C                     	;# 
  1416  018D                     	;# 
  1417  0191                     	;# 
  1418  0191                     	;# 
  1419  0192                     	;# 
  1420  0193                     	;# 
  1421  0193                     	;# 
  1422  0193                     	;# 
  1423  0194                     	;# 
  1424  0195                     	;# 
  1425  0196                     	;# 
  1426  0199                     	;# 
  1427  019A                     	;# 
  1428  019B                     	;# 
  1429  019B                     	;# 
  1430  019B                     	;# 
  1431  019B                     	;# 
  1432  019C                     	;# 
  1433  019C                     	;# 
  1434  019D                     	;# 
  1435  019E                     	;# 
  1436  019F                     	;# 
  1437  020C                     	;# 
  1438  020D                     	;# 
  1439  0211                     	;# 
  1440  0211                     	;# 
  1441  0212                     	;# 
  1442  0212                     	;# 
  1443  0213                     	;# 
  1444  0213                     	;# 
  1445  0214                     	;# 
  1446  0214                     	;# 
  1447  0215                     	;# 
  1448  0215                     	;# 
  1449  0215                     	;# 
  1450  0216                     	;# 
  1451  0216                     	;# 
  1452  0217                     	;# 
  1453  0217                     	;# 
  1454  0219                     	;# 
  1455  021A                     	;# 
  1456  021B                     	;# 
  1457  021C                     	;# 
  1458  021D                     	;# 
  1459  021E                     	;# 
  1460  021F                     	;# 
  1461  0291                     	;# 
  1462  0291                     	;# 
  1463  0292                     	;# 
  1464  0293                     	;# 
  1465  0294                     	;# 
  1466  0295                     	;# 
  1467  0295                     	;# 
  1468  0296                     	;# 
  1469  0298                     	;# 
  1470  0298                     	;# 
  1471  0299                     	;# 
  1472  029A                     	;# 
  1473  029B                     	;# 
  1474  029C                     	;# 
  1475  029C                     	;# 
  1476  029D                     	;# 
  1477  029E                     	;# 
  1478  029E                     	;# 
  1479  0311                     	;# 
  1480  0311                     	;# 
  1481  0312                     	;# 
  1482  0313                     	;# 
  1483  0318                     	;# 
  1484  0318                     	;# 
  1485  0319                     	;# 
  1486  031A                     	;# 
  1487  0394                     	;# 
  1488  0395                     	;# 
  1489  0396                     	;# 
  1490  039A                     	;# 
  1491  039C                     	;# 
  1492  039D                     	;# 
  1493  039E                     	;# 
  1494  039F                     	;# 
  1495  0415                     	;# 
  1496  0416                     	;# 
  1497  0417                     	;# 
  1498  041C                     	;# 
  1499  041D                     	;# 
  1500  041E                     	;# 
  1501  0FE4                     	;# 
  1502  0FE5                     	;# 
  1503  0FE6                     	;# 
  1504  0FE7                     	;# 
  1505  0FE8                     	;# 
  1506  0FE9                     	;# 
  1507  0FEA                     	;# 
  1508  0FEB                     	;# 
  1509  0FED                     	;# 
  1510  0FEE                     	;# 
  1511  0FEF                     	;_MOS_tModbusData
  1512                           
  1513                           	psect	idataBANK1
  1514  06B0                     __pidataBANK1:
  1515                           
  1516                           ;initializer for _Reg
  1517  06B0  3400               	retlw	0
  1518  06B1  3400               	retlw	0
  1519  06B2  3401               	retlw	1
  1520  06B3  3400               	retlw	0
  1521  06B4  3402               	retlw	2
  1522  06B5  3400               	retlw	0
  1523  06B6  3403               	retlw	3
  1524  06B7  3400               	retlw	0
  1525  06B8  3404               	retlw	4
  1526  06B9  3400               	retlw	0
  1527  06BA  3405               	retlw	5
  1528  06BB  3400               	retlw	0
  1529  06BC  3406               	retlw	6
  1530  06BD  3400               	retlw	0
  1531  06BE  3407               	retlw	7
  1532  06BF  3400               	retlw	0
  1533  06C0  3408               	retlw	8
  1534  06C1  3400               	retlw	0
  1535  06C2  3409               	retlw	9
  1536  06C3  3400               	retlw	0
  1537  06C4  340A               	retlw	10
  1538  06C5  3400               	retlw	0
  1539                           
  1540                           	psect	stringtext1
  1541  027F                     __pstringtext1:
  1542  027F                     _auchCRCLo:
  1543  027F  3400               	retlw	0
  1544  0280  34C0               	retlw	192
  1545  0281  34C1               	retlw	193
  1546  0282  3401               	retlw	1
  1547  0283  34C3               	retlw	195
  1548  0284  3403               	retlw	3
  1549  0285  3402               	retlw	2
  1550  0286  34C2               	retlw	194
  1551  0287  34C6               	retlw	198
  1552  0288  3406               	retlw	6
  1553  0289  3407               	retlw	7
  1554  028A  34C7               	retlw	199
  1555  028B  3405               	retlw	5
  1556  028C  34C5               	retlw	197
  1557  028D  34C4               	retlw	196
  1558  028E  3404               	retlw	4
  1559  028F  34CC               	retlw	204
  1560  0290  340C               	retlw	12
  1561  0291  340D               	retlw	13
  1562  0292  34CD               	retlw	205
  1563  0293  340F               	retlw	15
  1564  0294  34CF               	retlw	207
  1565  0295  34CE               	retlw	206
  1566  0296  340E               	retlw	14
  1567  0297  340A               	retlw	10
  1568  0298  34CA               	retlw	202
  1569  0299  34CB               	retlw	203
  1570  029A  340B               	retlw	11
  1571  029B  34C9               	retlw	201
  1572  029C  3409               	retlw	9
  1573  029D  3408               	retlw	8
  1574  029E  34C8               	retlw	200
  1575  029F  34D8               	retlw	216
  1576  02A0  3418               	retlw	24
  1577  02A1  3419               	retlw	25
  1578  02A2  34D9               	retlw	217
  1579  02A3  341B               	retlw	27
  1580  02A4  34DB               	retlw	219
  1581  02A5  34DA               	retlw	218
  1582  02A6  341A               	retlw	26
  1583  02A7  341E               	retlw	30
  1584  02A8  34DE               	retlw	222
  1585  02A9  34DF               	retlw	223
  1586  02AA  341F               	retlw	31
  1587  02AB  34DD               	retlw	221
  1588  02AC  341D               	retlw	29
  1589  02AD  341C               	retlw	28
  1590  02AE  34DC               	retlw	220
  1591  02AF  3414               	retlw	20
  1592  02B0  34D4               	retlw	212
  1593  02B1  34D5               	retlw	213
  1594  02B2  3415               	retlw	21
  1595  02B3  34D7               	retlw	215
  1596  02B4  3417               	retlw	23
  1597  02B5  3416               	retlw	22
  1598  02B6  34D6               	retlw	214
  1599  02B7  34D2               	retlw	210
  1600  02B8  3412               	retlw	18
  1601  02B9  3413               	retlw	19
  1602  02BA  34D3               	retlw	211
  1603  02BB  3411               	retlw	17
  1604  02BC  34D1               	retlw	209
  1605  02BD  34D0               	retlw	208
  1606  02BE  3410               	retlw	16
  1607  02BF  34F0               	retlw	240
  1608  02C0  3430               	retlw	48
  1609  02C1  3431               	retlw	49
  1610  02C2  34F1               	retlw	241
  1611  02C3  3433               	retlw	51
  1612  02C4  34F3               	retlw	243
  1613  02C5  34F2               	retlw	242
  1614  02C6  3432               	retlw	50
  1615  02C7  3436               	retlw	54
  1616  02C8  34F6               	retlw	246
  1617  02C9  34F7               	retlw	247
  1618  02CA  3437               	retlw	55
  1619  02CB  34F5               	retlw	245
  1620  02CC  3435               	retlw	53
  1621  02CD  3434               	retlw	52
  1622  02CE  34F4               	retlw	244
  1623  02CF  343C               	retlw	60
  1624  02D0  34FC               	retlw	252
  1625  02D1  34FD               	retlw	253
  1626  02D2  343D               	retlw	61
  1627  02D3  34FF               	retlw	255
  1628  02D4  343F               	retlw	63
  1629  02D5  343E               	retlw	62
  1630  02D6  34FE               	retlw	254
  1631  02D7  34FA               	retlw	250
  1632  02D8  343A               	retlw	58
  1633  02D9  343B               	retlw	59
  1634  02DA  34FB               	retlw	251
  1635  02DB  3439               	retlw	57
  1636  02DC  34F9               	retlw	249
  1637  02DD  34F8               	retlw	248
  1638  02DE  3438               	retlw	56
  1639  02DF  3428               	retlw	40
  1640  02E0  34E8               	retlw	232
  1641  02E1  34E9               	retlw	233
  1642  02E2  3429               	retlw	41
  1643  02E3  34EB               	retlw	235
  1644  02E4  342B               	retlw	43
  1645  02E5  342A               	retlw	42
  1646  02E6  34EA               	retlw	234
  1647  02E7  34EE               	retlw	238
  1648  02E8  342E               	retlw	46
  1649  02E9  342F               	retlw	47
  1650  02EA  34EF               	retlw	239
  1651  02EB  342D               	retlw	45
  1652  02EC  34ED               	retlw	237
  1653  02ED  34EC               	retlw	236
  1654  02EE  342C               	retlw	44
  1655  02EF  34E4               	retlw	228
  1656  02F0  3424               	retlw	36
  1657  02F1  3425               	retlw	37
  1658  02F2  34E5               	retlw	229
  1659  02F3  3427               	retlw	39
  1660  02F4  34E7               	retlw	231
  1661  02F5  34E6               	retlw	230
  1662  02F6  3426               	retlw	38
  1663  02F7  3422               	retlw	34
  1664  02F8  34E2               	retlw	226
  1665  02F9  34E3               	retlw	227
  1666  02FA  3423               	retlw	35
  1667  02FB  34E1               	retlw	225
  1668  02FC  3421               	retlw	33
  1669  02FD  3420               	retlw	32
  1670  02FE  34E0               	retlw	224
  1671  02FF  34A0               	retlw	160
  1672  0300  3460               	retlw	96
  1673  0301  3461               	retlw	97
  1674  0302  34A1               	retlw	161
  1675  0303  3463               	retlw	99
  1676  0304  34A3               	retlw	163
  1677  0305  34A2               	retlw	162
  1678  0306  3462               	retlw	98
  1679  0307  3466               	retlw	102
  1680  0308  34A6               	retlw	166
  1681  0309  34A7               	retlw	167
  1682  030A  3467               	retlw	103
  1683  030B  34A5               	retlw	165
  1684  030C  3465               	retlw	101
  1685  030D  3464               	retlw	100
  1686  030E  34A4               	retlw	164
  1687  030F  346C               	retlw	108
  1688  0310  34AC               	retlw	172
  1689  0311  34AD               	retlw	173
  1690  0312  346D               	retlw	109
  1691  0313  34AF               	retlw	175
  1692  0314  346F               	retlw	111
  1693  0315  346E               	retlw	110
  1694  0316  34AE               	retlw	174
  1695  0317  34AA               	retlw	170
  1696  0318  346A               	retlw	106
  1697  0319  346B               	retlw	107
  1698  031A  34AB               	retlw	171
  1699  031B  3469               	retlw	105
  1700  031C  34A9               	retlw	169
  1701  031D  34A8               	retlw	168
  1702  031E  3468               	retlw	104
  1703  031F  3478               	retlw	120
  1704  0320  34B8               	retlw	184
  1705  0321  34B9               	retlw	185
  1706  0322  3479               	retlw	121
  1707  0323  34BB               	retlw	187
  1708  0324  347B               	retlw	123
  1709  0325  347A               	retlw	122
  1710  0326  34BA               	retlw	186
  1711  0327  34BE               	retlw	190
  1712  0328  347E               	retlw	126
  1713  0329  347F               	retlw	127
  1714  032A  34BF               	retlw	191
  1715  032B  347D               	retlw	125
  1716  032C  34BD               	retlw	189
  1717  032D  34BC               	retlw	188
  1718  032E  347C               	retlw	124
  1719  032F  34B4               	retlw	180
  1720  0330  3474               	retlw	116
  1721  0331  3475               	retlw	117
  1722  0332  34B5               	retlw	181
  1723  0333  3477               	retlw	119
  1724  0334  34B7               	retlw	183
  1725  0335  34B6               	retlw	182
  1726  0336  3476               	retlw	118
  1727  0337  3472               	retlw	114
  1728  0338  34B2               	retlw	178
  1729  0339  34B3               	retlw	179
  1730  033A  3473               	retlw	115
  1731  033B  34B1               	retlw	177
  1732  033C  3471               	retlw	113
  1733  033D  3470               	retlw	112
  1734  033E  34B0               	retlw	176
  1735  033F  3450               	retlw	80
  1736  0340  3490               	retlw	144
  1737  0341  3491               	retlw	145
  1738  0342  3451               	retlw	81
  1739  0343  3493               	retlw	147
  1740  0344  3453               	retlw	83
  1741  0345  3452               	retlw	82
  1742  0346  3492               	retlw	146
  1743  0347  3496               	retlw	150
  1744  0348  3456               	retlw	86
  1745  0349  3457               	retlw	87
  1746  034A  3497               	retlw	151
  1747  034B  3455               	retlw	85
  1748  034C  3495               	retlw	149
  1749  034D  3494               	retlw	148
  1750  034E  3454               	retlw	84
  1751  034F  349C               	retlw	156
  1752  0350  345C               	retlw	92
  1753  0351  345D               	retlw	93
  1754  0352  349D               	retlw	157
  1755  0353  345F               	retlw	95
  1756  0354  349F               	retlw	159
  1757  0355  349E               	retlw	158
  1758  0356  345E               	retlw	94
  1759  0357  345A               	retlw	90
  1760  0358  349A               	retlw	154
  1761  0359  349B               	retlw	155
  1762  035A  345B               	retlw	91
  1763  035B  3499               	retlw	153
  1764  035C  3459               	retlw	89
  1765  035D  3458               	retlw	88
  1766  035E  3498               	retlw	152
  1767  035F  3488               	retlw	136
  1768  0360  3448               	retlw	72
  1769  0361  3449               	retlw	73
  1770  0362  3489               	retlw	137
  1771  0363  344B               	retlw	75
  1772  0364  348B               	retlw	139
  1773  0365  348A               	retlw	138
  1774  0366  344A               	retlw	74
  1775  0367  344E               	retlw	78
  1776  0368  348E               	retlw	142
  1777  0369  348F               	retlw	143
  1778  036A  344F               	retlw	79
  1779  036B  348D               	retlw	141
  1780  036C  344D               	retlw	77
  1781  036D  344C               	retlw	76
  1782  036E  348C               	retlw	140
  1783  036F  3444               	retlw	68
  1784  0370  3484               	retlw	132
  1785  0371  3485               	retlw	133
  1786  0372  3445               	retlw	69
  1787  0373  3487               	retlw	135
  1788  0374  3447               	retlw	71
  1789  0375  3446               	retlw	70
  1790  0376  3486               	retlw	134
  1791  0377  3482               	retlw	130
  1792  0378  3442               	retlw	66
  1793  0379  3443               	retlw	67
  1794  037A  3483               	retlw	131
  1795  037B  3441               	retlw	65
  1796  037C  3481               	retlw	129
  1797  037D  3480               	retlw	128
  1798  037E  3440               	retlw	64
  1799  037F                     __end_of_auchCRCLo:
  1800                           
  1801                           	psect	stringtext2
  1802  037F                     __pstringtext2:
  1803  037F                     _auchCRCHi:
  1804  037F  3400               	retlw	0
  1805  0380  34C1               	retlw	193
  1806  0381  3481               	retlw	129
  1807  0382  3440               	retlw	64
  1808  0383  3401               	retlw	1
  1809  0384  34C0               	retlw	192
  1810  0385  3480               	retlw	128
  1811  0386  3441               	retlw	65
  1812  0387  3401               	retlw	1
  1813  0388  34C0               	retlw	192
  1814  0389  3480               	retlw	128
  1815  038A  3441               	retlw	65
  1816  038B  3400               	retlw	0
  1817  038C  34C1               	retlw	193
  1818  038D  3481               	retlw	129
  1819  038E  3440               	retlw	64
  1820  038F  3401               	retlw	1
  1821  0390  34C0               	retlw	192
  1822  0391  3480               	retlw	128
  1823  0392  3441               	retlw	65
  1824  0393  3400               	retlw	0
  1825  0394  34C1               	retlw	193
  1826  0395  3481               	retlw	129
  1827  0396  3440               	retlw	64
  1828  0397  3400               	retlw	0
  1829  0398  34C1               	retlw	193
  1830  0399  3481               	retlw	129
  1831  039A  3440               	retlw	64
  1832  039B  3401               	retlw	1
  1833  039C  34C0               	retlw	192
  1834  039D  3480               	retlw	128
  1835  039E  3441               	retlw	65
  1836  039F  3401               	retlw	1
  1837  03A0  34C0               	retlw	192
  1838  03A1  3480               	retlw	128
  1839  03A2  3441               	retlw	65
  1840  03A3  3400               	retlw	0
  1841  03A4  34C1               	retlw	193
  1842  03A5  3481               	retlw	129
  1843  03A6  3440               	retlw	64
  1844  03A7  3400               	retlw	0
  1845  03A8  34C1               	retlw	193
  1846  03A9  3481               	retlw	129
  1847  03AA  3440               	retlw	64
  1848  03AB  3401               	retlw	1
  1849  03AC  34C0               	retlw	192
  1850  03AD  3480               	retlw	128
  1851  03AE  3441               	retlw	65
  1852  03AF  3400               	retlw	0
  1853  03B0  34C1               	retlw	193
  1854  03B1  3481               	retlw	129
  1855  03B2  3440               	retlw	64
  1856  03B3  3401               	retlw	1
  1857  03B4  34C0               	retlw	192
  1858  03B5  3480               	retlw	128
  1859  03B6  3441               	retlw	65
  1860  03B7  3401               	retlw	1
  1861  03B8  34C0               	retlw	192
  1862  03B9  3480               	retlw	128
  1863  03BA  3441               	retlw	65
  1864  03BB  3400               	retlw	0
  1865  03BC  34C1               	retlw	193
  1866  03BD  3481               	retlw	129
  1867  03BE  3440               	retlw	64
  1868  03BF  3401               	retlw	1
  1869  03C0  34C0               	retlw	192
  1870  03C1  3480               	retlw	128
  1871  03C2  3441               	retlw	65
  1872  03C3  3400               	retlw	0
  1873  03C4  34C1               	retlw	193
  1874  03C5  3481               	retlw	129
  1875  03C6  3440               	retlw	64
  1876  03C7  3400               	retlw	0
  1877  03C8  34C1               	retlw	193
  1878  03C9  3481               	retlw	129
  1879  03CA  3440               	retlw	64
  1880  03CB  3401               	retlw	1
  1881  03CC  34C0               	retlw	192
  1882  03CD  3480               	retlw	128
  1883  03CE  3441               	retlw	65
  1884  03CF  3400               	retlw	0
  1885  03D0  34C1               	retlw	193
  1886  03D1  3481               	retlw	129
  1887  03D2  3440               	retlw	64
  1888  03D3  3401               	retlw	1
  1889  03D4  34C0               	retlw	192
  1890  03D5  3480               	retlw	128
  1891  03D6  3441               	retlw	65
  1892  03D7  3401               	retlw	1
  1893  03D8  34C0               	retlw	192
  1894  03D9  3480               	retlw	128
  1895  03DA  3441               	retlw	65
  1896  03DB  3400               	retlw	0
  1897  03DC  34C1               	retlw	193
  1898  03DD  3481               	retlw	129
  1899  03DE  3440               	retlw	64
  1900  03DF  3400               	retlw	0
  1901  03E0  34C1               	retlw	193
  1902  03E1  3481               	retlw	129
  1903  03E2  3440               	retlw	64
  1904  03E3  3401               	retlw	1
  1905  03E4  34C0               	retlw	192
  1906  03E5  3480               	retlw	128
  1907  03E6  3441               	retlw	65
  1908  03E7  3401               	retlw	1
  1909  03E8  34C0               	retlw	192
  1910  03E9  3480               	retlw	128
  1911  03EA  3441               	retlw	65
  1912  03EB  3400               	retlw	0
  1913  03EC  34C1               	retlw	193
  1914  03ED  3481               	retlw	129
  1915  03EE  3440               	retlw	64
  1916  03EF  3401               	retlw	1
  1917  03F0  34C0               	retlw	192
  1918  03F1  3480               	retlw	128
  1919  03F2  3441               	retlw	65
  1920  03F3  3400               	retlw	0
  1921  03F4  34C1               	retlw	193
  1922  03F5  3481               	retlw	129
  1923  03F6  3440               	retlw	64
  1924  03F7  3400               	retlw	0
  1925  03F8  34C1               	retlw	193
  1926  03F9  3481               	retlw	129
  1927  03FA  3440               	retlw	64
  1928  03FB  3401               	retlw	1
  1929  03FC  34C0               	retlw	192
  1930  03FD  3480               	retlw	128
  1931  03FE  3441               	retlw	65
  1932  03FF  3401               	retlw	1
  1933  0400  34C0               	retlw	192
  1934  0401  3480               	retlw	128
  1935  0402  3441               	retlw	65
  1936  0403  3400               	retlw	0
  1937  0404  34C1               	retlw	193
  1938  0405  3481               	retlw	129
  1939  0406  3440               	retlw	64
  1940  0407  3400               	retlw	0
  1941  0408  34C1               	retlw	193
  1942  0409  3481               	retlw	129
  1943  040A  3440               	retlw	64
  1944  040B  3401               	retlw	1
  1945  040C  34C0               	retlw	192
  1946  040D  3480               	retlw	128
  1947  040E  3441               	retlw	65
  1948  040F  3400               	retlw	0
  1949  0410  34C1               	retlw	193
  1950  0411  3481               	retlw	129
  1951  0412  3440               	retlw	64
  1952  0413  3401               	retlw	1
  1953  0414  34C0               	retlw	192
  1954  0415  3480               	retlw	128
  1955  0416  3441               	retlw	65
  1956  0417  3401               	retlw	1
  1957  0418  34C0               	retlw	192
  1958  0419  3480               	retlw	128
  1959  041A  3441               	retlw	65
  1960  041B  3400               	retlw	0
  1961  041C  34C1               	retlw	193
  1962  041D  3481               	retlw	129
  1963  041E  3440               	retlw	64
  1964  041F  3400               	retlw	0
  1965  0420  34C1               	retlw	193
  1966  0421  3481               	retlw	129
  1967  0422  3440               	retlw	64
  1968  0423  3401               	retlw	1
  1969  0424  34C0               	retlw	192
  1970  0425  3480               	retlw	128
  1971  0426  3441               	retlw	65
  1972  0427  3401               	retlw	1
  1973  0428  34C0               	retlw	192
  1974  0429  3480               	retlw	128
  1975  042A  3441               	retlw	65
  1976  042B  3400               	retlw	0
  1977  042C  34C1               	retlw	193
  1978  042D  3481               	retlw	129
  1979  042E  3440               	retlw	64
  1980  042F  3401               	retlw	1
  1981  0430  34C0               	retlw	192
  1982  0431  3480               	retlw	128
  1983  0432  3441               	retlw	65
  1984  0433  3400               	retlw	0
  1985  0434  34C1               	retlw	193
  1986  0435  3481               	retlw	129
  1987  0436  3440               	retlw	64
  1988  0437  3400               	retlw	0
  1989  0438  34C1               	retlw	193
  1990  0439  3481               	retlw	129
  1991  043A  3440               	retlw	64
  1992  043B  3401               	retlw	1
  1993  043C  34C0               	retlw	192
  1994  043D  3480               	retlw	128
  1995  043E  3441               	retlw	65
  1996  043F  3400               	retlw	0
  1997  0440  34C1               	retlw	193
  1998  0441  3481               	retlw	129
  1999  0442  3440               	retlw	64
  2000  0443  3401               	retlw	1
  2001  0444  34C0               	retlw	192
  2002  0445  3480               	retlw	128
  2003  0446  3441               	retlw	65
  2004  0447  3401               	retlw	1
  2005  0448  34C0               	retlw	192
  2006  0449  3480               	retlw	128
  2007  044A  3441               	retlw	65
  2008  044B  3400               	retlw	0
  2009  044C  34C1               	retlw	193
  2010  044D  3481               	retlw	129
  2011  044E  3440               	retlw	64
  2012  044F  3401               	retlw	1
  2013  0450  34C0               	retlw	192
  2014  0451  3480               	retlw	128
  2015  0452  3441               	retlw	65
  2016  0453  3400               	retlw	0
  2017  0454  34C1               	retlw	193
  2018  0455  3481               	retlw	129
  2019  0456  3440               	retlw	64
  2020  0457  3400               	retlw	0
  2021  0458  34C1               	retlw	193
  2022  0459  3481               	retlw	129
  2023  045A  3440               	retlw	64
  2024  045B  3401               	retlw	1
  2025  045C  34C0               	retlw	192
  2026  045D  3480               	retlw	128
  2027  045E  3441               	retlw	65
  2028  045F  3401               	retlw	1
  2029  0460  34C0               	retlw	192
  2030  0461  3480               	retlw	128
  2031  0462  3441               	retlw	65
  2032  0463  3400               	retlw	0
  2033  0464  34C1               	retlw	193
  2034  0465  3481               	retlw	129
  2035  0466  3440               	retlw	64
  2036  0467  3400               	retlw	0
  2037  0468  34C1               	retlw	193
  2038  0469  3481               	retlw	129
  2039  046A  3440               	retlw	64
  2040  046B  3401               	retlw	1
  2041  046C  34C0               	retlw	192
  2042  046D  3480               	retlw	128
  2043  046E  3441               	retlw	65
  2044  046F  3400               	retlw	0
  2045  0470  34C1               	retlw	193
  2046  0471  3481               	retlw	129
  2047  0472  3440               	retlw	64
  2048  0473  3401               	retlw	1
  2049  0474  34C0               	retlw	192
  2050  0475  3480               	retlw	128
  2051  0476  3441               	retlw	65
  2052  0477  3401               	retlw	1
  2053  0478  34C0               	retlw	192
  2054  0479  3480               	retlw	128
  2055  047A  3441               	retlw	65
  2056  047B  3400               	retlw	0
  2057  047C  34C1               	retlw	193
  2058  047D  3481               	retlw	129
  2059  047E  3440               	retlw	64
  2060  047F                     __end_of_auchCRCHi:
  2061                           
  2062                           	psect	nvCOMMON
  2063  007C                     __pnvCOMMON:
  2064  007C                     _timer0ReloadVal:
  2065  007C                     	ds	1
  2066                           
  2067                           	psect	nvBANK0
  2068  0052                     __pnvBANK0:
  2069  0052                     _TMR0_InterruptHandler:
  2070  0052                     	ds	2
  2071  0054                     _EUSART_ErrorHandler:
  2072  0054                     	ds	2
  2073  0056                     _EUSART_OverrunErrorHandler:
  2074  0056                     	ds	2
  2075  0058                     _EUSART_FramingErrorHandler:
  2076  0058                     	ds	2
  2077  005A                     _EUSART_RxDefaultInterruptHandler:
  2078  005A                     	ds	2
  2079  005C                     _EUSART_TxDefaultInterruptHandler:
  2080  005C                     	ds	2
  2081  0015                     _TMR0	set	21
  2082  0011                     _PIR1bits	set	17
  2083  000B                     _INTCONbits	set	11
  2084  0095                     _OPTION_REG	set	149
  2085  009D                     _ADCON0bits	set	157
  2086  009D                     _ADCON0	set	157
  2087  009C                     _ADRESH	set	156
  2088  009B                     _ADRESL	set	155
  2089  009E                     _ADCON1	set	158
  2090  0091                     _PIE1bits	set	145
  2091  0097                     _WDTCON	set	151
  2092  0098                     _OSCTUNE	set	152
  2093  0099                     _OSCCON	set	153
  2094  0095                     _OPTION_REGbits	set	149
  2095  008D                     _TRISB	set	141
  2096  008C                     _TRISA	set	140
  2097  010D                     _LATBbits	set	269
  2098  0116                     _BORCON	set	278
  2099  011E                     _APFCON1	set	286
  2100  011D                     _APFCON0	set	285
  2101  010D                     _LATB	set	269
  2102  010C                     _LATA	set	268
  2103  0199                     _RCREG	set	409
  2104  019D                     _RCSTAbits	set	413
  2105  019A                     _TXREG	set	410
  2106  019E                     _TXSTAbits	set	414
  2107  019C                     _SPBRGH	set	412
  2108  019B                     _SPBRGL	set	411
  2109  019E                     _TXSTA	set	414
  2110  019D                     _RCSTA	set	413
  2111  019F                     _BAUDCON	set	415
  2112  018C                     _ANSELA	set	396
  2113  018D                     _ANSELB	set	397
  2114  020C                     _WPUA	set	524
  2115  020D                     _WPUB	set	525
  2116                           
  2117                           	psect	cinit
  2118  003A                     start_initialization:	
  2119                           ; #config settings
  2120                           
  2121  003A                     __initialization:	;BIGRAM
  2122                           
  2123                           ; Initialize objects allocated to BANK1
  2124  003A  30B0               	movlw	low __pidataBANK1
  2125  003B  0084               	movwf	4
  2126  003C  3086               	movlw	(high __pidataBANK1)| (0+128)
  2127  003D  0085               	movwf	5
  2128  003E  30A0               	movlw	low __pdataBANK1
  2129  003F  0086               	movwf	6
  2130  0040  3000               	movlw	high __pdataBANK1
  2131  0041  0087               	movwf	7
  2132  0042  3000               	movlw	0
  2133  0043  00FF               	movwf	btemp+1
  2134  0044  3016               	movlw	22
  2135  0045  3186  26FF  3180   	fcall	init_ram
  2136                           
  2137                           ; Clear objects allocated to BIGRAM
  2138  0048  30A4               	movlw	low (0+8356)
  2139  0049  0084               	movwf	4
  2140  004A  3020               	movlw	high (0+8356)
  2141  004B  0085               	movwf	5
  2142  004C  30CC               	movlw	204
  2143  004D  00FE               	movwf	btemp
  2144  004E  3000               	movlw	0
  2145  004F  00FF               	movwf	btemp+1
  2146  0050  3187  270B  3180   	fcall	clear_ram0
  2147                           
  2148                           ; Clear objects allocated to COMMON
  2149  0053  01F9               	clrf	__pbssCOMMON& (0+127)
  2150  0054  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2151  0055  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2152                           
  2153                           ; Clear objects allocated to BANK0
  2154  0056  01DE               	clrf	__pbssBANK0& (0+127)
  2155  0057  01DF               	clrf	(__pbssBANK0+1)& (0+127)
  2156  0058  01E0               	clrf	(__pbssBANK0+2)& (0+127)
  2157  0059                     end_of_initialization:	
  2158                           ;End of C runtime variable initialization code
  2159                           
  2160  0059                     __end_of__initialization:
  2161  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2162  005A  0020               	movlb	0
  2163  005B  3186  2E7F         	ljmp	_main	;jump to C main() function
  2164                           
  2165                           	psect	bssCOMMON
  2166  0079                     __pbssCOMMON:
  2167  0079                     _ADC_InterruptHandler:
  2168  0079                     	ds	2
  2169  007B                     _eusartRxLastError:
  2170  007B                     	ds	1
  2171                           
  2172                           	psect	bssBANK0
  2173  005E                     __pbssBANK0:
  2174  005E                     TMR0_DefaultInterruptHandler@u16Count:
  2175  005E                     	ds	2
  2176  0060                     _MOS_tModbusPara:
  2177  0060                     	ds	1
  2178                           
  2179                           	psect	dataBANK1
  2180  00A0                     __pdataBANK1:
  2181  00A0                     _Reg:
  2182  00A0                     	ds	22
  2183                           
  2184                           	psect	inittext
  2185  06FF                     init_ram:
  2186  06FF  00FE               	movwf	btemp
  2187  0700                     initloop:
  2188  0700  0012               	moviw fsr0++
  2189  0701  001E               	movwi fsr1++
  2190  0702  3001               	movlw	1
  2191  0703  02FE               	subwf	btemp,f
  2192  0704  3000               	movlw	0
  2193  0705  3BFF               	subwfb	btemp+1,f
  2194  0706  087F               	movf	btemp+1,w
  2195  0707  047E               	iorwf	btemp,w
  2196  0708  1D03               	skipz
  2197  0709  2F00               	goto	initloop
  2198  070A  3400               	retlw	0
  2199                           
  2200                           	psect	clrtext
  2201  070B                     clear_ram0:	
  2202                           ;	Called with FSR0 containing the base address, and
  2203                           ;	btemp/btemp+1 has the size to clear
  2204                           
  2205  070B  0064               	clrwdt	;clear the watchdog before getting into this loop
  2206  070C                     clrloop0:
  2207  070C  0180               	clrf	0	;clear RAM location pointed to by FSR
  2208  070D  3101               	addfsr 0,1
  2209  070E  3001               	movlw	1
  2210  070F  02FE               	subwf	btemp,f
  2211  0710  3000               	movlw	0
  2212  0711  3BFF               	subwfb	btemp+1,f
  2213  0712  087F               	movf	btemp+1,w
  2214  0713  047E               	iorwf	btemp,w
  2215  0714  1D03               	skipz
  2216  0715  2F0C               	goto	clrloop0	;have we reached the end yet?
  2217  0716  3400               	retlw	0	;all done for this memory range, return
  2218                           
  2219                           	psect	cstackCOMMON
  2220  0070                     __pcstackCOMMON:
  2221  0070                     ?_OSCILLATOR_Initialize:
  2222  0070                     ?_WDT_Initialize:	
  2223                           ; 1 bytes @ 0x0
  2224                           
  2225  0070                     ?_TMR0_Initialize:	
  2226                           ; 1 bytes @ 0x0
  2227                           
  2228  0070                     ?_ADC_Initialize:	
  2229                           ; 1 bytes @ 0x0
  2230                           
  2231  0070                     ?_EUSART_Initialize:	
  2232                           ; 1 bytes @ 0x0
  2233                           
  2234  0070                     ?_EUSART_Receive_ISR:	
  2235                           ; 1 bytes @ 0x0
  2236                           
  2237  0070                     ?_EUSART_Transmit_ISR:	
  2238                           ; 1 bytes @ 0x0
  2239                           
  2240  0070                     ??_EUSART_Transmit_ISR:	
  2241                           ; 1 bytes @ 0x0
  2242                           
  2243  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2244                           ; 1 bytes @ 0x0
  2245                           
  2246  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2247                           ; 1 bytes @ 0x0
  2248                           
  2249  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2250                           ; 1 bytes @ 0x0
  2251                           
  2252  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2253                           ; 1 bytes @ 0x0
  2254                           
  2255  0070                     ?_EUSART_DefaultErrorHandler:	
  2256                           ; 1 bytes @ 0x0
  2257                           
  2258  0070                     ?_EUSART_RxDataHandler:	
  2259                           ; 1 bytes @ 0x0
  2260                           
  2261  0070                     ?_TMR0_ISR:	
  2262                           ; 1 bytes @ 0x0
  2263                           
  2264  0070                     ?_TMR0_DefaultInterruptHandler:	
  2265                           ; 1 bytes @ 0x0
  2266                           
  2267  0070                     ?_MOS_vModbusReceiveEnalbe:	
  2268                           ; 1 bytes @ 0x0
  2269                           
  2270  0070                     ?_MOS_vModbusInit:	
  2271                           ; 1 bytes @ 0x0
  2272                           
  2273  0070                     ?_MOS_vModBusHandler:	
  2274                           ; 1 bytes @ 0x0
  2275                           
  2276  0070                     ?_PIN_MANAGER_Initialize:	
  2277                           ; 1 bytes @ 0x0
  2278                           
  2279  0070                     ?_SYSTEM_Initialize:	
  2280                           ; 1 bytes @ 0x0
  2281                           
  2282  0070                     ?_EUSART_Write:	
  2283                           ; 1 bytes @ 0x0
  2284                           
  2285  0070                     ?_INTERRUPT_InterruptManager:	
  2286                           ; 1 bytes @ 0x0
  2287                           
  2288  0070                     ?_main:	
  2289                           ; 1 bytes @ 0x0
  2290                           
  2291  0070                     ?_MOS_vModbusTransmitEnalbe:	
  2292                           ; 1 bytes @ 0x0
  2293                           
  2294  0070                     ?_MOS_vModbudFun3:	
  2295                           ; 1 bytes @ 0x0
  2296                           
  2297  0070                     ?_MOS_vModbudFun6:	
  2298                           ; 1 bytes @ 0x0
  2299                           
  2300  0070                     ?_Mos_PtGetModbusObject:	
  2301                           ; 1 bytes @ 0x0
  2302                           
  2303                           
  2304                           ; 2 bytes @ 0x0
  2305  0070                     	ds	2
  2306  0072                     ??_EUSART_RxDataHandler:
  2307  0072                     ??_Mos_PtGetModbusObject:	
  2308                           ; 1 bytes @ 0x2
  2309                           
  2310  0072                     ??_TMR0_DefaultInterruptHandler:	
  2311                           ; 1 bytes @ 0x2
  2312                           
  2313                           
  2314                           ; 1 bytes @ 0x2
  2315  0072                     	ds	2
  2316  0074                     TMR0_DefaultInterruptHandler@tModbusData:
  2317                           
  2318                           ; 2 bytes @ 0x4
  2319  0074                     	ds	2
  2320  0076                     ??_TMR0_ISR:
  2321  0076                     EUSART_RxDataHandler@ucReceivedByte:	
  2322                           ; 1 bytes @ 0x6
  2323                           
  2324                           
  2325                           ; 1 bytes @ 0x6
  2326  0076                     	ds	1
  2327  0077                     EUSART_RxDataHandler@tModbusData:
  2328                           
  2329                           ; 2 bytes @ 0x7
  2330  0077                     	ds	2
  2331  0079                     ??_EUSART_Receive_ISR:
  2332  0079                     ??_EUSART_DefaultErrorHandler:	
  2333                           ; 1 bytes @ 0x9
  2334                           
  2335  0079                     ??_INTERRUPT_InterruptManager:	
  2336                           ; 1 bytes @ 0x9
  2337                           
  2338                           
  2339                           	psect	cstackBANK0
  2340  0020                     __pcstackBANK0:	
  2341                           ; 1 bytes @ 0x9
  2342                           
  2343  0020                     ??_OSCILLATOR_Initialize:
  2344  0020                     ??_WDT_Initialize:	
  2345                           ; 1 bytes @ 0x0
  2346                           
  2347  0020                     ??_ADC_Initialize:	
  2348                           ; 1 bytes @ 0x0
  2349                           
  2350  0020                     ?_EUSART_SetRxInterruptHandler:	
  2351                           ; 1 bytes @ 0x0
  2352                           
  2353  0020                     ?_EUSART_SetTxInterruptHandler:	
  2354                           ; 1 bytes @ 0x0
  2355                           
  2356  0020                     ?_EUSART_SetFramingErrorHandler:	
  2357                           ; 1 bytes @ 0x0
  2358                           
  2359  0020                     ?_EUSART_SetOverrunErrorHandler:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  0020                     ?_EUSART_SetErrorHandler:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  0020                     ?_TMR0_SetInterruptHandler:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0020                     ??_MOS_vModbusReceiveEnalbe:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371  0020                     ??_MOS_vModbusInit:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  0020                     ??_PIN_MANAGER_Initialize:	
  2375                           ; 1 bytes @ 0x0
  2376                           
  2377  0020                     ??_EUSART_Write:	
  2378                           ; 1 bytes @ 0x0
  2379                           
  2380  0020                     ??_MOS_vModbusTransmitEnalbe:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383  0020                     ?_crc16:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0020                     EUSART_Write@txData:	
  2387                           ; 2 bytes @ 0x0
  2388                           
  2389  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2393                           ; 2 bytes @ 0x0
  2394                           
  2395  0020                     EUSART_SetErrorHandler@interruptHandler:	
  2396                           ; 2 bytes @ 0x0
  2397                           
  2398  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2399                           ; 2 bytes @ 0x0
  2400                           
  2401  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2402                           ; 2 bytes @ 0x0
  2403                           
  2404  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  2405                           ; 2 bytes @ 0x0
  2406                           
  2407  0020                     crc16@puchMsg:	
  2408                           ; 2 bytes @ 0x0
  2409                           
  2410                           
  2411                           ; 2 bytes @ 0x0
  2412  0020                     	ds	2
  2413  0022                     ??_TMR0_Initialize:
  2414  0022                     ??_EUSART_Initialize:	
  2415                           ; 1 bytes @ 0x2
  2416                           
  2417  0022                     ??_EUSART_SetRxInterruptHandler:	
  2418                           ; 1 bytes @ 0x2
  2419                           
  2420  0022                     ??_EUSART_SetTxInterruptHandler:	
  2421                           ; 1 bytes @ 0x2
  2422                           
  2423  0022                     ??_EUSART_SetFramingErrorHandler:	
  2424                           ; 1 bytes @ 0x2
  2425                           
  2426  0022                     ??_EUSART_SetOverrunErrorHandler:	
  2427                           ; 1 bytes @ 0x2
  2428                           
  2429  0022                     ??_EUSART_SetErrorHandler:	
  2430                           ; 1 bytes @ 0x2
  2431                           
  2432  0022                     ??_TMR0_SetInterruptHandler:	
  2433                           ; 1 bytes @ 0x2
  2434                           
  2435  0022                     crc16@usDataLen:	
  2436                           ; 1 bytes @ 0x2
  2437                           
  2438                           
  2439                           ; 2 bytes @ 0x2
  2440  0022                     	ds	1
  2441  0023                     ??_SYSTEM_Initialize:
  2442                           
  2443                           ; 1 bytes @ 0x3
  2444  0023                     	ds	1
  2445  0024                     ??_crc16:
  2446                           
  2447                           ; 1 bytes @ 0x4
  2448  0024                     	ds	5
  2449  0029                     crc16@uIndex:
  2450                           
  2451                           ; 4 bytes @ 0x9
  2452  0029                     	ds	4
  2453  002D                     crc16@uchCRCHi:
  2454                           
  2455                           ; 1 bytes @ 0xD
  2456  002D                     	ds	1
  2457  002E                     crc16@uchCRCLo:
  2458                           
  2459                           ; 1 bytes @ 0xE
  2460  002E                     	ds	1
  2461  002F                     ??_MOS_vModbudFun3:
  2462  002F                     ??_MOS_vModbudFun6:	
  2463                           ; 1 bytes @ 0xF
  2464                           
  2465                           
  2466                           ; 1 bytes @ 0xF
  2467  002F                     	ds	5
  2468  0034                     MOS_vModbudFun6@u16TransmitCRC:
  2469                           
  2470                           ; 2 bytes @ 0x14
  2471  0034                     	ds	2
  2472  0036                     MOS_vModbudFun6@j:
  2473                           
  2474                           ; 2 bytes @ 0x16
  2475  0036                     	ds	2
  2476  0038                     MOS_vModbudFun6@u16RegisterAdd:
  2477                           
  2478                           ; 2 bytes @ 0x18
  2479  0038                     	ds	1
  2480  0039                     MOS_vModbudFun3@u16TransDataLen:
  2481                           
  2482                           ; 2 bytes @ 0x19
  2483  0039                     	ds	1
  2484  003A                     MOS_vModbudFun6@u16value:
  2485                           
  2486                           ; 2 bytes @ 0x1A
  2487  003A                     	ds	1
  2488  003B                     MOS_vModbudFun3@u16RegisterAdd:
  2489                           
  2490                           ; 2 bytes @ 0x1B
  2491  003B                     	ds	1
  2492  003C                     MOS_vModbudFun6@i:
  2493                           
  2494                           ; 2 bytes @ 0x1C
  2495  003C                     	ds	1
  2496  003D                     MOS_vModbudFun3@u16RegisterLen:
  2497                           
  2498                           ; 2 bytes @ 0x1D
  2499  003D                     	ds	2
  2500  003F                     MOS_vModbudFun3@u16TransmitCRC:
  2501                           
  2502                           ; 2 bytes @ 0x1F
  2503  003F                     	ds	2
  2504  0041                     MOS_vModbudFun3@j:
  2505                           
  2506                           ; 2 bytes @ 0x21
  2507  0041                     	ds	2
  2508  0043                     MOS_vModbudFun3@i:
  2509                           
  2510                           ; 2 bytes @ 0x23
  2511  0043                     	ds	2
  2512  0045                     ??_MOS_vModBusHandler:
  2513                           
  2514                           ; 1 bytes @ 0x25
  2515  0045                     	ds	7
  2516  004C                     MOS_vModBusHandler@u16CalculateCRC:
  2517                           
  2518                           ; 2 bytes @ 0x2C
  2519  004C                     	ds	2
  2520  004E                     MOS_vModBusHandler@u16ReceivedFunctionCode:
  2521                           
  2522                           ; 1 bytes @ 0x2E
  2523  004E                     	ds	1
  2524  004F                     MOS_vModBusHandler@u16ReceivedCRC:
  2525                           
  2526                           ; 2 bytes @ 0x2F
  2527  004F                     	ds	2
  2528  0051                     MOS_vModBusHandler@u16ReceivedAddress:
  2529                           
  2530                           ; 1 bytes @ 0x31
  2531  0051                     	ds	1
  2532  0052                     ??_main:
  2533                           
  2534                           	psect	maintext
  2535  067F                     __pmaintext:	
  2536                           ; 1 bytes @ 0x32
  2537 ;;
  2538 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2539 ;;
  2540 ;; *************** function _main *****************
  2541 ;; Defined at:
  2542 ;;		line 49 in file "main.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1    wreg      void 
  2549 ;; Registers used:
  2550 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2551 ;; Tracked objects:
  2552 ;;		On entry : B1F/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2556 ;;      Params:         0       0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels required when called: 8
  2562 ;; This function calls:
  2563 ;;		_EUSART_Initialize
  2564 ;;		_MOS_vModBusHandler
  2565 ;;		_MOS_vModbusInit
  2566 ;;		_MOS_vModbusReceiveEnalbe
  2567 ;;		_PIN_MANAGER_Initialize
  2568 ;;		_SYSTEM_Initialize
  2569 ;;		_TMR0_Initialize
  2570 ;; This function is called by:
  2571 ;;		Startup code after reset
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _main
  2577  067F                     _main:
  2578  067F                     l1710:	
  2579                           ;incstack = 0
  2580                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2581                           
  2582                           
  2583                           ;main.c: 52:     SYSTEM_Initialize();
  2584  067F  3186  26DC  3186   	fcall	_SYSTEM_Initialize
  2585                           
  2586                           ;main.c: 53:     EUSART_Initialize();
  2587  0682  3186  261B  3186   	fcall	_EUSART_Initialize
  2588                           
  2589                           ;main.c: 54:     TMR0_Initialize();
  2590  0685  3186  26C6  3186   	fcall	_TMR0_Initialize
  2591                           
  2592                           ;main.c: 55:     PIN_MANAGER_Initialize();
  2593  0688  3186  2699  3186   	fcall	_PIN_MANAGER_Initialize
  2594  068B                     l1712:
  2595                           
  2596                           ;main.c: 56:     MOS_vModbusReceiveEnalbe();
  2597  068B  3187  2774  3186   	fcall	_MOS_vModbusReceiveEnalbe
  2598  068E                     l1714:
  2599                           
  2600                           ;main.c: 57:     MOS_vModbusInit();
  2601  068E  3187  2723  3186   	fcall	_MOS_vModbusInit
  2602  0691                     l1716:
  2603                           
  2604                           ;main.c: 62:     (INTCONbits.GIE = 1);
  2605  0691  178B               	bsf	11,7	;volatile
  2606  0692                     l1718:
  2607                           
  2608                           ;main.c: 65:     (INTCONbits.PEIE = 1);
  2609  0692  170B               	bsf	11,6	;volatile
  2610  0693                     l1720:
  2611                           
  2612                           ;main.c: 74:     {;main.c: 76:       MOS_vModBusHandler();
  2613  0693  3184  247F  3186   	fcall	_MOS_vModBusHandler
  2614  0696  2E93               	goto	l1720
  2615  0697  3180  2838         	ljmp	start
  2616  0699                     __end_of_main:
  2617                           
  2618                           	psect	text1
  2619  06DC                     __ptext1:	
  2620 ;; *************** function _SYSTEM_Initialize *****************
  2621 ;; Defined at:
  2622 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;		None
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, status,2, status,0, pclath, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2636 ;;      Params:         0       0       0       0       0       0
  2637 ;;      Locals:         0       0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0
  2639 ;;      Totals:         0       0       0       0       0       0
  2640 ;;Total ram usage:        0 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 7
  2643 ;; This function calls:
  2644 ;;		_ADC_Initialize
  2645 ;;		_EUSART_Initialize
  2646 ;;		_OSCILLATOR_Initialize
  2647 ;;		_PIN_MANAGER_Initialize
  2648 ;;		_TMR0_Initialize
  2649 ;;		_WDT_Initialize
  2650 ;; This function is called by:
  2651 ;;		_main
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           
  2656                           ;psect for function _SYSTEM_Initialize
  2657  06DC                     _SYSTEM_Initialize:
  2658  06DC                     l1624:	
  2659                           ;incstack = 0
  2660                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2661                           
  2662                           
  2663                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2664  06DC  3186  2699  3186   	fcall	_PIN_MANAGER_Initialize
  2665                           
  2666                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2667  06DF  3187  272E  3186   	fcall	_OSCILLATOR_Initialize
  2668                           
  2669                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2670  06E2  3187  2765  3186   	fcall	_WDT_Initialize
  2671                           
  2672                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2673  06E5  3186  26C6  3186   	fcall	_TMR0_Initialize
  2674                           
  2675                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2676  06E8  3187  2735  3186   	fcall	_ADC_Initialize
  2677                           
  2678                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2679  06EB  3186  261B  3186   	fcall	_EUSART_Initialize
  2680  06EE                     l51:
  2681  06EE  0008               	return
  2682  06EF                     __end_of_SYSTEM_Initialize:
  2683                           
  2684                           	psect	text2
  2685  0765                     __ptext2:	
  2686 ;; *************** function _WDT_Initialize *****************
  2687 ;; Defined at:
  2688 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2689 ;; Parameters:    Size  Location     Type
  2690 ;;		None
  2691 ;; Auto vars:     Size  Location     Type
  2692 ;;		None
  2693 ;; Return value:  Size  Location     Type
  2694 ;;                  1    wreg      void 
  2695 ;; Registers used:
  2696 ;;		wreg
  2697 ;; Tracked objects:
  2698 ;;		On entry : 0/0
  2699 ;;		On exit  : 0/0
  2700 ;;		Unchanged: 0/0
  2701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2702 ;;      Params:         0       0       0       0       0       0
  2703 ;;      Locals:         0       0       0       0       0       0
  2704 ;;      Temps:          0       0       0       0       0       0
  2705 ;;      Totals:         0       0       0       0       0       0
  2706 ;;Total ram usage:        0 bytes
  2707 ;; Hardware stack levels used: 1
  2708 ;; Hardware stack levels required when called: 5
  2709 ;; This function calls:
  2710 ;;		Nothing
  2711 ;; This function is called by:
  2712 ;;		_SYSTEM_Initialize
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           
  2716                           
  2717                           ;psect for function _WDT_Initialize
  2718  0765                     _WDT_Initialize:
  2719  0765                     l1462:	
  2720                           ;incstack = 0
  2721                           ; Regs used in _WDT_Initialize: [wreg]
  2722                           
  2723                           
  2724                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  2725  0765  3016               	movlw	22
  2726  0766  0021               	movlb	1	; select bank1
  2727  0767  0097               	movwf	23	;volatile
  2728  0768                     l57:
  2729  0768  0008               	return
  2730  0769                     __end_of_WDT_Initialize:
  2731                           
  2732                           	psect	text3
  2733  06C6                     __ptext3:	
  2734 ;; *************** function _TMR0_Initialize *****************
  2735 ;; Defined at:
  2736 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  2737 ;; Parameters:    Size  Location     Type
  2738 ;;		None
  2739 ;; Auto vars:     Size  Location     Type
  2740 ;;		None
  2741 ;; Return value:  Size  Location     Type
  2742 ;;                  1    wreg      void 
  2743 ;; Registers used:
  2744 ;;		wreg, status,2, status,0, pclath, cstack
  2745 ;; Tracked objects:
  2746 ;;		On entry : 0/0
  2747 ;;		On exit  : 0/0
  2748 ;;		Unchanged: 0/0
  2749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2750 ;;      Params:         0       0       0       0       0       0
  2751 ;;      Locals:         0       0       0       0       0       0
  2752 ;;      Temps:          0       1       0       0       0       0
  2753 ;;      Totals:         0       1       0       0       0       0
  2754 ;;Total ram usage:        1 bytes
  2755 ;; Hardware stack levels used: 1
  2756 ;; Hardware stack levels required when called: 6
  2757 ;; This function calls:
  2758 ;;		_TMR0_SetInterruptHandler
  2759 ;; This function is called by:
  2760 ;;		_SYSTEM_Initialize
  2761 ;;		_main
  2762 ;; This function uses a non-reentrant model
  2763 ;;
  2764                           
  2765                           
  2766                           ;psect for function _TMR0_Initialize
  2767  06C6                     _TMR0_Initialize:
  2768  06C6                     l1464:	
  2769                           ;incstack = 0
  2770                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2771                           
  2772                           
  2773                           ;mcc_generated_files/tmr0.c: 72:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  2774  06C6  0021               	movlb	1	; select bank1
  2775  06C7  0815               	movf	21,w	;volatile
  2776  06C8  39C0               	andlw	192
  2777  06C9  3817               	iorlw	23
  2778  06CA  0095               	movwf	21	;volatile
  2779  06CB                     l1466:
  2780                           
  2781                           ;mcc_generated_files/tmr0.c: 75:     TMR0 = 0xF0;
  2782  06CB  30F0               	movlw	240
  2783  06CC  0020               	movlb	0	; select bank0
  2784  06CD  0095               	movwf	21	;volatile
  2785  06CE                     l1468:
  2786                           
  2787                           ;mcc_generated_files/tmr0.c: 78:     timer0ReloadVal= 240;
  2788  06CE  30F0               	movlw	240
  2789  06CF  00A2               	movwf	??_TMR0_Initialize
  2790  06D0  0822               	movf	??_TMR0_Initialize,w
  2791  06D1  00FC               	movwf	_timer0ReloadVal	;volatile
  2792  06D2                     l1470:
  2793                           
  2794                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IF = 0;
  2795  06D2  110B               	bcf	11,2	;volatile
  2796  06D3                     l1472:
  2797                           
  2798                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IE = 1;
  2799  06D3  168B               	bsf	11,5	;volatile
  2800  06D4                     l1474:
  2801                           
  2802                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2803  06D4  30DA               	movlw	low _TMR0_DefaultInterruptHandler
  2804  06D5  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2805  06D6  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2806  06D7  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2807  06D8  3187  273C  3186   	fcall	_TMR0_SetInterruptHandler
  2808  06DB                     l262:
  2809  06DB  0008               	return
  2810  06DC                     __end_of_TMR0_Initialize:
  2811                           
  2812                           	psect	text4
  2813  073C                     __ptext4:	
  2814 ;; *************** function _TMR0_SetInterruptHandler *****************
  2815 ;; Defined at:
  2816 ;;		line 128 in file "mcc_generated_files/tmr0.c"
  2817 ;; Parameters:    Size  Location     Type
  2818 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2819 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2820 ;; Auto vars:     Size  Location     Type
  2821 ;;		None
  2822 ;; Return value:  Size  Location     Type
  2823 ;;                  1    wreg      void 
  2824 ;; Registers used:
  2825 ;;		wreg
  2826 ;; Tracked objects:
  2827 ;;		On entry : 0/0
  2828 ;;		On exit  : 0/0
  2829 ;;		Unchanged: 0/0
  2830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2831 ;;      Params:         0       2       0       0       0       0
  2832 ;;      Locals:         0       0       0       0       0       0
  2833 ;;      Temps:          0       0       0       0       0       0
  2834 ;;      Totals:         0       2       0       0       0       0
  2835 ;;Total ram usage:        2 bytes
  2836 ;; Hardware stack levels used: 1
  2837 ;; Hardware stack levels required when called: 5
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_TMR0_Initialize
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           
  2846                           ;psect for function _TMR0_SetInterruptHandler
  2847  073C                     _TMR0_SetInterruptHandler:
  2848  073C                     l1424:	
  2849                           ;incstack = 0
  2850                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2851                           
  2852                           
  2853                           ;mcc_generated_files/tmr0.c: 129:     TMR0_InterruptHandler = InterruptHandler;
  2854  073C  0020               	movlb	0	; select bank0
  2855  073D  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2856  073E  00D3               	movwf	_TMR0_InterruptHandler+1
  2857  073F  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2858  0740  00D2               	movwf	_TMR0_InterruptHandler
  2859  0741                     l278:
  2860  0741  0008               	return
  2861  0742                     __end_of_TMR0_SetInterruptHandler:
  2862                           
  2863                           	psect	text5
  2864  0699                     __ptext5:	
  2865 ;; *************** function _PIN_MANAGER_Initialize *****************
  2866 ;; Defined at:
  2867 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2881 ;;      Params:         0       0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 5
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_SYSTEM_Initialize
  2892 ;;		_main
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function _PIN_MANAGER_Initialize
  2898  0699                     _PIN_MANAGER_Initialize:
  2899  0699                     l1442:	
  2900                           ;incstack = 0
  2901                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2902                           
  2903                           
  2904                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2905  0699  0022               	movlb	2	; select bank2
  2906  069A  018C               	clrf	12	;volatile
  2907                           
  2908                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2909  069B  018D               	clrf	13	;volatile
  2910  069C                     l1444:
  2911                           
  2912                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xF7;
  2913  069C  30F7               	movlw	247
  2914  069D  0021               	movlb	1	; select bank1
  2915  069E  008C               	movwf	12	;volatile
  2916  069F                     l1446:
  2917                           
  2918                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFE;
  2919  069F  30FE               	movlw	254
  2920  06A0  008D               	movwf	13	;volatile
  2921  06A1                     l1448:
  2922                           
  2923                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  2924  06A1  30C8               	movlw	200
  2925  06A2  0023               	movlb	3	; select bank3
  2926  06A3  008D               	movwf	13	;volatile
  2927  06A4                     l1450:
  2928                           
  2929                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x04;
  2930  06A4  3004               	movlw	4
  2931  06A5  008C               	movwf	12	;volatile
  2932                           
  2933                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2934  06A6  0024               	movlb	4	; select bank4
  2935  06A7  018D               	clrf	13	;volatile
  2936                           
  2937                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2938  06A8  018C               	clrf	12	;volatile
  2939  06A9                     l1452:
  2940                           
  2941                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2942  06A9  0021               	movlb	1	; select bank1
  2943  06AA  1795               	bsf	21,7	;volatile
  2944                           
  2945                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2946  06AB  0022               	movlb	2	; select bank2
  2947  06AC  019D               	clrf	29	;volatile
  2948  06AD                     l1454:
  2949                           
  2950                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  2951  06AD  3001               	movlw	1
  2952  06AE  009E               	movwf	30	;volatile
  2953  06AF                     l25:
  2954  06AF  0008               	return
  2955  06B0                     __end_of_PIN_MANAGER_Initialize:
  2956                           
  2957                           	psect	text6
  2958  072E                     __ptext6:	
  2959 ;; *************** function _OSCILLATOR_Initialize *****************
  2960 ;; Defined at:
  2961 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2962 ;; Parameters:    Size  Location     Type
  2963 ;;		None
  2964 ;; Auto vars:     Size  Location     Type
  2965 ;;		None
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, status,2
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2975 ;;      Params:         0       0       0       0       0       0
  2976 ;;      Locals:         0       0       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0
  2978 ;;      Totals:         0       0       0       0       0       0
  2979 ;;Total ram usage:        0 bytes
  2980 ;; Hardware stack levels used: 1
  2981 ;; Hardware stack levels required when called: 5
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_SYSTEM_Initialize
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           
  2989                           
  2990                           ;psect for function _OSCILLATOR_Initialize
  2991  072E                     _OSCILLATOR_Initialize:
  2992  072E                     l1456:	
  2993                           ;incstack = 0
  2994                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  2995                           
  2996                           
  2997                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x7A;
  2998  072E  307A               	movlw	122
  2999  072F  0021               	movlb	1	; select bank1
  3000  0730  0099               	movwf	25	;volatile
  3001  0731                     l1458:
  3002                           
  3003                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3004  0731  0198               	clrf	24	;volatile
  3005  0732                     l1460:
  3006                           
  3007                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3008  0732  0022               	movlb	2	; select bank2
  3009  0733  0196               	clrf	22	;volatile
  3010  0734                     l54:
  3011  0734  0008               	return
  3012  0735                     __end_of_OSCILLATOR_Initialize:
  3013                           
  3014                           	psect	text7
  3015  061B                     __ptext7:	
  3016 ;; *************** function _EUSART_Initialize *****************
  3017 ;; Defined at:
  3018 ;;		line 79 in file "mcc_generated_files/eusart.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;		None
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  1    wreg      void 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0, pclath, cstack
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3032 ;;      Params:         0       0       0       0       0       0
  3033 ;;      Locals:         0       0       0       0       0       0
  3034 ;;      Temps:          0       0       0       0       0       0
  3035 ;;      Totals:         0       0       0       0       0       0
  3036 ;;Total ram usage:        0 bytes
  3037 ;; Hardware stack levels used: 1
  3038 ;; Hardware stack levels required when called: 6
  3039 ;; This function calls:
  3040 ;;		_EUSART_SetErrorHandler
  3041 ;;		_EUSART_SetFramingErrorHandler
  3042 ;;		_EUSART_SetOverrunErrorHandler
  3043 ;;		_EUSART_SetRxInterruptHandler
  3044 ;;		_EUSART_SetTxInterruptHandler
  3045 ;; This function is called by:
  3046 ;;		_SYSTEM_Initialize
  3047 ;;		_main
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           
  3052                           ;psect for function _EUSART_Initialize
  3053  061B                     _EUSART_Initialize:
  3054  061B                     l1480:	
  3055                           ;incstack = 0
  3056                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3057                           
  3058                           
  3059                           ;mcc_generated_files/eusart.c: 82:     PIE1bits.RCIE = 0;
  3060  061B  0021               	movlb	1	; select bank1
  3061  061C  1291               	bcf	17,5	;volatile
  3062  061D                     l1482:
  3063                           
  3064                           ;mcc_generated_files/eusart.c: 83:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3065  061D  3056               	movlw	low _EUSART_Receive_ISR
  3066  061E  0020               	movlb	0	; select bank0
  3067  061F  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3068  0620  3006               	movlw	high _EUSART_Receive_ISR
  3069  0621  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3070  0622  3187  2748  3186   	fcall	_EUSART_SetRxInterruptHandler
  3071  0625                     l1484:
  3072                           
  3073                           ;mcc_generated_files/eusart.c: 84:     PIE1bits.TXIE = 0;
  3074  0625  0021               	movlb	1	; select bank1
  3075  0626  1211               	bcf	17,4	;volatile
  3076                           
  3077                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3078  0627  3077               	movlw	low _EUSART_Transmit_ISR
  3079  0628  0020               	movlb	0	; select bank0
  3080  0629  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3081  062A  3007               	movlw	high _EUSART_Transmit_ISR
  3082  062B  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3083  062C  3187  2742  3186   	fcall	_EUSART_SetTxInterruptHandler
  3084  062F                     l1486:
  3085                           
  3086                           ;mcc_generated_files/eusart.c: 89:     BAUDCON = 0x08;
  3087  062F  3008               	movlw	8
  3088  0630  0023               	movlb	3	; select bank3
  3089  0631  009F               	movwf	31	;volatile
  3090  0632                     l1488:
  3091                           
  3092                           ;mcc_generated_files/eusart.c: 92:     RCSTA = 0x90;
  3093  0632  3090               	movlw	144
  3094  0633  009D               	movwf	29	;volatile
  3095  0634                     l1490:
  3096                           
  3097                           ;mcc_generated_files/eusart.c: 95:     TXSTA = 0x24;
  3098  0634  3024               	movlw	36
  3099  0635  009E               	movwf	30	;volatile
  3100  0636                     l1492:
  3101                           
  3102                           ;mcc_generated_files/eusart.c: 98:     SPBRGL = 0xA0;
  3103  0636  30A0               	movlw	160
  3104  0637  009B               	movwf	27	;volatile
  3105  0638                     l1494:
  3106                           
  3107                           ;mcc_generated_files/eusart.c: 101:     SPBRGH = 0x01;
  3108  0638  3001               	movlw	1
  3109  0639  009C               	movwf	28	;volatile
  3110  063A                     l1496:
  3111                           
  3112                           ;mcc_generated_files/eusart.c: 104:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3113  063A  307A               	movlw	low _EUSART_DefaultFramingErrorHandler
  3114  063B  0020               	movlb	0	; select bank0
  3115  063C  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3116  063D  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  3117  063E  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3118  063F  3187  2754  3186   	fcall	_EUSART_SetFramingErrorHandler
  3119  0642                     l1498:
  3120                           
  3121                           ;mcc_generated_files/eusart.c: 105:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3122  0642  3069               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3123  0643  0020               	movlb	0	; select bank0
  3124  0644  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3125  0645  3007               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3126  0646  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3127  0647  3187  274E  3186   	fcall	_EUSART_SetOverrunErrorHandler
  3128  064A                     l1500:
  3129                           
  3130                           ;mcc_generated_files/eusart.c: 106:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3131  064A  306D               	movlw	low _EUSART_DefaultErrorHandler
  3132  064B  0020               	movlb	0	; select bank0
  3133  064C  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3134  064D  3007               	movlw	high _EUSART_DefaultErrorHandler
  3135  064E  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3136  064F  3187  275A  3186   	fcall	_EUSART_SetErrorHandler
  3137  0652                     l1502:
  3138                           
  3139                           ;mcc_generated_files/eusart.c: 108:     eusartRxLastError.status = 0;
  3140  0652  01FB               	clrf	_eusartRxLastError	;volatile
  3141  0653                     l1504:
  3142                           
  3143                           ;mcc_generated_files/eusart.c: 113:     PIE1bits.RCIE = 1;
  3144  0653  0021               	movlb	1	; select bank1
  3145  0654  1691               	bsf	17,5	;volatile
  3146  0655                     l118:
  3147  0655  0008               	return
  3148  0656                     __end_of_EUSART_Initialize:
  3149                           
  3150                           	psect	text8
  3151  0742                     __ptext8:	
  3152 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3153 ;; Defined at:
  3154 ;;		line 248 in file "mcc_generated_files/eusart.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3157 ;;		 -> EUSART_Transmit_ISR(1), 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;		None
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      void 
  3162 ;; Registers used:
  3163 ;;		wreg
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3169 ;;      Params:         0       2       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0
  3171 ;;      Temps:          0       0       0       0       0       0
  3172 ;;      Totals:         0       2       0       0       0       0
  3173 ;;Total ram usage:        2 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 5
  3176 ;; This function calls:
  3177 ;;		Nothing
  3178 ;; This function is called by:
  3179 ;;		_EUSART_Initialize
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           
  3184                           ;psect for function _EUSART_SetTxInterruptHandler
  3185  0742                     _EUSART_SetTxInterruptHandler:
  3186  0742                     l1396:	
  3187                           ;incstack = 0
  3188                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3189                           
  3190                           
  3191                           ;mcc_generated_files/eusart.c: 249:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3192  0742  0020               	movlb	0	; select bank0
  3193  0743  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3194  0744  00DD               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3195  0745  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3196  0746  00DC               	movwf	_EUSART_TxDefaultInterruptHandler
  3197  0747                     l175:
  3198  0747  0008               	return
  3199  0748                     __end_of_EUSART_SetTxInterruptHandler:
  3200                           
  3201                           	psect	text9
  3202  0748                     __ptext9:	
  3203 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3204 ;; Defined at:
  3205 ;;		line 252 in file "mcc_generated_files/eusart.c"
  3206 ;; Parameters:    Size  Location     Type
  3207 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3208 ;;		 -> EUSART_Receive_ISR(1), 
  3209 ;; Auto vars:     Size  Location     Type
  3210 ;;		None
  3211 ;; Return value:  Size  Location     Type
  3212 ;;                  1    wreg      void 
  3213 ;; Registers used:
  3214 ;;		wreg
  3215 ;; Tracked objects:
  3216 ;;		On entry : 0/0
  3217 ;;		On exit  : 0/0
  3218 ;;		Unchanged: 0/0
  3219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3220 ;;      Params:         0       2       0       0       0       0
  3221 ;;      Locals:         0       0       0       0       0       0
  3222 ;;      Temps:          0       0       0       0       0       0
  3223 ;;      Totals:         0       2       0       0       0       0
  3224 ;;Total ram usage:        2 bytes
  3225 ;; Hardware stack levels used: 1
  3226 ;; Hardware stack levels required when called: 5
  3227 ;; This function calls:
  3228 ;;		Nothing
  3229 ;; This function is called by:
  3230 ;;		_EUSART_Initialize
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           
  3234                           
  3235                           ;psect for function _EUSART_SetRxInterruptHandler
  3236  0748                     _EUSART_SetRxInterruptHandler:
  3237  0748                     l1394:	
  3238                           ;incstack = 0
  3239                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3240                           
  3241                           
  3242                           ;mcc_generated_files/eusart.c: 253:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3243  0748  0020               	movlb	0	; select bank0
  3244  0749  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3245  074A  00DB               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3246  074B  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3247  074C  00DA               	movwf	_EUSART_RxDefaultInterruptHandler
  3248  074D                     l178:
  3249  074D  0008               	return
  3250  074E                     __end_of_EUSART_SetRxInterruptHandler:
  3251                           
  3252                           	psect	text10
  3253  074E                     __ptext10:	
  3254 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3255 ;; Defined at:
  3256 ;;		line 240 in file "mcc_generated_files/eusart.c"
  3257 ;; Parameters:    Size  Location     Type
  3258 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3259 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;                  1    wreg      void 
  3264 ;; Registers used:
  3265 ;;		wreg
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3271 ;;      Params:         0       2       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0
  3274 ;;      Totals:         0       2       0       0       0       0
  3275 ;;Total ram usage:        2 bytes
  3276 ;; Hardware stack levels used: 1
  3277 ;; Hardware stack levels required when called: 5
  3278 ;; This function calls:
  3279 ;;		Nothing
  3280 ;; This function is called by:
  3281 ;;		_EUSART_Initialize
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285                           
  3286                           ;psect for function _EUSART_SetOverrunErrorHandler
  3287  074E                     _EUSART_SetOverrunErrorHandler:
  3288  074E                     l1400:	
  3289                           ;incstack = 0
  3290                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3291                           
  3292                           
  3293                           ;mcc_generated_files/eusart.c: 241:     EUSART_OverrunErrorHandler = interruptHandler;
  3294  074E  0020               	movlb	0	; select bank0
  3295  074F  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3296  0750  00D7               	movwf	_EUSART_OverrunErrorHandler+1
  3297  0751  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3298  0752  00D6               	movwf	_EUSART_OverrunErrorHandler
  3299  0753                     l169:
  3300  0753  0008               	return
  3301  0754                     __end_of_EUSART_SetOverrunErrorHandler:
  3302                           
  3303                           	psect	text11
  3304  0754                     __ptext11:	
  3305 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3306 ;; Defined at:
  3307 ;;		line 236 in file "mcc_generated_files/eusart.c"
  3308 ;; Parameters:    Size  Location     Type
  3309 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3310 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3322 ;;      Params:         0       2       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0
  3325 ;;      Totals:         0       2       0       0       0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 5
  3329 ;; This function calls:
  3330 ;;		Nothing
  3331 ;; This function is called by:
  3332 ;;		_EUSART_Initialize
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           
  3337                           ;psect for function _EUSART_SetFramingErrorHandler
  3338  0754                     _EUSART_SetFramingErrorHandler:
  3339  0754                     l1398:	
  3340                           ;incstack = 0
  3341                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3342                           
  3343                           
  3344                           ;mcc_generated_files/eusart.c: 237:     EUSART_FramingErrorHandler = interruptHandler;
  3345  0754  0020               	movlb	0	; select bank0
  3346  0755  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3347  0756  00D9               	movwf	_EUSART_FramingErrorHandler+1
  3348  0757  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3349  0758  00D8               	movwf	_EUSART_FramingErrorHandler
  3350  0759                     l166:
  3351  0759  0008               	return
  3352  075A                     __end_of_EUSART_SetFramingErrorHandler:
  3353                           
  3354                           	psect	text12
  3355  075A                     __ptext12:	
  3356 ;; *************** function _EUSART_SetErrorHandler *****************
  3357 ;; Defined at:
  3358 ;;		line 244 in file "mcc_generated_files/eusart.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3361 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3362 ;; Auto vars:     Size  Location     Type
  3363 ;;		None
  3364 ;; Return value:  Size  Location     Type
  3365 ;;                  1    wreg      void 
  3366 ;; Registers used:
  3367 ;;		wreg
  3368 ;; Tracked objects:
  3369 ;;		On entry : 0/0
  3370 ;;		On exit  : 0/0
  3371 ;;		Unchanged: 0/0
  3372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3373 ;;      Params:         0       2       0       0       0       0
  3374 ;;      Locals:         0       0       0       0       0       0
  3375 ;;      Temps:          0       0       0       0       0       0
  3376 ;;      Totals:         0       2       0       0       0       0
  3377 ;;Total ram usage:        2 bytes
  3378 ;; Hardware stack levels used: 1
  3379 ;; Hardware stack levels required when called: 5
  3380 ;; This function calls:
  3381 ;;		Nothing
  3382 ;; This function is called by:
  3383 ;;		_EUSART_Initialize
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           
  3388                           ;psect for function _EUSART_SetErrorHandler
  3389  075A                     _EUSART_SetErrorHandler:
  3390  075A                     l1402:	
  3391                           ;incstack = 0
  3392                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3393                           
  3394                           
  3395                           ;mcc_generated_files/eusart.c: 245:     EUSART_ErrorHandler = interruptHandler;
  3396  075A  0020               	movlb	0	; select bank0
  3397  075B  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3398  075C  00D5               	movwf	_EUSART_ErrorHandler+1
  3399  075D  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3400  075E  00D4               	movwf	_EUSART_ErrorHandler
  3401  075F                     l172:
  3402  075F  0008               	return
  3403  0760                     __end_of_EUSART_SetErrorHandler:
  3404                           
  3405                           	psect	text13
  3406  0735                     __ptext13:	
  3407 ;; *************** function _ADC_Initialize *****************
  3408 ;; Defined at:
  3409 ;;		line 67 in file "mcc_generated_files/adc.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;		None
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;		None
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  1    wreg      void 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3423 ;;      Params:         0       0       0       0       0       0
  3424 ;;      Locals:         0       0       0       0       0       0
  3425 ;;      Temps:          0       0       0       0       0       0
  3426 ;;      Totals:         0       0       0       0       0       0
  3427 ;;Total ram usage:        0 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 5
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_SYSTEM_Initialize
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _ADC_Initialize
  3439  0735                     _ADC_Initialize:
  3440  0735                     l1476:	
  3441                           ;incstack = 0
  3442                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3443                           
  3444                           
  3445                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x00;
  3446  0735  0021               	movlb	1	; select bank1
  3447  0736  019E               	clrf	30	;volatile
  3448                           
  3449                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3450  0737  019B               	clrf	27	;volatile
  3451                           
  3452                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3453  0738  019C               	clrf	28	;volatile
  3454  0739                     l1478:
  3455                           
  3456                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  3457  0739  3001               	movlw	1
  3458  073A  009D               	movwf	29	;volatile
  3459  073B                     l195:
  3460  073B  0008               	return
  3461  073C                     __end_of_ADC_Initialize:
  3462                           
  3463                           	psect	text14
  3464  0723                     __ptext14:	
  3465 ;; *************** function _MOS_vModbusInit *****************
  3466 ;; Defined at:
  3467 ;;		line 17 in file "Modbus_uart/Modbus.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3481 ;;      Params:         0       0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0
  3483 ;;      Temps:          0       1       0       0       0       0
  3484 ;;      Totals:         0       1       0       0       0       0
  3485 ;;Total ram usage:        1 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 5
  3488 ;; This function calls:
  3489 ;;		Nothing
  3490 ;; This function is called by:
  3491 ;;		_main
  3492 ;; This function uses a non-reentrant model
  3493 ;;
  3494                           
  3495                           
  3496                           ;psect for function _MOS_vModbusInit
  3497  0723                     _MOS_vModbusInit:
  3498  0723                     l1656:	
  3499                           ;incstack = 0
  3500                           ; Regs used in _MOS_vModbusInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3501                           
  3502                           
  3503                           ;Modbus_uart/Modbus.c: 19:  MOS_tModbusPara.u8DeviceAddress = 4;
  3504  0723  3004               	movlw	4
  3505  0724  0020               	movlb	0	; select bank0
  3506  0725  00A0               	movwf	??_MOS_vModbusInit
  3507  0726  0820               	movf	??_MOS_vModbusInit,w
  3508  0727  00E0               	movwf	_MOS_tModbusPara
  3509  0728                     l1658:
  3510                           
  3511                           ;Modbus_uart/Modbus.c: 20:  MOS_tModbusData.u8TimeoutStart = 0;
  3512  0728  300A               	movlw	10
  3513  0729  0086               	movwf	6
  3514  072A  3021               	movlw	33
  3515  072B  0087               	movwf	7
  3516  072C  0181               	clrf	1
  3517  072D                     l338:
  3518  072D  0008               	return
  3519  072E                     __end_of_MOS_vModbusInit:
  3520                           
  3521                           	psect	text15
  3522  047F                     __ptext15:	
  3523 ;; *************** function _MOS_vModBusHandler *****************
  3524 ;; Defined at:
  3525 ;;		line 111 in file "Modbus_uart/Modbus.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;		None
  3528 ;; Auto vars:     Size  Location     Type
  3529 ;;  u16ReceivedC    2   47[BANK0 ] unsigned short 
  3530 ;;  u16Calculate    2   44[BANK0 ] unsigned short 
  3531 ;;  u16ReceivedA    1   49[BANK0 ] unsigned char 
  3532 ;;  u16ReceivedF    1   46[BANK0 ] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3542 ;;      Params:         0       0       0       0       0       0
  3543 ;;      Locals:         0       6       0       0       0       0
  3544 ;;      Temps:          0       7       0       0       0       0
  3545 ;;      Totals:         0      13       0       0       0       0
  3546 ;;Total ram usage:       13 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 7
  3549 ;; This function calls:
  3550 ;;		_MOS_vModbudFun3
  3551 ;;		_MOS_vModbudFun6
  3552 ;;		_crc16
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           
  3559                           ;psect for function _MOS_vModBusHandler
  3560  047F                     _MOS_vModBusHandler:
  3561  047F                     l1660:	
  3562                           ;incstack = 0
  3563                           ; Regs used in _MOS_vModBusHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3564                           
  3565                           
  3566                           ;Modbus_uart/Modbus.c: 113:  uint16_t u16CalculateCRC;;Modbus_uart/Modbus.c: 114:  uint1
      +                          6_t u16ReceivedCRC;;Modbus_uart/Modbus.c: 116:  uint8_t u16ReceivedAddress;;Modbus_uart/
      +                          Modbus.c: 117:  uint8_t u16ReceivedFunctionCode;;Modbus_uart/Modbus.c: 118:  if(0 == MOS
      +                          _tModbusData.u8OneFrameFinish)
  3567  047F  3008               	movlw	8
  3568  0480  0086               	movwf	6
  3569  0481  3021               	movlw	33
  3570  0482  0087               	movwf	7
  3571  0483  0801               	movf	1,w
  3572  0484  1D03               	btfss	3,2
  3573  0485  2C87               	goto	u421
  3574  0486  2C88               	goto	u420
  3575  0487                     u421:
  3576  0487  2C89               	goto	l1664
  3577  0488                     u420:
  3578  0488  2D2E               	goto	l367
  3579  0489                     l1664:
  3580                           
  3581                           ;Modbus_uart/Modbus.c: 123:  u16ReceivedAddress = MOS_tModbusData.auReceiveBuff[0];
  3582  0489  30A4               	movlw	164
  3583  048A  0086               	movwf	6
  3584  048B  3020               	movlw	32
  3585  048C  0087               	movwf	7
  3586  048D  0801               	movf	1,w
  3587  048E  0020               	movlb	0	; select bank0
  3588  048F  00C5               	movwf	??_MOS_vModBusHandler
  3589  0490  0845               	movf	??_MOS_vModBusHandler,w
  3590  0491  00D1               	movwf	MOS_vModBusHandler@u16ReceivedAddress
  3591                           
  3592                           ;Modbus_uart/Modbus.c: 124:  u16ReceivedFunctionCode = MOS_tModbusData.auReceiveBuff[1];
  3593  0492  30A4               	movlw	164
  3594  0493  0086               	movwf	6
  3595  0494  3020               	movlw	32
  3596  0495  0087               	movwf	7
  3597  0496  3141               	addfsr 1,1
  3598  0497  0801               	movf	1,w
  3599  0498  00C5               	movwf	??_MOS_vModBusHandler
  3600  0499  0845               	movf	??_MOS_vModBusHandler,w
  3601  049A  00CE               	movwf	MOS_vModBusHandler@u16ReceivedFunctionCode
  3602  049B                     l1666:
  3603                           
  3604                           ;Modbus_uart/Modbus.c: 126:  u16CalculateCRC= crc16(&MOS_tModbusData.auReceiveBuff[0], M
      +                          OS_tModbusData.u8ReceivedByteCount-2);
  3605  049B  30A4               	movlw	164
  3606  049C  00A0               	movwf	crc16@puchMsg
  3607  049D  3020               	movlw	32
  3608  049E  00A1               	movwf	crc16@puchMsg+1
  3609  049F  3009               	movlw	9
  3610  04A0  0086               	movwf	6
  3611  04A1  3021               	movlw	33
  3612  04A2  0087               	movwf	7
  3613  04A3  0801               	movf	1,w
  3614  04A4  3EFE               	addlw	254
  3615  04A5  00A2               	movwf	crc16@usDataLen
  3616  04A6  30FF               	movlw	255
  3617  04A7  1803               	skipnc
  3618  04A8  3000               	movlw	0
  3619  04A9  00A3               	movwf	crc16@usDataLen+1
  3620  04AA  3185  2585  3184   	fcall	_crc16
  3621  04AD  0020               	movlb	0	; select bank0
  3622  04AE  0821               	movf	?_crc16+1,w
  3623  04AF  00CD               	movwf	MOS_vModBusHandler@u16CalculateCRC+1
  3624  04B0  0820               	movf	?_crc16,w
  3625  04B1  00CC               	movwf	MOS_vModBusHandler@u16CalculateCRC
  3626  04B2                     l1668:
  3627                           
  3628                           ;Modbus_uart/Modbus.c: 128:    u16ReceivedCRC= (MOS_tModbusData.auReceiveBuff[MOS_tModbu
      +                          sData.u8ReceivedByteCount-2]*256);
  3629  04B2  3009               	movlw	9
  3630  04B3  0086               	movwf	6
  3631  04B4  3021               	movlw	33
  3632  04B5  0087               	movwf	7
  3633  04B6  0801               	movf	1,w
  3634  04B7  00C5               	movwf	??_MOS_vModBusHandler
  3635  04B8  01C6               	clrf	??_MOS_vModBusHandler+1
  3636  04B9  30A2               	movlw	162
  3637  04BA  00C7               	movwf	??_MOS_vModBusHandler+2
  3638  04BB  3020               	movlw	32
  3639  04BC  00C8               	movwf	??_MOS_vModBusHandler+3
  3640  04BD  0845               	movf	??_MOS_vModBusHandler,w
  3641  04BE  0747               	addwf	??_MOS_vModBusHandler+2,w
  3642  04BF  0086               	movwf	6
  3643  04C0  0846               	movf	??_MOS_vModBusHandler+1,w
  3644  04C1  3D48               	addwfc	??_MOS_vModBusHandler+3,w
  3645  04C2  0087               	movwf	7
  3646  04C3  0801               	movf	1,w
  3647  04C4  00C9               	movwf	??_MOS_vModBusHandler+4
  3648  04C5  01CA               	clrf	??_MOS_vModBusHandler+5
  3649  04C6  0849               	movf	??_MOS_vModBusHandler+4,w
  3650  04C7  00CA               	movwf	??_MOS_vModBusHandler+5
  3651  04C8  01C9               	clrf	??_MOS_vModBusHandler+4
  3652  04C9  0849               	movf	??_MOS_vModBusHandler+4,w
  3653  04CA  00CF               	movwf	MOS_vModBusHandler@u16ReceivedCRC
  3654  04CB  084A               	movf	??_MOS_vModBusHandler+5,w
  3655  04CC  00D0               	movwf	MOS_vModBusHandler@u16ReceivedCRC+1
  3656  04CD                     l1670:
  3657                           
  3658                           ;Modbus_uart/Modbus.c: 129:  u16ReceivedCRC = u16ReceivedCRC + MOS_tModbusData.auReceive
      +                          Buff[MOS_tModbusData.u8ReceivedByteCount -1];
  3659  04CD  3009               	movlw	9
  3660  04CE  0086               	movwf	6
  3661  04CF  3021               	movlw	33
  3662  04D0  0087               	movwf	7
  3663  04D1  0801               	movf	1,w
  3664  04D2  00C5               	movwf	??_MOS_vModBusHandler
  3665  04D3  01C6               	clrf	??_MOS_vModBusHandler+1
  3666  04D4  30A3               	movlw	163
  3667  04D5  00C7               	movwf	??_MOS_vModBusHandler+2
  3668  04D6  3020               	movlw	32
  3669  04D7  00C8               	movwf	??_MOS_vModBusHandler+3
  3670  04D8  0845               	movf	??_MOS_vModBusHandler,w
  3671  04D9  0747               	addwf	??_MOS_vModBusHandler+2,w
  3672  04DA  0086               	movwf	6
  3673  04DB  0846               	movf	??_MOS_vModBusHandler+1,w
  3674  04DC  3D48               	addwfc	??_MOS_vModBusHandler+3,w
  3675  04DD  0087               	movwf	7
  3676  04DE  0801               	movf	1,w
  3677  04DF  074F               	addwf	MOS_vModBusHandler@u16ReceivedCRC,w
  3678  04E0  00C9               	movwf	??_MOS_vModBusHandler+4
  3679  04E1  0850               	movf	MOS_vModBusHandler@u16ReceivedCRC+1,w
  3680  04E2  1803               	skipnc
  3681  04E3  0A50               	incf	MOS_vModBusHandler@u16ReceivedCRC+1,w
  3682  04E4  00CA               	movwf	??_MOS_vModBusHandler+5
  3683  04E5  0849               	movf	??_MOS_vModBusHandler+4,w
  3684  04E6  00CF               	movwf	MOS_vModBusHandler@u16ReceivedCRC
  3685  04E7  084A               	movf	??_MOS_vModBusHandler+5,w
  3686  04E8  00D0               	movwf	MOS_vModBusHandler@u16ReceivedCRC+1
  3687  04E9                     l1672:
  3688                           
  3689                           ;Modbus_uart/Modbus.c: 130:    if(u16CalculateCRC == u16ReceivedCRC)
  3690  04E9  0850               	movf	MOS_vModBusHandler@u16ReceivedCRC+1,w
  3691  04EA  064D               	xorwf	MOS_vModBusHandler@u16CalculateCRC+1,w
  3692  04EB  1D03               	skipz
  3693  04EC  2CEF               	goto	u435
  3694  04ED  084F               	movf	MOS_vModBusHandler@u16ReceivedCRC,w
  3695  04EE  064C               	xorwf	MOS_vModBusHandler@u16CalculateCRC,w
  3696  04EF                     u435:
  3697  04EF  1D03               	skipz
  3698  04F0  2CF2               	goto	u431
  3699  04F1  2CF3               	goto	u430
  3700  04F2                     u431:
  3701  04F2  2D24               	goto	l1688
  3702  04F3                     u430:
  3703  04F3                     l1674:
  3704                           
  3705                           ;Modbus_uart/Modbus.c: 131:  {;Modbus_uart/Modbus.c: 132:    if(u16ReceivedAddress == MO
      +                          S_tModbusPara.u8DeviceAddress)
  3706  04F3  0860               	movf	_MOS_tModbusPara,w
  3707  04F4  0651               	xorwf	MOS_vModBusHandler@u16ReceivedAddress,w
  3708  04F5  1D03               	skipz
  3709  04F6  2CF8               	goto	u441
  3710  04F7  2CF9               	goto	u440
  3711  04F8                     u441:
  3712  04F8  2D24               	goto	l1688
  3713  04F9                     u440:
  3714  04F9  2D02               	goto	l1684
  3715  04FA                     l1678:
  3716  04FA  3180  205D  3184   	fcall	_MOS_vModbudFun3
  3717  04FD  2D24               	goto	l1688
  3718  04FE                     l1680:
  3719  04FE  3181  217B  3184   	fcall	_MOS_vModbudFun6
  3720  0501  2D24               	goto	l1688
  3721  0502                     l1684:
  3722  0502  084E               	movf	MOS_vModBusHandler@u16ReceivedFunctionCode,w
  3723  0503  00C5               	movwf	??_MOS_vModBusHandler
  3724  0504  01C6               	clrf	??_MOS_vModBusHandler+1
  3725                           
  3726                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3727                           ; Switch size 1, requested type "simple"
  3728                           ; Number of cases is 1, Range of values is 0 to 0
  3729                           ; switch strategies available:
  3730                           ; Name         Instructions Cycles
  3731                           ; simple_byte            4     3 (average)
  3732                           ; direct_byte            8     6 (fixed)
  3733                           ; jumptable            260     6 (fixed)
  3734                           ;	Chosen strategy is simple_byte
  3735  0505  0846               	movf	??_MOS_vModBusHandler+1,w
  3736  0506  3A00               	xorlw	0	; case 0
  3737  0507  1903               	skipnz
  3738  0508  2D0A               	goto	l1742
  3739  0509  2D24               	goto	l1688
  3740  050A                     l1742:
  3741                           
  3742                           ; Switch size 1, requested type "simple"
  3743                           ; Number of cases is 8, Range of values is 0 to 7
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; direct_byte           22     6 (fixed)
  3747                           ; simple_byte           25    13 (average)
  3748                           ; jumptable            260     6 (fixed)
  3749                           ;	Chosen strategy is simple_byte
  3750  050A  0845               	movf	??_MOS_vModBusHandler,w
  3751  050B  3A00               	xorlw	0	; case 0
  3752  050C  1903               	skipnz
  3753  050D  2D24               	goto	l380
  3754  050E  3A01               	xorlw	1	; case 1
  3755  050F  1903               	skipnz
  3756  0510  2D24               	goto	l380
  3757  0511  3A03               	xorlw	3	; case 2
  3758  0512  1903               	skipnz
  3759  0513  2D24               	goto	l380
  3760  0514  3A01               	xorlw	1	; case 3
  3761  0515  1903               	skipnz
  3762  0516  2CFA               	goto	l1678
  3763  0517  3A07               	xorlw	7	; case 4
  3764  0518  1903               	skipnz
  3765  0519  2D24               	goto	l380
  3766  051A  3A01               	xorlw	1	; case 5
  3767  051B  1903               	skipnz
  3768  051C  2D24               	goto	l380
  3769  051D  3A03               	xorlw	3	; case 6
  3770  051E  1903               	skipnz
  3771  051F  2CFE               	goto	l1680
  3772  0520  3A01               	xorlw	1	; case 7
  3773  0521  1903               	skipnz
  3774  0522  2D24               	goto	l380
  3775  0523  2D24               	goto	l1688
  3776  0524                     l380:
  3777  0524                     l1688:
  3778                           
  3779                           ;Modbus_uart/Modbus.c: 152:  MOS_tModbusData.u8ReceivedByteCount = 0;
  3780  0524  3009               	movlw	9
  3781  0525  0086               	movwf	6
  3782  0526  3021               	movlw	33
  3783  0527  0087               	movwf	7
  3784  0528  0181               	clrf	1
  3785                           
  3786                           ;Modbus_uart/Modbus.c: 153:     MOS_tModbusData.u8OneFrameFinish = 0;
  3787  0529  3008               	movlw	8
  3788  052A  0086               	movwf	6
  3789  052B  3021               	movlw	33
  3790  052C  0087               	movwf	7
  3791  052D  0181               	clrf	1
  3792  052E                     l367:
  3793  052E  0008               	return
  3794  052F                     __end_of_MOS_vModBusHandler:
  3795                           
  3796                           	psect	text16
  3797  017B                     __ptext16:	
  3798 ;; *************** function _MOS_vModbudFun6 *****************
  3799 ;; Defined at:
  3800 ;;		line 70 in file "Modbus_uart/Modbus.c"
  3801 ;; Parameters:    Size  Location     Type
  3802 ;;		None
  3803 ;; Auto vars:     Size  Location     Type
  3804 ;;  i               2   28[BANK0 ] unsigned short 
  3805 ;;  u16value        2   26[BANK0 ] unsigned short 
  3806 ;;  u16RegisterA    2   24[BANK0 ] unsigned short 
  3807 ;;  j               2   22[BANK0 ] unsigned short 
  3808 ;;  u16TransmitC    2   20[BANK0 ] unsigned short 
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3818 ;;      Params:         0       0       0       0       0       0
  3819 ;;      Locals:         0      10       0       0       0       0
  3820 ;;      Temps:          0       5       0       0       0       0
  3821 ;;      Totals:         0      15       0       0       0       0
  3822 ;;Total ram usage:       15 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; Hardware stack levels required when called: 6
  3825 ;; This function calls:
  3826 ;;		_EUSART_Write
  3827 ;;		_MOS_vModbusTransmitEnalbe
  3828 ;;		_crc16
  3829 ;; This function is called by:
  3830 ;;		_MOS_vModBusHandler
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           
  3835                           ;psect for function _MOS_vModbudFun6
  3836  017B                     _MOS_vModbudFun6:
  3837  017B                     l1572:	
  3838                           ;incstack = 0
  3839                           ; Regs used in _MOS_vModbudFun6: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3840                           
  3841                           
  3842                           ;Modbus_uart/Modbus.c: 73:  uint16_t u16value = 0;
  3843  017B  0020               	movlb	0	; select bank0
  3844  017C  01BA               	clrf	MOS_vModbudFun6@u16value
  3845  017D  01BB               	clrf	MOS_vModbudFun6@u16value+1
  3846                           
  3847                           ;Modbus_uart/Modbus.c: 74:  uint16_t i = 0;
  3848  017E  01BC               	clrf	MOS_vModbudFun6@i
  3849  017F  01BD               	clrf	MOS_vModbudFun6@i+1
  3850                           
  3851                           ;Modbus_uart/Modbus.c: 75:  uint16_t u16TransmitCRC = 0;
  3852  0180  01B4               	clrf	MOS_vModbudFun6@u16TransmitCRC
  3853  0181  01B5               	clrf	MOS_vModbudFun6@u16TransmitCRC+1
  3854                           
  3855                           ;Modbus_uart/Modbus.c: 76:  uint16_t j = 0;
  3856  0182  01B6               	clrf	MOS_vModbudFun6@j
  3857  0183  01B7               	clrf	MOS_vModbudFun6@j+1
  3858  0184                     l1574:
  3859                           
  3860                           ;Modbus_uart/Modbus.c: 78:    u16RegisterAdd=MOS_tModbusData.auReceiveBuff[2]*256+MOS_tM
      +                          odbusData.auReceiveBuff[3];
  3861  0184  30A4               	movlw	164
  3862  0185  0086               	movwf	6
  3863  0186  3020               	movlw	32
  3864  0187  0087               	movwf	7
  3865  0188  3143               	addfsr 1,3
  3866  0189  30A4               	movlw	164
  3867  018A  0084               	movwf	4
  3868  018B  3020               	movlw	32
  3869  018C  0085               	movwf	5
  3870  018D  3102               	addfsr 0,2
  3871  018E  0800               	movf	0,w
  3872  018F  00B9               	movwf	MOS_vModbudFun6@u16RegisterAdd+1
  3873  0190  0801               	movf	1,w
  3874  0191  00B8               	movwf	MOS_vModbudFun6@u16RegisterAdd
  3875  0192                     l1576:
  3876                           
  3877                           ;Modbus_uart/Modbus.c: 79:  u16value=MOS_tModbusData.auReceiveBuff[4]*256+MOS_tModbusDat
      +                          a.auReceiveBuff[5];
  3878  0192  30A4               	movlw	164
  3879  0193  0086               	movwf	6
  3880  0194  3020               	movlw	32
  3881  0195  0087               	movwf	7
  3882  0196  3145               	addfsr 1,5
  3883  0197  30A4               	movlw	164
  3884  0198  0084               	movwf	4
  3885  0199  3020               	movlw	32
  3886  019A  0085               	movwf	5
  3887  019B  3104               	addfsr 0,4
  3888  019C  0800               	movf	0,w
  3889  019D  00BB               	movwf	MOS_vModbudFun6@u16value+1
  3890  019E  0801               	movf	1,w
  3891  019F  00BA               	movwf	MOS_vModbudFun6@u16value
  3892  01A0                     l1578:
  3893                           
  3894                           ;Modbus_uart/Modbus.c: 80:  Reg[u16RegisterAdd]=u16value;
  3895  01A0  3538               	lslf	MOS_vModbudFun6@u16RegisterAdd,w
  3896  01A1  3EA0               	addlw	(low (_Reg| 0))& (0+255)
  3897  01A2  0086               	movwf	6
  3898  01A3  0187               	clrf	7
  3899  01A4  083A               	movf	MOS_vModbudFun6@u16value,w
  3900  01A5  3FC0               	movwi [0]fsr1
  3901  01A6  083B               	movf	MOS_vModbudFun6@u16value+1,w
  3902  01A7  3FC1               	movwi [1]fsr1
  3903  01A8                     l1580:
  3904                           
  3905                           ;Modbus_uart/Modbus.c: 84:  MOS_tModbusData.auTransmitBuff[i++]=MOS_tModbusPara.u8Device
      +                          Address;
  3906  01A8  300B               	movlw	11
  3907  01A9  0086               	movwf	6
  3908  01AA  3021               	movlw	33
  3909  01AB  0087               	movwf	7
  3910  01AC  0860               	movf	_MOS_tModbusPara,w
  3911  01AD  0081               	movwf	1
  3912  01AE                     l1582:
  3913  01AE  3001               	movlw	1
  3914  01AF  07BC               	addwf	MOS_vModbudFun6@i,f
  3915  01B0  3000               	movlw	0
  3916  01B1  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  3917  01B2                     l1584:
  3918                           
  3919                           ;Modbus_uart/Modbus.c: 85:    MOS_tModbusData.auTransmitBuff[i++]=0x06;
  3920  01B2  300B               	movlw	11
  3921  01B3  00AF               	movwf	??_MOS_vModbudFun6
  3922  01B4  3021               	movlw	33
  3923  01B5  00B0               	movwf	??_MOS_vModbudFun6+1
  3924  01B6  083C               	movf	MOS_vModbudFun6@i,w
  3925  01B7  072F               	addwf	??_MOS_vModbudFun6,w
  3926  01B8  00B1               	movwf	??_MOS_vModbudFun6+2
  3927  01B9  083D               	movf	MOS_vModbudFun6@i+1,w
  3928  01BA  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  3929  01BB  00B2               	movwf	??_MOS_vModbudFun6+3
  3930  01BC  0831               	movf	??_MOS_vModbudFun6+2,w
  3931  01BD  0086               	movwf	6
  3932  01BE  0832               	movf	??_MOS_vModbudFun6+3,w
  3933  01BF  0087               	movwf	7
  3934  01C0  3006               	movlw	6
  3935  01C1  0081               	movwf	1
  3936  01C2                     l1586:
  3937  01C2  3001               	movlw	1
  3938  01C3  07BC               	addwf	MOS_vModbudFun6@i,f
  3939  01C4  3000               	movlw	0
  3940  01C5  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  3941  01C6                     l1588:
  3942                           
  3943                           ;Modbus_uart/Modbus.c: 86:    MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16RegisterA
      +                          dd/256);
  3944  01C6  0839               	movf	MOS_vModbudFun6@u16RegisterAdd+1,w
  3945  01C7  00AF               	movwf	??_MOS_vModbudFun6
  3946  01C8  300B               	movlw	11
  3947  01C9  00B0               	movwf	??_MOS_vModbudFun6+1
  3948  01CA  3021               	movlw	33
  3949  01CB  00B1               	movwf	??_MOS_vModbudFun6+2
  3950  01CC  083C               	movf	MOS_vModbudFun6@i,w
  3951  01CD  0730               	addwf	??_MOS_vModbudFun6+1,w
  3952  01CE  00B2               	movwf	??_MOS_vModbudFun6+3
  3953  01CF  083D               	movf	MOS_vModbudFun6@i+1,w
  3954  01D0  3D31               	addwfc	??_MOS_vModbudFun6+2,w
  3955  01D1  00B3               	movwf	??_MOS_vModbudFun6+4
  3956  01D2  0832               	movf	??_MOS_vModbudFun6+3,w
  3957  01D3  0086               	movwf	6
  3958  01D4  0833               	movf	??_MOS_vModbudFun6+4,w
  3959  01D5  0087               	movwf	7
  3960  01D6  082F               	movf	??_MOS_vModbudFun6,w
  3961  01D7  0081               	movwf	1
  3962  01D8                     l1590:
  3963  01D8  3001               	movlw	1
  3964  01D9  07BC               	addwf	MOS_vModbudFun6@i,f
  3965  01DA  3000               	movlw	0
  3966  01DB  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  3967  01DC                     l1592:
  3968                           
  3969                           ;Modbus_uart/Modbus.c: 87:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16RegisterAdd
      +                          %256);
  3970  01DC  300B               	movlw	11
  3971  01DD  00AF               	movwf	??_MOS_vModbudFun6
  3972  01DE  3021               	movlw	33
  3973  01DF  00B0               	movwf	??_MOS_vModbudFun6+1
  3974  01E0  083C               	movf	MOS_vModbudFun6@i,w
  3975  01E1  072F               	addwf	??_MOS_vModbudFun6,w
  3976  01E2  00B1               	movwf	??_MOS_vModbudFun6+2
  3977  01E3  083D               	movf	MOS_vModbudFun6@i+1,w
  3978  01E4  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  3979  01E5  00B2               	movwf	??_MOS_vModbudFun6+3
  3980  01E6  0831               	movf	??_MOS_vModbudFun6+2,w
  3981  01E7  0086               	movwf	6
  3982  01E8  0832               	movf	??_MOS_vModbudFun6+3,w
  3983  01E9  0087               	movwf	7
  3984  01EA  0838               	movf	MOS_vModbudFun6@u16RegisterAdd,w
  3985  01EB  0081               	movwf	1
  3986  01EC                     l1594:
  3987  01EC  3001               	movlw	1
  3988  01ED  07BC               	addwf	MOS_vModbudFun6@i,f
  3989  01EE  3000               	movlw	0
  3990  01EF  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  3991  01F0                     l1596:
  3992                           
  3993                           ;Modbus_uart/Modbus.c: 88:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16value/256);
  3994  01F0  083B               	movf	MOS_vModbudFun6@u16value+1,w
  3995  01F1  00AF               	movwf	??_MOS_vModbudFun6
  3996  01F2  300B               	movlw	11
  3997  01F3  00B0               	movwf	??_MOS_vModbudFun6+1
  3998  01F4  3021               	movlw	33
  3999  01F5  00B1               	movwf	??_MOS_vModbudFun6+2
  4000  01F6  083C               	movf	MOS_vModbudFun6@i,w
  4001  01F7  0730               	addwf	??_MOS_vModbudFun6+1,w
  4002  01F8  00B2               	movwf	??_MOS_vModbudFun6+3
  4003  01F9  083D               	movf	MOS_vModbudFun6@i+1,w
  4004  01FA  3D31               	addwfc	??_MOS_vModbudFun6+2,w
  4005  01FB  00B3               	movwf	??_MOS_vModbudFun6+4
  4006  01FC  0832               	movf	??_MOS_vModbudFun6+3,w
  4007  01FD  0086               	movwf	6
  4008  01FE  0833               	movf	??_MOS_vModbudFun6+4,w
  4009  01FF  0087               	movwf	7
  4010  0200  082F               	movf	??_MOS_vModbudFun6,w
  4011  0201  0081               	movwf	1
  4012  0202                     l1598:
  4013  0202  3001               	movlw	1
  4014  0203  07BC               	addwf	MOS_vModbudFun6@i,f
  4015  0204  3000               	movlw	0
  4016  0205  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4017  0206                     l1600:
  4018                           
  4019                           ;Modbus_uart/Modbus.c: 89:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16value%256);
  4020  0206  300B               	movlw	11
  4021  0207  00AF               	movwf	??_MOS_vModbudFun6
  4022  0208  3021               	movlw	33
  4023  0209  00B0               	movwf	??_MOS_vModbudFun6+1
  4024  020A  083C               	movf	MOS_vModbudFun6@i,w
  4025  020B  072F               	addwf	??_MOS_vModbudFun6,w
  4026  020C  00B1               	movwf	??_MOS_vModbudFun6+2
  4027  020D  083D               	movf	MOS_vModbudFun6@i+1,w
  4028  020E  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  4029  020F  00B2               	movwf	??_MOS_vModbudFun6+3
  4030  0210  0831               	movf	??_MOS_vModbudFun6+2,w
  4031  0211  0086               	movwf	6
  4032  0212  0832               	movf	??_MOS_vModbudFun6+3,w
  4033  0213  0087               	movwf	7
  4034  0214  083A               	movf	MOS_vModbudFun6@u16value,w
  4035  0215  0081               	movwf	1
  4036  0216                     l1602:
  4037  0216  3001               	movlw	1
  4038  0217  07BC               	addwf	MOS_vModbudFun6@i,f
  4039  0218  3000               	movlw	0
  4040  0219  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4041  021A                     l1604:
  4042                           
  4043                           ;Modbus_uart/Modbus.c: 90:  u16TransmitCRC=crc16(MOS_tModbusData.auTransmitBuff,i);
  4044  021A  300B               	movlw	11
  4045  021B  00A0               	movwf	crc16@puchMsg
  4046  021C  3021               	movlw	33
  4047  021D  00A1               	movwf	crc16@puchMsg+1
  4048  021E  083D               	movf	MOS_vModbudFun6@i+1,w
  4049  021F  00A3               	movwf	crc16@usDataLen+1
  4050  0220  083C               	movf	MOS_vModbudFun6@i,w
  4051  0221  00A2               	movwf	crc16@usDataLen
  4052  0222  3185  2585  3181   	fcall	_crc16
  4053  0225  0020               	movlb	0	; select bank0
  4054  0226  0821               	movf	?_crc16+1,w
  4055  0227  00B5               	movwf	MOS_vModbudFun6@u16TransmitCRC+1
  4056  0228  0820               	movf	?_crc16,w
  4057  0229  00B4               	movwf	MOS_vModbudFun6@u16TransmitCRC
  4058  022A                     l1606:
  4059                           
  4060                           ;Modbus_uart/Modbus.c: 91:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransmitCRC
      +                          /256);
  4061  022A  0835               	movf	MOS_vModbudFun6@u16TransmitCRC+1,w
  4062  022B  00AF               	movwf	??_MOS_vModbudFun6
  4063  022C  300B               	movlw	11
  4064  022D  00B0               	movwf	??_MOS_vModbudFun6+1
  4065  022E  3021               	movlw	33
  4066  022F  00B1               	movwf	??_MOS_vModbudFun6+2
  4067  0230  083C               	movf	MOS_vModbudFun6@i,w
  4068  0231  0730               	addwf	??_MOS_vModbudFun6+1,w
  4069  0232  00B2               	movwf	??_MOS_vModbudFun6+3
  4070  0233  083D               	movf	MOS_vModbudFun6@i+1,w
  4071  0234  3D31               	addwfc	??_MOS_vModbudFun6+2,w
  4072  0235  00B3               	movwf	??_MOS_vModbudFun6+4
  4073  0236  0832               	movf	??_MOS_vModbudFun6+3,w
  4074  0237  0086               	movwf	6
  4075  0238  0833               	movf	??_MOS_vModbudFun6+4,w
  4076  0239  0087               	movwf	7
  4077  023A  082F               	movf	??_MOS_vModbudFun6,w
  4078  023B  0081               	movwf	1
  4079  023C                     l1608:
  4080  023C  3001               	movlw	1
  4081  023D  07BC               	addwf	MOS_vModbudFun6@i,f
  4082  023E  3000               	movlw	0
  4083  023F  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4084  0240                     l1610:
  4085                           
  4086                           ;Modbus_uart/Modbus.c: 92:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransmitCRC
      +                          %256);
  4087  0240  300B               	movlw	11
  4088  0241  00AF               	movwf	??_MOS_vModbudFun6
  4089  0242  3021               	movlw	33
  4090  0243  00B0               	movwf	??_MOS_vModbudFun6+1
  4091  0244  083C               	movf	MOS_vModbudFun6@i,w
  4092  0245  072F               	addwf	??_MOS_vModbudFun6,w
  4093  0246  00B1               	movwf	??_MOS_vModbudFun6+2
  4094  0247  083D               	movf	MOS_vModbudFun6@i+1,w
  4095  0248  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  4096  0249  00B2               	movwf	??_MOS_vModbudFun6+3
  4097  024A  0831               	movf	??_MOS_vModbudFun6+2,w
  4098  024B  0086               	movwf	6
  4099  024C  0832               	movf	??_MOS_vModbudFun6+3,w
  4100  024D  0087               	movwf	7
  4101  024E  0834               	movf	MOS_vModbudFun6@u16TransmitCRC,w
  4102  024F  0081               	movwf	1
  4103  0250                     l1612:
  4104  0250  3001               	movlw	1
  4105  0251  07BC               	addwf	MOS_vModbudFun6@i,f
  4106  0252  3000               	movlw	0
  4107  0253  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4108  0254                     l1614:
  4109                           
  4110                           ;Modbus_uart/Modbus.c: 94:  MOS_vModbusTransmitEnalbe();
  4111  0254  3187  2771  3181   	fcall	_MOS_vModbusTransmitEnalbe
  4112  0257                     l1616:
  4113                           
  4114                           ;Modbus_uart/Modbus.c: 96:  for(j=0;j<i;j++)
  4115  0257  0020               	movlb	0	; select bank0
  4116  0258  01B6               	clrf	MOS_vModbudFun6@j
  4117  0259  01B7               	clrf	MOS_vModbudFun6@j+1
  4118  025A  2A6E               	goto	l1622
  4119  025B                     l1618:
  4120                           
  4121                           ;Modbus_uart/Modbus.c: 97:  {;Modbus_uart/Modbus.c: 98:   EUSART_Write(MOS_tModbusData.a
      +                          uTransmitBuff[j]);
  4122  025B  300B               	movlw	11
  4123  025C  00AF               	movwf	??_MOS_vModbudFun6
  4124  025D  3021               	movlw	33
  4125  025E  00B0               	movwf	??_MOS_vModbudFun6+1
  4126  025F  0836               	movf	MOS_vModbudFun6@j,w
  4127  0260  072F               	addwf	??_MOS_vModbudFun6,w
  4128  0261  0086               	movwf	6
  4129  0262  0837               	movf	MOS_vModbudFun6@j+1,w
  4130  0263  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  4131  0264  0087               	movwf	7
  4132  0265  0801               	movf	1,w
  4133  0266  3187  2717  3181   	fcall	_EUSART_Write
  4134  0269                     l1620:
  4135                           
  4136                           ;Modbus_uart/Modbus.c: 99:  }
  4137  0269  3001               	movlw	1
  4138  026A  0020               	movlb	0	; select bank0
  4139  026B  07B6               	addwf	MOS_vModbudFun6@j,f
  4140  026C  3000               	movlw	0
  4141  026D  3DB7               	addwfc	MOS_vModbudFun6@j+1,f
  4142  026E                     l1622:
  4143  026E  083D               	movf	MOS_vModbudFun6@i+1,w
  4144  026F  0237               	subwf	MOS_vModbudFun6@j+1,w
  4145  0270  1D03               	skipz
  4146  0271  2A74               	goto	u375
  4147  0272  083C               	movf	MOS_vModbudFun6@i,w
  4148  0273  0236               	subwf	MOS_vModbudFun6@j,w
  4149  0274                     u375:
  4150  0274  1C03               	skipc
  4151  0275  2A77               	goto	u371
  4152  0276  2A78               	goto	u370
  4153  0277                     u371:
  4154  0277  2A5B               	goto	l1618
  4155  0278                     u370:
  4156  0278                     l362:
  4157                           
  4158                           ;Modbus_uart/Modbus.c: 101:     __nop();
  4159  0278  0000               	nop
  4160                           
  4161                           ;Modbus_uart/Modbus.c: 102:         __nop();
  4162  0279  0000               	nop
  4163                           
  4164                           ;Modbus_uart/Modbus.c: 103:             __nop();
  4165  027A  0000               	nop
  4166                           
  4167                           ;Modbus_uart/Modbus.c: 104:                 __nop();
  4168  027B  0000               	nop
  4169                           
  4170                           ;Modbus_uart/Modbus.c: 105:                     __nop();
  4171  027C  0000               	nop
  4172                           
  4173                           ;Modbus_uart/Modbus.c: 106:                         __nop();
  4174  027D  0000               	nop
  4175  027E                     l363:
  4176  027E  0008               	return
  4177  027F                     __end_of_MOS_vModbudFun6:
  4178                           
  4179                           	psect	text17
  4180  005D                     __ptext17:	
  4181 ;; *************** function _MOS_vModbudFun3 *****************
  4182 ;; Defined at:
  4183 ;;		line 33 in file "Modbus_uart/Modbus.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;  i               2   35[BANK0 ] unsigned short 
  4188 ;;  j               2   33[BANK0 ] unsigned short 
  4189 ;;  u16TransmitC    2   31[BANK0 ] unsigned short 
  4190 ;;  u16RegisterL    2   29[BANK0 ] unsigned short 
  4191 ;;  u16RegisterA    2   27[BANK0 ] unsigned short 
  4192 ;;  u16TransData    2   25[BANK0 ] unsigned short 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  1    wreg      void 
  4195 ;; Registers used:
  4196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4202 ;;      Params:         0       0       0       0       0       0
  4203 ;;      Locals:         0      12       0       0       0       0
  4204 ;;      Temps:          0      10       0       0       0       0
  4205 ;;      Totals:         0      22       0       0       0       0
  4206 ;;Total ram usage:       22 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 6
  4209 ;; This function calls:
  4210 ;;		_EUSART_Write
  4211 ;;		_MOS_vModbusReceiveEnalbe
  4212 ;;		_MOS_vModbusTransmitEnalbe
  4213 ;;		_crc16
  4214 ;; This function is called by:
  4215 ;;		_MOS_vModBusHandler
  4216 ;; This function uses a non-reentrant model
  4217 ;;
  4218                           
  4219                           
  4220                           ;psect for function _MOS_vModbudFun3
  4221  005D                     _MOS_vModbudFun3:
  4222  005D                     l1522:	
  4223                           ;incstack = 0
  4224                           ; Regs used in _MOS_vModbudFun3: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4225                           
  4226                           
  4227                           ;Modbus_uart/Modbus.c: 36:  uint16_t u16RegisterLen = 0;
  4228  005D  0020               	movlb	0	; select bank0
  4229  005E  01BD               	clrf	MOS_vModbudFun3@u16RegisterLen
  4230  005F  01BE               	clrf	MOS_vModbudFun3@u16RegisterLen+1
  4231                           
  4232                           ;Modbus_uart/Modbus.c: 37:  uint16_t u16TransDataLen = 0;
  4233  0060  01B9               	clrf	MOS_vModbudFun3@u16TransDataLen
  4234  0061  01BA               	clrf	MOS_vModbudFun3@u16TransDataLen+1
  4235                           
  4236                           ;Modbus_uart/Modbus.c: 38:  uint16_t i = 0;
  4237  0062  01C3               	clrf	MOS_vModbudFun3@i
  4238  0063  01C4               	clrf	MOS_vModbudFun3@i+1
  4239                           
  4240                           ;Modbus_uart/Modbus.c: 39:  uint16_t j = 0;
  4241  0064  01C1               	clrf	MOS_vModbudFun3@j
  4242  0065  01C2               	clrf	MOS_vModbudFun3@j+1
  4243                           
  4244                           ;Modbus_uart/Modbus.c: 40:  uint16_t u16TransmitCRC = 0;
  4245  0066  01BF               	clrf	MOS_vModbudFun3@u16TransmitCRC
  4246  0067  01C0               	clrf	MOS_vModbudFun3@u16TransmitCRC+1
  4247  0068                     l1524:
  4248                           
  4249                           ;Modbus_uart/Modbus.c: 42:  u16RegisterAdd=MOS_tModbusData.auReceiveBuff[2]*256+MOS_tMod
      +                          busData.auReceiveBuff[3];
  4250  0068  30A4               	movlw	164
  4251  0069  0086               	movwf	6
  4252  006A  3020               	movlw	32
  4253  006B  0087               	movwf	7
  4254  006C  3143               	addfsr 1,3
  4255  006D  30A4               	movlw	164
  4256  006E  0084               	movwf	4
  4257  006F  3020               	movlw	32
  4258  0070  0085               	movwf	5
  4259  0071  3102               	addfsr 0,2
  4260  0072  0800               	movf	0,w
  4261  0073  00BC               	movwf	MOS_vModbudFun3@u16RegisterAdd+1
  4262  0074  0801               	movf	1,w
  4263  0075  00BB               	movwf	MOS_vModbudFun3@u16RegisterAdd
  4264  0076                     l1526:
  4265                           
  4266                           ;Modbus_uart/Modbus.c: 43:  u16RegisterLen=MOS_tModbusData.auReceiveBuff[4]*256+MOS_tMod
      +                          busData.auReceiveBuff[5];
  4267  0076  30A4               	movlw	164
  4268  0077  0086               	movwf	6
  4269  0078  3020               	movlw	32
  4270  0079  0087               	movwf	7
  4271  007A  3145               	addfsr 1,5
  4272  007B  30A4               	movlw	164
  4273  007C  0084               	movwf	4
  4274  007D  3020               	movlw	32
  4275  007E  0085               	movwf	5
  4276  007F  3104               	addfsr 0,4
  4277  0080  0800               	movf	0,w
  4278  0081  00BE               	movwf	MOS_vModbudFun3@u16RegisterLen+1
  4279  0082  0801               	movf	1,w
  4280  0083  00BD               	movwf	MOS_vModbudFun3@u16RegisterLen
  4281  0084                     l1528:
  4282                           
  4283                           ;Modbus_uart/Modbus.c: 45:  MOS_tModbusData.auTransmitBuff[i++]=MOS_tModbusPara.u8Device
      +                          Address;
  4284  0084  300B               	movlw	11
  4285  0085  0086               	movwf	6
  4286  0086  3021               	movlw	33
  4287  0087  0087               	movwf	7
  4288  0088  0860               	movf	_MOS_tModbusPara,w
  4289  0089  0081               	movwf	1
  4290  008A                     l1530:
  4291  008A  3001               	movlw	1
  4292  008B  07C3               	addwf	MOS_vModbudFun3@i,f
  4293  008C  3000               	movlw	0
  4294  008D  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4295  008E                     l1532:
  4296                           
  4297                           ;Modbus_uart/Modbus.c: 46:     MOS_tModbusData.auTransmitBuff[i++]=0x03;
  4298  008E  300B               	movlw	11
  4299  008F  00AF               	movwf	??_MOS_vModbudFun3
  4300  0090  3021               	movlw	33
  4301  0091  00B0               	movwf	??_MOS_vModbudFun3+1
  4302  0092  0843               	movf	MOS_vModbudFun3@i,w
  4303  0093  072F               	addwf	??_MOS_vModbudFun3,w
  4304  0094  00B1               	movwf	??_MOS_vModbudFun3+2
  4305  0095  0844               	movf	MOS_vModbudFun3@i+1,w
  4306  0096  3D30               	addwfc	??_MOS_vModbudFun3+1,w
  4307  0097  00B2               	movwf	??_MOS_vModbudFun3+3
  4308  0098  0831               	movf	??_MOS_vModbudFun3+2,w
  4309  0099  0086               	movwf	6
  4310  009A  0832               	movf	??_MOS_vModbudFun3+3,w
  4311  009B  0087               	movwf	7
  4312  009C  3003               	movlw	3
  4313  009D  0081               	movwf	1
  4314  009E                     l1534:
  4315  009E  3001               	movlw	1
  4316  009F  07C3               	addwf	MOS_vModbudFun3@i,f
  4317  00A0  3000               	movlw	0
  4318  00A1  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4319  00A2                     l1536:
  4320                           
  4321                           ;Modbus_uart/Modbus.c: 47:    u16TransDataLen=u16RegisterLen*2;
  4322  00A2  353D               	lslf	MOS_vModbudFun3@u16RegisterLen,w
  4323  00A3  00B9               	movwf	MOS_vModbudFun3@u16TransDataLen
  4324  00A4  0D3E               	rlf	MOS_vModbudFun3@u16RegisterLen+1,w
  4325  00A5  00BA               	movwf	MOS_vModbudFun3@u16TransDataLen+1
  4326  00A6                     l1538:
  4327                           
  4328                           ;Modbus_uart/Modbus.c: 49:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransDataLe
      +                          n%256);
  4329  00A6  300B               	movlw	11
  4330  00A7  00AF               	movwf	??_MOS_vModbudFun3
  4331  00A8  3021               	movlw	33
  4332  00A9  00B0               	movwf	??_MOS_vModbudFun3+1
  4333  00AA  0843               	movf	MOS_vModbudFun3@i,w
  4334  00AB  072F               	addwf	??_MOS_vModbudFun3,w
  4335  00AC  00B1               	movwf	??_MOS_vModbudFun3+2
  4336  00AD  0844               	movf	MOS_vModbudFun3@i+1,w
  4337  00AE  3D30               	addwfc	??_MOS_vModbudFun3+1,w
  4338  00AF  00B2               	movwf	??_MOS_vModbudFun3+3
  4339  00B0  0831               	movf	??_MOS_vModbudFun3+2,w
  4340  00B1  0086               	movwf	6
  4341  00B2  0832               	movf	??_MOS_vModbudFun3+3,w
  4342  00B3  0087               	movwf	7
  4343  00B4  0839               	movf	MOS_vModbudFun3@u16TransDataLen,w
  4344  00B5  0081               	movwf	1
  4345  00B6                     l1540:
  4346  00B6  3001               	movlw	1
  4347  00B7  07C3               	addwf	MOS_vModbudFun3@i,f
  4348  00B8  3000               	movlw	0
  4349  00B9  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4350  00BA                     l1542:
  4351                           
  4352                           ;Modbus_uart/Modbus.c: 51:  for(j=0;j<u16RegisterLen;j++)
  4353  00BA  01C1               	clrf	MOS_vModbudFun3@j
  4354  00BB  01C2               	clrf	MOS_vModbudFun3@j+1
  4355  00BC  290F               	goto	l351
  4356  00BD                     l1544:
  4357                           
  4358                           ;Modbus_uart/Modbus.c: 52:  {;Modbus_uart/Modbus.c: 53:         MOS_tModbusData.auTransm
      +                          itBuff[i++]=(uint8_t)(Reg[u16RegisterAdd+j]/256);
  4359  00BD  083B               	movf	MOS_vModbudFun3@u16RegisterAdd,w
  4360  00BE  00AF               	movwf	??_MOS_vModbudFun3
  4361  00BF  3001               	movlw	1
  4362  00C0                     u335:
  4363  00C0  35AF               	lslf	??_MOS_vModbudFun3,f
  4364  00C1  0B89               	decfsz	9,f
  4365  00C2  28C0               	goto	u335
  4366  00C3  30A0               	movlw	(low (_Reg| 0))& (0+255)
  4367  00C4  072F               	addwf	??_MOS_vModbudFun3,w
  4368  00C5  00B0               	movwf	??_MOS_vModbudFun3+1
  4369  00C6  3541               	lslf	MOS_vModbudFun3@j,w
  4370  00C7  0730               	addwf	??_MOS_vModbudFun3+1,w
  4371  00C8  00B1               	movwf	??_MOS_vModbudFun3+2
  4372  00C9  0831               	movf	??_MOS_vModbudFun3+2,w
  4373  00CA  0086               	movwf	6
  4374  00CB  0187               	clrf	7
  4375  00CC  3F40               	moviw [0]fsr1
  4376  00CD  00B2               	movwf	??_MOS_vModbudFun3+3
  4377  00CE  3F41               	moviw [1]fsr1
  4378  00CF  00B3               	movwf	??_MOS_vModbudFun3+4
  4379  00D0  0833               	movf	??_MOS_vModbudFun3+4,w
  4380  00D1  00B4               	movwf	??_MOS_vModbudFun3+5
  4381  00D2  300B               	movlw	11
  4382  00D3  00B5               	movwf	??_MOS_vModbudFun3+6
  4383  00D4  3021               	movlw	33
  4384  00D5  00B6               	movwf	??_MOS_vModbudFun3+7
  4385  00D6  0843               	movf	MOS_vModbudFun3@i,w
  4386  00D7  0735               	addwf	??_MOS_vModbudFun3+6,w
  4387  00D8  00B7               	movwf	??_MOS_vModbudFun3+8
  4388  00D9  0844               	movf	MOS_vModbudFun3@i+1,w
  4389  00DA  3D36               	addwfc	??_MOS_vModbudFun3+7,w
  4390  00DB  00B8               	movwf	??_MOS_vModbudFun3+9
  4391  00DC  0837               	movf	??_MOS_vModbudFun3+8,w
  4392  00DD  0086               	movwf	6
  4393  00DE  0838               	movf	??_MOS_vModbudFun3+9,w
  4394  00DF  0087               	movwf	7
  4395  00E0  0834               	movf	??_MOS_vModbudFun3+5,w
  4396  00E1  0081               	movwf	1
  4397  00E2                     l1546:
  4398  00E2  3001               	movlw	1
  4399  00E3  07C3               	addwf	MOS_vModbudFun3@i,f
  4400  00E4  3000               	movlw	0
  4401  00E5  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4402  00E6                     l1548:
  4403                           
  4404                           ;Modbus_uart/Modbus.c: 54:   MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(Reg[u16Regist
      +                          erAdd+j]%256);
  4405  00E6  083B               	movf	MOS_vModbudFun3@u16RegisterAdd,w
  4406  00E7  00AF               	movwf	??_MOS_vModbudFun3
  4407  00E8  3001               	movlw	1
  4408  00E9                     u345:
  4409  00E9  35AF               	lslf	??_MOS_vModbudFun3,f
  4410  00EA  0B89               	decfsz	9,f
  4411  00EB  28E9               	goto	u345
  4412  00EC  30A0               	movlw	(low (_Reg| 0))& (0+255)
  4413  00ED  072F               	addwf	??_MOS_vModbudFun3,w
  4414  00EE  00B0               	movwf	??_MOS_vModbudFun3+1
  4415  00EF  3541               	lslf	MOS_vModbudFun3@j,w
  4416  00F0  0730               	addwf	??_MOS_vModbudFun3+1,w
  4417  00F1  00B1               	movwf	??_MOS_vModbudFun3+2
  4418  00F2  0831               	movf	??_MOS_vModbudFun3+2,w
  4419  00F3  0086               	movwf	6
  4420  00F4  0187               	clrf	7
  4421  00F5  0801               	movf	1,w
  4422  00F6  00B2               	movwf	??_MOS_vModbudFun3+3
  4423  00F7  300B               	movlw	11
  4424  00F8  00B3               	movwf	??_MOS_vModbudFun3+4
  4425  00F9  3021               	movlw	33
  4426  00FA  00B4               	movwf	??_MOS_vModbudFun3+5
  4427  00FB  0843               	movf	MOS_vModbudFun3@i,w
  4428  00FC  0733               	addwf	??_MOS_vModbudFun3+4,w
  4429  00FD  00B5               	movwf	??_MOS_vModbudFun3+6
  4430  00FE  0844               	movf	MOS_vModbudFun3@i+1,w
  4431  00FF  3D34               	addwfc	??_MOS_vModbudFun3+5,w
  4432  0100  00B6               	movwf	??_MOS_vModbudFun3+7
  4433  0101  0835               	movf	??_MOS_vModbudFun3+6,w
  4434  0102  0086               	movwf	6
  4435  0103  0836               	movf	??_MOS_vModbudFun3+7,w
  4436  0104  0087               	movwf	7
  4437  0105  0832               	movf	??_MOS_vModbudFun3+3,w
  4438  0106  0081               	movwf	1
  4439  0107  3001               	movlw	1
  4440  0108  07C3               	addwf	MOS_vModbudFun3@i,f
  4441  0109  3000               	movlw	0
  4442  010A  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4443                           
  4444                           ;Modbus_uart/Modbus.c: 55:  }
  4445  010B  3001               	movlw	1
  4446  010C  07C1               	addwf	MOS_vModbudFun3@j,f
  4447  010D  3000               	movlw	0
  4448  010E  3DC2               	addwfc	MOS_vModbudFun3@j+1,f
  4449  010F                     l351:
  4450  010F  083E               	movf	MOS_vModbudFun3@u16RegisterLen+1,w
  4451  0110  0242               	subwf	MOS_vModbudFun3@j+1,w
  4452  0111  1D03               	skipz
  4453  0112  2915               	goto	u355
  4454  0113  083D               	movf	MOS_vModbudFun3@u16RegisterLen,w
  4455  0114  0241               	subwf	MOS_vModbudFun3@j,w
  4456  0115                     u355:
  4457  0115  1C03               	skipc
  4458  0116  2918               	goto	u351
  4459  0117  2919               	goto	u350
  4460  0118                     u351:
  4461  0118  28BD               	goto	l1544
  4462  0119                     u350:
  4463  0119                     l1550:
  4464                           
  4465                           ;Modbus_uart/Modbus.c: 56:  u16TransmitCRC=crc16(MOS_tModbusData.auTransmitBuff,i);
  4466  0119  300B               	movlw	11
  4467  011A  00A0               	movwf	crc16@puchMsg
  4468  011B  3021               	movlw	33
  4469  011C  00A1               	movwf	crc16@puchMsg+1
  4470  011D  0844               	movf	MOS_vModbudFun3@i+1,w
  4471  011E  00A3               	movwf	crc16@usDataLen+1
  4472  011F  0843               	movf	MOS_vModbudFun3@i,w
  4473  0120  00A2               	movwf	crc16@usDataLen
  4474  0121  3185  2585  3180   	fcall	_crc16
  4475  0124  0020               	movlb	0	; select bank0
  4476  0125  0821               	movf	?_crc16+1,w
  4477  0126  00C0               	movwf	MOS_vModbudFun3@u16TransmitCRC+1
  4478  0127  0820               	movf	?_crc16,w
  4479  0128  00BF               	movwf	MOS_vModbudFun3@u16TransmitCRC
  4480  0129                     l1552:
  4481                           
  4482                           ;Modbus_uart/Modbus.c: 57:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransmitCRC
      +                          /256);
  4483  0129  0840               	movf	MOS_vModbudFun3@u16TransmitCRC+1,w
  4484  012A  00AF               	movwf	??_MOS_vModbudFun3
  4485  012B  300B               	movlw	11
  4486  012C  00B0               	movwf	??_MOS_vModbudFun3+1
  4487  012D  3021               	movlw	33
  4488  012E  00B1               	movwf	??_MOS_vModbudFun3+2
  4489  012F  0843               	movf	MOS_vModbudFun3@i,w
  4490  0130  0730               	addwf	??_MOS_vModbudFun3+1,w
  4491  0131  00B2               	movwf	??_MOS_vModbudFun3+3
  4492  0132  0844               	movf	MOS_vModbudFun3@i+1,w
  4493  0133  3D31               	addwfc	??_MOS_vModbudFun3+2,w
  4494  0134  00B3               	movwf	??_MOS_vModbudFun3+4
  4495  0135  0832               	movf	??_MOS_vModbudFun3+3,w
  4496  0136  0086               	movwf	6
  4497  0137  0833               	movf	??_MOS_vModbudFun3+4,w
  4498  0138  0087               	movwf	7
  4499  0139  082F               	movf	??_MOS_vModbudFun3,w
  4500  013A  0081               	movwf	1
  4501  013B                     l1554:
  4502  013B  3001               	movlw	1
  4503  013C  07C3               	addwf	MOS_vModbudFun3@i,f
  4504  013D  3000               	movlw	0
  4505  013E  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4506  013F                     l1556:
  4507                           
  4508                           ;Modbus_uart/Modbus.c: 58:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransmitCRC
      +                          %256);
  4509  013F  300B               	movlw	11
  4510  0140  00AF               	movwf	??_MOS_vModbudFun3
  4511  0141  3021               	movlw	33
  4512  0142  00B0               	movwf	??_MOS_vModbudFun3+1
  4513  0143  0843               	movf	MOS_vModbudFun3@i,w
  4514  0144  072F               	addwf	??_MOS_vModbudFun3,w
  4515  0145  00B1               	movwf	??_MOS_vModbudFun3+2
  4516  0146  0844               	movf	MOS_vModbudFun3@i+1,w
  4517  0147  3D30               	addwfc	??_MOS_vModbudFun3+1,w
  4518  0148  00B2               	movwf	??_MOS_vModbudFun3+3
  4519  0149  0831               	movf	??_MOS_vModbudFun3+2,w
  4520  014A  0086               	movwf	6
  4521  014B  0832               	movf	??_MOS_vModbudFun3+3,w
  4522  014C  0087               	movwf	7
  4523  014D  083F               	movf	MOS_vModbudFun3@u16TransmitCRC,w
  4524  014E  0081               	movwf	1
  4525  014F                     l1558:
  4526  014F  3001               	movlw	1
  4527  0150  07C3               	addwf	MOS_vModbudFun3@i,f
  4528  0151  3000               	movlw	0
  4529  0152  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4530  0153                     l1560:
  4531                           
  4532                           ;Modbus_uart/Modbus.c: 60:  MOS_vModbusTransmitEnalbe();
  4533  0153  3187  2771  3180   	fcall	_MOS_vModbusTransmitEnalbe
  4534  0156                     l1562:
  4535                           
  4536                           ;Modbus_uart/Modbus.c: 62:  for(j=0; j<i; j++)
  4537  0156  0020               	movlb	0	; select bank0
  4538  0157  01C1               	clrf	MOS_vModbudFun3@j
  4539  0158  01C2               	clrf	MOS_vModbudFun3@j+1
  4540  0159  296D               	goto	l1568
  4541  015A                     l1564:
  4542                           
  4543                           ;Modbus_uart/Modbus.c: 63:  {;Modbus_uart/Modbus.c: 64:   EUSART_Write(MOS_tModbusData.a
      +                          uTransmitBuff[j]);
  4544  015A  300B               	movlw	11
  4545  015B  00AF               	movwf	??_MOS_vModbudFun3
  4546  015C  3021               	movlw	33
  4547  015D  00B0               	movwf	??_MOS_vModbudFun3+1
  4548  015E  0841               	movf	MOS_vModbudFun3@j,w
  4549  015F  072F               	addwf	??_MOS_vModbudFun3,w
  4550  0160  0086               	movwf	6
  4551  0161  0842               	movf	MOS_vModbudFun3@j+1,w
  4552  0162  3D30               	addwfc	??_MOS_vModbudFun3+1,w
  4553  0163  0087               	movwf	7
  4554  0164  0801               	movf	1,w
  4555  0165  3187  2717  3180   	fcall	_EUSART_Write
  4556  0168                     l1566:
  4557                           
  4558                           ;Modbus_uart/Modbus.c: 65:  }
  4559  0168  3001               	movlw	1
  4560  0169  0020               	movlb	0	; select bank0
  4561  016A  07C1               	addwf	MOS_vModbudFun3@j,f
  4562  016B  3000               	movlw	0
  4563  016C  3DC2               	addwfc	MOS_vModbudFun3@j+1,f
  4564  016D                     l1568:
  4565  016D  0844               	movf	MOS_vModbudFun3@i+1,w
  4566  016E  0242               	subwf	MOS_vModbudFun3@j+1,w
  4567  016F  1D03               	skipz
  4568  0170  2973               	goto	u365
  4569  0171  0843               	movf	MOS_vModbudFun3@i,w
  4570  0172  0241               	subwf	MOS_vModbudFun3@j,w
  4571  0173                     u365:
  4572  0173  1C03               	skipc
  4573  0174  2976               	goto	u361
  4574  0175  2977               	goto	u360
  4575  0176                     u361:
  4576  0176  295A               	goto	l1564
  4577  0177                     u360:
  4578  0177                     l1570:
  4579                           
  4580                           ;Modbus_uart/Modbus.c: 67:  MOS_vModbusReceiveEnalbe();
  4581  0177  3187  2774  3180   	fcall	_MOS_vModbusReceiveEnalbe
  4582  017A                     l357:
  4583  017A  0008               	return
  4584  017B                     __end_of_MOS_vModbudFun3:
  4585                           
  4586                           	psect	text18
  4587  0585                     __ptext18:	
  4588 ;; *************** function _crc16 *****************
  4589 ;; Defined at:
  4590 ;;		line 73 in file "Modbus_CRC/ModbusCRC.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;  puchMsg         2    0[BANK0 ] PTR unsigned char 
  4593 ;;		 -> MOS_tModbusData(204), 
  4594 ;;  usDataLen       2    2[BANK0 ] unsigned short 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;  uIndex          4    9[BANK0 ] unsigned long 
  4597 ;;  uchCRCLo        1   14[BANK0 ] unsigned char 
  4598 ;;  uchCRCHi        1   13[BANK0 ] unsigned char 
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  2    0[BANK0 ] unsigned short 
  4601 ;; Registers used:
  4602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4608 ;;      Params:         0       4       0       0       0       0
  4609 ;;      Locals:         0       6       0       0       0       0
  4610 ;;      Temps:          0       5       0       0       0       0
  4611 ;;      Totals:         0      15       0       0       0       0
  4612 ;;Total ram usage:       15 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 5
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_MOS_vModbudFun3
  4619 ;;		_MOS_vModbudFun6
  4620 ;;		_MOS_vModBusHandler
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           
  4625                           ;psect for function _crc16
  4626  0585                     _crc16:
  4627  0585                     l1426:	
  4628                           ;incstack = 0
  4629                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath]
  4630                           
  4631                           
  4632                           ;Modbus_CRC/ModbusCRC.c: 73: uint16_t crc16( uint8_t *puchMsg, uint16_t usDataLen );Modb
      +                          us_CRC/ModbusCRC.c: 74: {;Modbus_CRC/ModbusCRC.c: 75:     uint8_t uchCRCHi = 0xFF ;
  4633  0585  30FF               	movlw	255
  4634  0586  0020               	movlb	0	; select bank0
  4635  0587  00A4               	movwf	??_crc16
  4636  0588  0824               	movf	??_crc16,w
  4637  0589  00AD               	movwf	crc16@uchCRCHi
  4638                           
  4639                           ;Modbus_CRC/ModbusCRC.c: 76:     uint8_t uchCRCLo = 0xFF ;
  4640  058A  30FF               	movlw	255
  4641  058B  00A4               	movwf	??_crc16
  4642  058C  0824               	movf	??_crc16,w
  4643  058D  00AE               	movwf	crc16@uchCRCLo
  4644                           
  4645                           ;Modbus_CRC/ModbusCRC.c: 77:     uint32_t uIndex ;;Modbus_CRC/ModbusCRC.c: 79:     while
      +                           ( usDataLen-- )
  4646  058E  2DBE               	goto	l1436
  4647  058F                     l1428:
  4648                           
  4649                           ;Modbus_CRC/ModbusCRC.c: 80:     {;Modbus_CRC/ModbusCRC.c: 81:         uIndex = uchCRCHi
      +                           ^ *puchMsg++ ;
  4650  058F  0820               	movf	crc16@puchMsg,w
  4651  0590  0086               	movwf	6
  4652  0591  0821               	movf	crc16@puchMsg+1,w
  4653  0592  0087               	movwf	7
  4654  0593  0801               	movf	1,w
  4655  0594  062D               	xorwf	crc16@uchCRCHi,w
  4656  0595  00A4               	movwf	??_crc16
  4657  0596  01A5               	clrf	??_crc16+1
  4658  0597  01A6               	clrf	??_crc16+2
  4659  0598  01A7               	clrf	??_crc16+3
  4660  0599  0827               	movf	??_crc16+3,w
  4661  059A  00AC               	movwf	crc16@uIndex+3
  4662  059B  0826               	movf	??_crc16+2,w
  4663  059C  00AB               	movwf	crc16@uIndex+2
  4664  059D  0825               	movf	??_crc16+1,w
  4665  059E  00AA               	movwf	crc16@uIndex+1
  4666  059F  0824               	movf	??_crc16,w
  4667  05A0  00A9               	movwf	crc16@uIndex
  4668  05A1                     l1430:
  4669  05A1  3001               	movlw	1
  4670  05A2  07A0               	addwf	crc16@puchMsg,f
  4671  05A3  3000               	movlw	0
  4672  05A4  3DA1               	addwfc	crc16@puchMsg+1,f
  4673  05A5                     l1432:
  4674                           
  4675                           ;Modbus_CRC/ModbusCRC.c: 82:         uchCRCHi = uchCRCLo ^ auchCRCHi[uIndex] ;
  4676  05A5  082A               	movf	crc16@uIndex+1,w
  4677  05A6  0085               	movwf	5
  4678  05A7  0829               	movf	crc16@uIndex,w
  4679  05A8  0084               	movwf	4
  4680  05A9  307F               	movlw	low (_auchCRCHi| (0+32768))
  4681  05AA  0784               	addwf	4,f
  4682  05AB  3083               	movlw	high (_auchCRCHi| (0+32768))
  4683  05AC  3D85               	addwfc	5,f
  4684  05AD  0800               	movf	0,w	;code access
  4685  05AE  062E               	xorwf	crc16@uchCRCLo,w
  4686  05AF  00A4               	movwf	??_crc16
  4687  05B0  0824               	movf	??_crc16,w
  4688  05B1  00AD               	movwf	crc16@uchCRCHi
  4689  05B2                     l1434:
  4690                           
  4691                           ;Modbus_CRC/ModbusCRC.c: 83:         uchCRCLo = auchCRCLo[uIndex] ;
  4692  05B2  082A               	movf	crc16@uIndex+1,w
  4693  05B3  0085               	movwf	5
  4694  05B4  0829               	movf	crc16@uIndex,w
  4695  05B5  0084               	movwf	4
  4696  05B6  307F               	movlw	low (_auchCRCLo| (0+32768))
  4697  05B7  0784               	addwf	4,f
  4698  05B8  3082               	movlw	high (_auchCRCLo| (0+32768))
  4699  05B9  3D85               	addwfc	5,f
  4700  05BA  0800               	movf	0,w	;code access
  4701  05BB  00A4               	movwf	??_crc16
  4702  05BC  0824               	movf	??_crc16,w
  4703  05BD  00AE               	movwf	crc16@uchCRCLo
  4704  05BE                     l1436:
  4705                           
  4706                           ;Modbus_CRC/ModbusCRC.c: 79:     while ( usDataLen-- )
  4707  05BE  3001               	movlw	1
  4708  05BF  02A2               	subwf	crc16@usDataLen,f
  4709  05C0  3000               	movlw	0
  4710  05C1  3BA3               	subwfb	crc16@usDataLen+1,f
  4711  05C2  0A22               	incf	crc16@usDataLen,w
  4712  05C3  1D03               	skipz
  4713  05C4  2DC9               	goto	u301
  4714  05C5  0A23               	incf	crc16@usDataLen+1,w
  4715  05C6  1D03               	btfss	3,2
  4716  05C7  2DC9               	goto	u301
  4717  05C8  2DCA               	goto	u300
  4718  05C9                     u301:
  4719  05C9  2D8F               	goto	l1428
  4720  05CA                     u300:
  4721  05CA                     l1438:
  4722                           
  4723                           ;Modbus_CRC/ModbusCRC.c: 86:     return (uint16_t)( uchCRCHi << 8 | uchCRCLo ) ;
  4724  05CA  082E               	movf	crc16@uchCRCLo,w
  4725  05CB  00A4               	movwf	??_crc16
  4726  05CC  01A5               	clrf	??_crc16+1
  4727  05CD  082D               	movf	crc16@uchCRCHi,w
  4728  05CE  00A6               	movwf	??_crc16+2
  4729  05CF  01A7               	clrf	??_crc16+3
  4730  05D0  0826               	movf	??_crc16+2,w
  4731  05D1  00A7               	movwf	??_crc16+3
  4732  05D2  01A6               	clrf	??_crc16+2
  4733  05D3  0824               	movf	??_crc16,w
  4734  05D4  0426               	iorwf	??_crc16+2,w
  4735  05D5  00A0               	movwf	?_crc16
  4736  05D6  0825               	movf	??_crc16+1,w
  4737  05D7  0427               	iorwf	??_crc16+3,w
  4738  05D8  00A1               	movwf	?_crc16+1
  4739  05D9                     l321:
  4740  05D9  0008               	return
  4741  05DA                     __end_of_crc16:
  4742                           
  4743                           	psect	text19
  4744  0771                     __ptext19:	
  4745 ;; *************** function _MOS_vModbusTransmitEnalbe *****************
  4746 ;; Defined at:
  4747 ;;		line 28 in file "Modbus_uart/Modbus.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;		None
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		None
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4761 ;;      Params:         0       0       0       0       0       0
  4762 ;;      Locals:         0       0       0       0       0       0
  4763 ;;      Temps:          0       0       0       0       0       0
  4764 ;;      Totals:         0       0       0       0       0       0
  4765 ;;Total ram usage:        0 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 5
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_MOS_vModbudFun3
  4772 ;;		_MOS_vModbudFun6
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776                           
  4777                           ;psect for function _MOS_vModbusTransmitEnalbe
  4778  0771                     _MOS_vModbusTransmitEnalbe:
  4779  0771                     l346:	
  4780                           ;incstack = 0
  4781                           ; Regs used in _MOS_vModbusTransmitEnalbe: []
  4782                           ;Modbus_uart/Modbus.c: 30:  do { LATBbits.LATB0 = 1; } while(0);
  4783                           
  4784  0771  0022               	movlb	2	; select bank2
  4785  0772  140D               	bsf	13,0	;volatile
  4786  0773                     l348:
  4787  0773  0008               	return
  4788  0774                     __end_of_MOS_vModbusTransmitEnalbe:
  4789                           
  4790                           	psect	text20
  4791  0774                     __ptext20:	
  4792 ;; *************** function _MOS_vModbusReceiveEnalbe *****************
  4793 ;; Defined at:
  4794 ;;		line 23 in file "Modbus_uart/Modbus.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;		None
  4797 ;; Auto vars:     Size  Location     Type
  4798 ;;		None
  4799 ;; Return value:  Size  Location     Type
  4800 ;;                  1    wreg      void 
  4801 ;; Registers used:
  4802 ;;		None
  4803 ;; Tracked objects:
  4804 ;;		On entry : 0/0
  4805 ;;		On exit  : 0/0
  4806 ;;		Unchanged: 0/0
  4807 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4808 ;;      Params:         0       0       0       0       0       0
  4809 ;;      Locals:         0       0       0       0       0       0
  4810 ;;      Temps:          0       0       0       0       0       0
  4811 ;;      Totals:         0       0       0       0       0       0
  4812 ;;Total ram usage:        0 bytes
  4813 ;; Hardware stack levels used: 1
  4814 ;; Hardware stack levels required when called: 5
  4815 ;; This function calls:
  4816 ;;		Nothing
  4817 ;; This function is called by:
  4818 ;;		_main
  4819 ;;		_MOS_vModbudFun3
  4820 ;; This function uses a non-reentrant model
  4821 ;;
  4822                           
  4823                           
  4824                           ;psect for function _MOS_vModbusReceiveEnalbe
  4825  0774                     _MOS_vModbusReceiveEnalbe:
  4826  0774                     l341:	
  4827                           ;incstack = 0
  4828                           ; Regs used in _MOS_vModbusReceiveEnalbe: []
  4829                           ;Modbus_uart/Modbus.c: 25:  do { LATBbits.LATB0 = 0; } while(0);
  4830                           
  4831  0774  0022               	movlb	2	; select bank2
  4832  0775  100D               	bcf	13,0	;volatile
  4833  0776                     l343:
  4834  0776  0008               	return
  4835  0777                     __end_of_MOS_vModbusReceiveEnalbe:
  4836                           
  4837                           	psect	text21
  4838  0717                     __ptext21:	
  4839 ;; *************** function _EUSART_Write *****************
  4840 ;; Defined at:
  4841 ;;		line 142 in file "mcc_generated_files/eusart.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;  txData          1    wreg     unsigned char 
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;  txData          1    0[BANK0 ] unsigned char 
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4855 ;;      Params:         0       0       0       0       0       0
  4856 ;;      Locals:         0       1       0       0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0
  4858 ;;      Totals:         0       1       0       0       0       0
  4859 ;;Total ram usage:        1 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 5
  4862 ;; This function calls:
  4863 ;;		Nothing
  4864 ;; This function is called by:
  4865 ;;		_MOS_vModbudFun3
  4866 ;;		_MOS_vModbudFun6
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _EUSART_Write
  4872  0717                     _EUSART_Write:
  4873                           
  4874                           ;incstack = 0
  4875                           ; Regs used in _EUSART_Write: [wreg]
  4876                           ;EUSART_Write@txData stored from wreg
  4877  0717  0020               	movlb	0	; select bank0
  4878  0718  00A0               	movwf	EUSART_Write@txData
  4879  0719                     l1404:
  4880                           
  4881                           ;mcc_generated_files/eusart.c: 142: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 143: {;mcc_generated_files/eusart.c: 151:         TXREG = txData;
  4882  0719  0820               	movf	EUSART_Write@txData,w
  4883  071A  0023               	movlb	3	; select bank3
  4884  071B  009A               	movwf	26	;volatile
  4885  071C                     l1406:
  4886                           
  4887                           ;mcc_generated_files/eusart.c: 152:         PIE1bits.TXIE = 1;
  4888  071C  0021               	movlb	1	; select bank1
  4889  071D  1611               	bsf	17,4	;volatile
  4890  071E                     l136:	
  4891                           ;mcc_generated_files/eusart.c: 155:     {;mcc_generated_files/eusart.c: 157:     }
  4892                           
  4893                           
  4894                           ;mcc_generated_files/eusart.c: 154:     while(1 == PIE1bits.TXIE)
  4895  071E  1A11               	btfsc	17,4	;volatile
  4896  071F  2F21               	goto	u271
  4897  0720  2F22               	goto	u270
  4898  0721                     u271:
  4899  0721  2F1E               	goto	l136
  4900  0722                     u270:
  4901  0722                     l139:
  4902  0722  0008               	return
  4903  0723                     __end_of_EUSART_Write:
  4904                           
  4905                           	psect	intentry
  4906  0004                     __pintentry:	
  4907 ;; *************** function _INTERRUPT_InterruptManager *****************
  4908 ;; Defined at:
  4909 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4923 ;;      Params:         0       0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0       0
  4926 ;;      Totals:         0       0       0       0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used: 1
  4929 ;; Hardware stack levels required when called: 4
  4930 ;; This function calls:
  4931 ;;		Absolute function
  4932 ;;		_EUSART_Receive_ISR
  4933 ;;		_EUSART_Transmit_ISR
  4934 ;;		_TMR0_ISR
  4935 ;; This function is called by:
  4936 ;;		Interrupt level 1
  4937 ;; This function uses a non-reentrant model
  4938 ;;
  4939                           
  4940  0004                     _INTERRUPT_InterruptManager:
  4941                           
  4942                           ;incstack = 0
  4943  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4944                           
  4945                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4946  0005  3180               	pagesel	$
  4947  0006                     i1l1694:
  4948                           
  4949                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  4950  0006  1E8B               	btfss	11,5	;volatile
  4951  0007  2809               	goto	u45_21
  4952  0008  280A               	goto	u45_20
  4953  0009                     u45_21:
  4954  0009  2812               	goto	i1l233
  4955  000A                     u45_20:
  4956  000A                     i1l1696:
  4957  000A  1D0B               	btfss	11,2	;volatile
  4958  000B  280D               	goto	u46_21
  4959  000C  280E               	goto	u46_20
  4960  000D                     u46_21:
  4961  000D  2812               	goto	i1l233
  4962  000E                     u46_20:
  4963  000E                     i1l1698:
  4964                           
  4965                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  4966  000E  3186  26EF  3180   	fcall	_TMR0_ISR
  4967                           
  4968                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  4969  0011  2836               	goto	i1l241
  4970  0012                     i1l233:	
  4971                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  4972                           
  4973  0012  1F0B               	btfss	11,6	;volatile
  4974  0013  2815               	goto	u47_21
  4975  0014  2816               	goto	u47_20
  4976  0015                     u47_21:
  4977  0015  2836               	goto	i1l241
  4978  0016                     u47_20:
  4979  0016                     i1l1700:
  4980                           
  4981                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4982  0016  0021               	movlb	1	; select bank1
  4983  0017  1E11               	btfss	17,4	;volatile
  4984  0018  281A               	goto	u48_21
  4985  0019  281B               	goto	u48_20
  4986  001A                     u48_21:
  4987  001A  2826               	goto	i1l236
  4988  001B                     u48_20:
  4989  001B                     i1l1702:
  4990  001B  0020               	movlb	0	; select bank0
  4991  001C  1E11               	btfss	17,4	;volatile
  4992  001D  281F               	goto	u49_21
  4993  001E  2820               	goto	u49_20
  4994  001F                     u49_21:
  4995  001F  2826               	goto	i1l236
  4996  0020                     u49_20:
  4997  0020                     i1l1704:
  4998                           
  4999                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  5000  0020  085D               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5001  0021  008A               	movwf	10
  5002  0022  085C               	movf	_EUSART_TxDefaultInterruptHandler,w
  5003  0023  000A               	callw
  5004  0024  3180               	pagesel	$
  5005                           
  5006                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5007  0025  2836               	goto	i1l241
  5008  0026                     i1l236:	
  5009                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5010                           
  5011  0026  0021               	movlb	1	; select bank1
  5012  0027  1E91               	btfss	17,5	;volatile
  5013  0028  282A               	goto	u50_21
  5014  0029  282B               	goto	u50_20
  5015  002A                     u50_21:
  5016  002A  2836               	goto	i1l240
  5017  002B                     u50_20:
  5018  002B                     i1l1706:
  5019  002B  0020               	movlb	0	; select bank0
  5020  002C  1E91               	btfss	17,5	;volatile
  5021  002D  282F               	goto	u51_21
  5022  002E  2830               	goto	u51_20
  5023  002F                     u51_21:
  5024  002F  2836               	goto	i1l240
  5025  0030                     u51_20:
  5026  0030                     i1l1708:
  5027                           
  5028                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  5029  0030  085B               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5030  0031  008A               	movwf	10
  5031  0032  085A               	movf	_EUSART_RxDefaultInterruptHandler,w
  5032  0033  000A               	callw
  5033  0034  3180               	pagesel	$
  5034                           
  5035                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5036  0035  2836               	goto	i1l241
  5037  0036                     i1l240:	
  5038                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  5039                           
  5040  0036                     i1l241:
  5041  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5042  0037  0009               	retfie
  5043  0038                     __end_of_INTERRUPT_InterruptManager:
  5044                           
  5045                           	psect	text23
  5046  06EF                     __ptext23:	
  5047 ;; *************** function _TMR0_ISR *****************
  5048 ;; Defined at:
  5049 ;;		line 111 in file "mcc_generated_files/tmr0.c"
  5050 ;; Parameters:    Size  Location     Type
  5051 ;;		None
  5052 ;; Auto vars:     Size  Location     Type
  5053 ;;		None
  5054 ;; Return value:  Size  Location     Type
  5055 ;;                  1    wreg      void 
  5056 ;; Registers used:
  5057 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5058 ;; Tracked objects:
  5059 ;;		On entry : 0/0
  5060 ;;		On exit  : 0/0
  5061 ;;		Unchanged: 0/0
  5062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5063 ;;      Params:         0       0       0       0       0       0
  5064 ;;      Locals:         0       0       0       0       0       0
  5065 ;;      Temps:          0       0       0       0       0       0
  5066 ;;      Totals:         0       0       0       0       0       0
  5067 ;;Total ram usage:        0 bytes
  5068 ;; Hardware stack levels used: 1
  5069 ;; Hardware stack levels required when called: 2
  5070 ;; This function calls:
  5071 ;;		Absolute function
  5072 ;;		_TMR0_DefaultInterruptHandler
  5073 ;; This function is called by:
  5074 ;;		_INTERRUPT_InterruptManager
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           
  5079                           ;psect for function _TMR0_ISR
  5080  06EF                     _TMR0_ISR:
  5081  06EF                     i1l1648:	
  5082                           ;incstack = 0
  5083                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5084                           
  5085                           
  5086                           ;mcc_generated_files/tmr0.c: 115:     INTCONbits.TMR0IF = 0;
  5087  06EF  110B               	bcf	11,2	;volatile
  5088  06F0                     i1l1650:
  5089                           
  5090                           ;mcc_generated_files/tmr0.c: 117:     TMR0 = timer0ReloadVal;
  5091  06F0  087C               	movf	_timer0ReloadVal,w	;volatile
  5092  06F1  0020               	movlb	0	; select bank0
  5093  06F2  0095               	movwf	21	;volatile
  5094  06F3                     i1l1652:
  5095                           
  5096                           ;mcc_generated_files/tmr0.c: 119:     if(TMR0_InterruptHandler)
  5097  06F3  0852               	movf	_TMR0_InterruptHandler,w
  5098  06F4  0453               	iorwf	_TMR0_InterruptHandler+1,w
  5099  06F5  1903               	btfsc	3,2
  5100  06F6  2EF8               	goto	u41_21
  5101  06F7  2EF9               	goto	u41_20
  5102  06F8                     u41_21:
  5103  06F8  2EFE               	goto	i1l275
  5104  06F9                     u41_20:
  5105  06F9                     i1l1654:
  5106                           
  5107                           ;mcc_generated_files/tmr0.c: 120:     {;mcc_generated_files/tmr0.c: 121:         TMR0_In
      +                          terruptHandler();
  5108  06F9  0853               	movf	_TMR0_InterruptHandler+1,w
  5109  06FA  008A               	movwf	10
  5110  06FB  0852               	movf	_TMR0_InterruptHandler,w
  5111  06FC  000A               	callw
  5112  06FD  3186               	pagesel	$
  5113  06FE                     i1l275:
  5114  06FE  0008               	return
  5115  06FF                     __end_of_TMR0_ISR:
  5116                           
  5117                           	psect	text24
  5118  05DA                     __ptext24:	
  5119 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5120 ;; Defined at:
  5121 ;;		line 132 in file "mcc_generated_files/tmr0.c"
  5122 ;; Parameters:    Size  Location     Type
  5123 ;;		None
  5124 ;; Auto vars:     Size  Location     Type
  5125 ;;  tModbusData     2    4[COMMON] PTR struct _TModbusData
  5126 ;;		 -> MOS_tModbusData(204), NULL(0), 
  5127 ;; Return value:  Size  Location     Type
  5128 ;;                  1    wreg      void 
  5129 ;; Registers used:
  5130 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5131 ;; Tracked objects:
  5132 ;;		On entry : 0/0
  5133 ;;		On exit  : 0/0
  5134 ;;		Unchanged: 0/0
  5135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5136 ;;      Params:         0       0       0       0       0       0
  5137 ;;      Locals:         2       0       0       0       0       0
  5138 ;;      Temps:          2       0       0       0       0       0
  5139 ;;      Totals:         4       0       0       0       0       0
  5140 ;;Total ram usage:        4 bytes
  5141 ;; Hardware stack levels used: 1
  5142 ;; Hardware stack levels required when called: 1
  5143 ;; This function calls:
  5144 ;;		_Mos_PtGetModbusObject
  5145 ;; This function is called by:
  5146 ;;		_TMR0_Initialize
  5147 ;;		_TMR0_ISR
  5148 ;; This function uses a non-reentrant model
  5149 ;;
  5150                           
  5151                           
  5152                           ;psect for function _TMR0_DefaultInterruptHandler
  5153  05DA                     _TMR0_DefaultInterruptHandler:
  5154  05DA                     i1l1510:	
  5155                           ;incstack = 0
  5156                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  5157                           
  5158  05DA                     i1l1512:
  5159                           
  5160                           ;mcc_generated_files/tmr0.c: 138:     tModbusData = Mos_PtGetModbusObject();
  5161  05DA  3187  2760  3185   	fcall	_Mos_PtGetModbusObject
  5162  05DD  0871               	movf	?_Mos_PtGetModbusObject+1,w
  5163  05DE  00F5               	movwf	TMR0_DefaultInterruptHandler@tModbusData+1
  5164  05DF  0870               	movf	?_Mos_PtGetModbusObject,w
  5165  05E0  00F4               	movwf	TMR0_DefaultInterruptHandler@tModbusData
  5166  05E1                     i1l1514:
  5167                           
  5168                           ;mcc_generated_files/tmr0.c: 140:     u16Count++;
  5169  05E1  3001               	movlw	1
  5170  05E2  0020               	movlb	0	; select bank0
  5171  05E3  07DE               	addwf	TMR0_DefaultInterruptHandler@u16Count,f
  5172  05E4  3000               	movlw	0
  5173  05E5  3DDF               	addwfc	TMR0_DefaultInterruptHandler@u16Count+1,f
  5174  05E6                     i1l1516:
  5175                           
  5176                           ;mcc_generated_files/tmr0.c: 143:     if(tModbusData->u8TimeoutStart!=0)
  5177  05E6  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5178  05E7  3E66               	addlw	102
  5179  05E8  0086               	movwf	6
  5180  05E9  3000               	movlw	0
  5181  05EA  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5182  05EB  0087               	movwf	7
  5183  05EC  0801               	movf	1,w
  5184  05ED  1903               	btfsc	3,2
  5185  05EE  2DF0               	goto	u31_21
  5186  05EF  2DF1               	goto	u31_20
  5187  05F0                     u31_21:
  5188  05F0  2E1A               	goto	i1l285
  5189  05F1                     u31_20:
  5190  05F1                     i1l1518:
  5191                           
  5192                           ;mcc_generated_files/tmr0.c: 144:   {;mcc_generated_files/tmr0.c: 145:     tModbusData->
      +                          u8TimeoutCount++;
  5193  05F1  3001               	movlw	1
  5194  05F2  00F2               	movwf	??_TMR0_DefaultInterruptHandler
  5195  05F3  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5196  05F4  3ECB               	addlw	203
  5197  05F5  0086               	movwf	6
  5198  05F6  3000               	movlw	0
  5199  05F7  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5200  05F8  0087               	movwf	7
  5201  05F9  0872               	movf	??_TMR0_DefaultInterruptHandler,w
  5202  05FA  0781               	addwf	1,f
  5203                           
  5204                           ;mcc_generated_files/tmr0.c: 146:     if(tModbusData->u8TimeoutCount>=8)
  5205  05FB  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5206  05FC  3ECB               	addlw	203
  5207  05FD  0086               	movwf	6
  5208  05FE  3000               	movlw	0
  5209  05FF  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5210  0600  0087               	movwf	7
  5211  0601  3008               	movlw	8
  5212  0602  0201               	subwf	1,w
  5213  0603  1C03               	skipc
  5214  0604  2E06               	goto	u32_21
  5215  0605  2E07               	goto	u32_20
  5216  0606                     u32_21:
  5217  0606  2E1A               	goto	i1l285
  5218  0607                     u32_20:
  5219  0607                     i1l1520:
  5220                           
  5221                           ;mcc_generated_files/tmr0.c: 147:    {;mcc_generated_files/tmr0.c: 148:     tModbusData-
      +                          >u8TimeoutStart=0;
  5222  0607  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5223  0608  3E66               	addlw	102
  5224  0609  0086               	movwf	6
  5225  060A  3000               	movlw	0
  5226  060B  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5227  060C  0087               	movwf	7
  5228  060D  0181               	clrf	1
  5229                           
  5230                           ;mcc_generated_files/tmr0.c: 149:     tModbusData->u8OneFrameFinish=1;
  5231  060E  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5232  060F  3E64               	addlw	100
  5233  0610  00F2               	movwf	??_TMR0_DefaultInterruptHandler
  5234  0611  3000               	movlw	0
  5235  0612  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5236  0613  00F3               	movwf	??_TMR0_DefaultInterruptHandler+1
  5237  0614  0872               	movf	??_TMR0_DefaultInterruptHandler,w
  5238  0615  0086               	movwf	6
  5239  0616  0873               	movf	??_TMR0_DefaultInterruptHandler+1,w
  5240  0617  0087               	movwf	7
  5241  0618  3001               	movlw	1
  5242  0619  0081               	movwf	1
  5243  061A                     i1l285:
  5244  061A  0008               	return
  5245  061B                     __end_of_TMR0_DefaultInterruptHandler:
  5246                           
  5247                           	psect	text25
  5248  0777                     __ptext25:	
  5249 ;; *************** function _EUSART_Transmit_ISR *****************
  5250 ;; Defined at:
  5251 ;;		line 162 in file "mcc_generated_files/eusart.c"
  5252 ;; Parameters:    Size  Location     Type
  5253 ;;		None
  5254 ;; Auto vars:     Size  Location     Type
  5255 ;;		None
  5256 ;; Return value:  Size  Location     Type
  5257 ;;                  1    wreg      void 
  5258 ;; Registers used:
  5259 ;;		None
  5260 ;; Tracked objects:
  5261 ;;		On entry : 0/0
  5262 ;;		On exit  : 0/0
  5263 ;;		Unchanged: 0/0
  5264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5265 ;;      Params:         0       0       0       0       0       0
  5266 ;;      Locals:         0       0       0       0       0       0
  5267 ;;      Temps:          0       0       0       0       0       0
  5268 ;;      Totals:         0       0       0       0       0       0
  5269 ;;Total ram usage:        0 bytes
  5270 ;; Hardware stack levels used: 1
  5271 ;; This function calls:
  5272 ;;		Nothing
  5273 ;; This function is called by:
  5274 ;;		_EUSART_Initialize
  5275 ;;		_INTERRUPT_InterruptManager
  5276 ;; This function uses a non-reentrant model
  5277 ;;
  5278                           
  5279                           
  5280                           ;psect for function _EUSART_Transmit_ISR
  5281  0777                     _EUSART_Transmit_ISR:
  5282  0777                     i1l1626:	
  5283                           ;incstack = 0
  5284                           ; Regs used in _EUSART_Transmit_ISR: []
  5285                           
  5286                           
  5287                           ;mcc_generated_files/eusart.c: 166:         PIE1bits.TXIE = 0;
  5288  0777  0021               	movlb	1	; select bank1
  5289  0778  1211               	bcf	17,4	;volatile
  5290  0779                     i1l142:
  5291  0779  0008               	return
  5292  077A                     __end_of_EUSART_Transmit_ISR:
  5293                           
  5294                           	psect	text26
  5295  0656                     __ptext26:	
  5296 ;; *************** function _EUSART_Receive_ISR *****************
  5297 ;; Defined at:
  5298 ;;		line 170 in file "mcc_generated_files/eusart.c"
  5299 ;; Parameters:    Size  Location     Type
  5300 ;;		None
  5301 ;; Auto vars:     Size  Location     Type
  5302 ;;		None
  5303 ;; Return value:  Size  Location     Type
  5304 ;;                  1    wreg      void 
  5305 ;; Registers used:
  5306 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5307 ;; Tracked objects:
  5308 ;;		On entry : 0/0
  5309 ;;		On exit  : 0/0
  5310 ;;		Unchanged: 0/0
  5311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5312 ;;      Params:         0       0       0       0       0       0
  5313 ;;      Locals:         0       0       0       0       0       0
  5314 ;;      Temps:          0       0       0       0       0       0
  5315 ;;      Totals:         0       0       0       0       0       0
  5316 ;;Total ram usage:        0 bytes
  5317 ;; Hardware stack levels used: 1
  5318 ;; Hardware stack levels required when called: 3
  5319 ;; This function calls:
  5320 ;;		Absolute function
  5321 ;;		_EUSART_DefaultErrorHandler
  5322 ;;		_EUSART_DefaultFramingErrorHandler
  5323 ;;		_EUSART_DefaultOverrunErrorHandler
  5324 ;;		_EUSART_RxDataHandler
  5325 ;; This function is called by:
  5326 ;;		_EUSART_Initialize
  5327 ;;		_INTERRUPT_InterruptManager
  5328 ;; This function uses a non-reentrant model
  5329 ;;
  5330                           
  5331                           
  5332                           ;psect for function _EUSART_Receive_ISR
  5333  0656                     _EUSART_Receive_ISR:
  5334  0656                     i1l1628:	
  5335                           ;incstack = 0
  5336                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5337                           
  5338                           
  5339                           ;mcc_generated_files/eusart.c: 173:     eusartRxLastError.status = 0;
  5340  0656  01FB               	clrf	_eusartRxLastError	;volatile
  5341  0657                     i1l1630:
  5342                           
  5343                           ;mcc_generated_files/eusart.c: 175:     if(RCSTAbits.FERR){
  5344  0657  0023               	movlb	3	; select bank3
  5345  0658  1D1D               	btfss	29,2	;volatile
  5346  0659  2E5B               	goto	u38_21
  5347  065A  2E5C               	goto	u38_20
  5348  065B                     u38_21:
  5349  065B  2E63               	goto	i1l1636
  5350  065C                     u38_20:
  5351  065C                     i1l1632:
  5352                           
  5353                           ;mcc_generated_files/eusart.c: 176:         eusartRxLastError.ferr = 1;
  5354  065C  14FB               	bsf	_eusartRxLastError,1	;volatile
  5355  065D                     i1l1634:
  5356                           
  5357                           ;mcc_generated_files/eusart.c: 177:         EUSART_FramingErrorHandler();
  5358  065D  0020               	movlb	0	; select bank0
  5359  065E  0859               	movf	_EUSART_FramingErrorHandler+1,w
  5360  065F  008A               	movwf	10
  5361  0660  0858               	movf	_EUSART_FramingErrorHandler,w
  5362  0661  000A               	callw
  5363  0662  3186               	pagesel	$
  5364  0663                     i1l1636:
  5365                           
  5366                           ;mcc_generated_files/eusart.c: 180:     if(RCSTAbits.OERR){
  5367  0663  0023               	movlb	3	; select bank3
  5368  0664  1C9D               	btfss	29,1	;volatile
  5369  0665  2E67               	goto	u39_21
  5370  0666  2E68               	goto	u39_20
  5371  0667                     u39_21:
  5372  0667  2E6F               	goto	i1l1642
  5373  0668                     u39_20:
  5374  0668                     i1l1638:
  5375                           
  5376                           ;mcc_generated_files/eusart.c: 181:         eusartRxLastError.oerr = 1;
  5377  0668  157B               	bsf	_eusartRxLastError,2	;volatile
  5378  0669                     i1l1640:
  5379                           
  5380                           ;mcc_generated_files/eusart.c: 182:         EUSART_OverrunErrorHandler();
  5381  0669  0020               	movlb	0	; select bank0
  5382  066A  0857               	movf	_EUSART_OverrunErrorHandler+1,w
  5383  066B  008A               	movwf	10
  5384  066C  0856               	movf	_EUSART_OverrunErrorHandler,w
  5385  066D  000A               	callw
  5386  066E  3186               	pagesel	$
  5387  066F                     i1l1642:
  5388                           
  5389                           ;mcc_generated_files/eusart.c: 185:     if(eusartRxLastError.status){
  5390  066F  087B               	movf	_eusartRxLastError,w	;volatile
  5391  0670  1903               	btfsc	3,2
  5392  0671  2E73               	goto	u40_21
  5393  0672  2E74               	goto	u40_20
  5394  0673                     u40_21:
  5395  0673  2E7B               	goto	i1l1646
  5396  0674                     u40_20:
  5397  0674                     i1l1644:
  5398                           
  5399                           ;mcc_generated_files/eusart.c: 186:         EUSART_ErrorHandler();
  5400  0674  0020               	movlb	0	; select bank0
  5401  0675  0855               	movf	_EUSART_ErrorHandler+1,w
  5402  0676  008A               	movwf	10
  5403  0677  0854               	movf	_EUSART_ErrorHandler,w
  5404  0678  000A               	callw
  5405  0679  3186               	pagesel	$
  5406                           
  5407                           ;mcc_generated_files/eusart.c: 187:     } else {
  5408  067A  2E7E               	goto	i1l149
  5409  067B                     i1l1646:
  5410                           
  5411                           ;mcc_generated_files/eusart.c: 188:         EUSART_RxDataHandler();
  5412  067B  3185  252F  3186   	fcall	_EUSART_RxDataHandler
  5413  067E                     i1l149:
  5414  067E  0008               	return
  5415  067F                     __end_of_EUSART_Receive_ISR:
  5416                           
  5417                           	psect	text27
  5418  0769                     __ptext27:	
  5419 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5420 ;; Defined at:
  5421 ;;		line 222 in file "mcc_generated_files/eusart.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;		None
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1    wreg      void 
  5428 ;; Registers used:
  5429 ;;		None
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/0
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5435 ;;      Params:         0       0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0
  5438 ;;      Totals:         0       0       0       0       0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used: 1
  5441 ;; This function calls:
  5442 ;;		Nothing
  5443 ;; This function is called by:
  5444 ;;		_EUSART_Initialize
  5445 ;;		_EUSART_Receive_ISR
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           
  5450                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5451  0769                     _EUSART_DefaultOverrunErrorHandler:
  5452  0769                     i1l1506:	
  5453                           ;incstack = 0
  5454                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5455                           
  5456                           
  5457                           ;mcc_generated_files/eusart.c: 226:     RCSTAbits.CREN = 0;
  5458  0769  0023               	movlb	3	; select bank3
  5459  076A  121D               	bcf	29,4	;volatile
  5460                           
  5461                           ;mcc_generated_files/eusart.c: 227:     RCSTAbits.CREN = 1;
  5462  076B  161D               	bsf	29,4	;volatile
  5463  076C                     i1l160:
  5464  076C  0008               	return
  5465  076D                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5466                           
  5467                           	psect	text28
  5468  077A                     __ptext28:	
  5469 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5470 ;; Defined at:
  5471 ;;		line 217 in file "mcc_generated_files/eusart.c"
  5472 ;; Parameters:    Size  Location     Type
  5473 ;;		None
  5474 ;; Auto vars:     Size  Location     Type
  5475 ;;		None
  5476 ;; Return value:  Size  Location     Type
  5477 ;;                  1    wreg      void 
  5478 ;; Registers used:
  5479 ;;		None
  5480 ;; Tracked objects:
  5481 ;;		On entry : 0/0
  5482 ;;		On exit  : 0/0
  5483 ;;		Unchanged: 0/0
  5484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5485 ;;      Params:         0       0       0       0       0       0
  5486 ;;      Locals:         0       0       0       0       0       0
  5487 ;;      Temps:          0       0       0       0       0       0
  5488 ;;      Totals:         0       0       0       0       0       0
  5489 ;;Total ram usage:        0 bytes
  5490 ;; Hardware stack levels used: 1
  5491 ;; This function calls:
  5492 ;;		Nothing
  5493 ;; This function is called by:
  5494 ;;		_EUSART_Initialize
  5495 ;;		_EUSART_Receive_ISR
  5496 ;; This function uses a non-reentrant model
  5497 ;;
  5498                           
  5499                           
  5500                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5501  077A                     _EUSART_DefaultFramingErrorHandler:
  5502  077A                     i1l157:	
  5503                           ;incstack = 0
  5504                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5505                           
  5506  077A  0008               	return
  5507  077B                     __end_of_EUSART_DefaultFramingErrorHandler:
  5508                           
  5509                           	psect	text29
  5510  076D                     __ptext29:	
  5511 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5512 ;; Defined at:
  5513 ;;		line 231 in file "mcc_generated_files/eusart.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;		None
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;		None
  5518 ;; Return value:  Size  Location     Type
  5519 ;;                  1    wreg      void 
  5520 ;; Registers used:
  5521 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5522 ;; Tracked objects:
  5523 ;;		On entry : 0/0
  5524 ;;		On exit  : 0/0
  5525 ;;		Unchanged: 0/0
  5526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5527 ;;      Params:         0       0       0       0       0       0
  5528 ;;      Locals:         0       0       0       0       0       0
  5529 ;;      Temps:          0       0       0       0       0       0
  5530 ;;      Totals:         0       0       0       0       0       0
  5531 ;;Total ram usage:        0 bytes
  5532 ;; Hardware stack levels used: 1
  5533 ;; Hardware stack levels required when called: 2
  5534 ;; This function calls:
  5535 ;;		_EUSART_RxDataHandler
  5536 ;; This function is called by:
  5537 ;;		_EUSART_Initialize
  5538 ;;		_EUSART_Receive_ISR
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           
  5543                           ;psect for function _EUSART_DefaultErrorHandler
  5544  076D                     _EUSART_DefaultErrorHandler:
  5545  076D                     i1l1508:	
  5546                           ;incstack = 0
  5547                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5548                           
  5549                           
  5550                           ;mcc_generated_files/eusart.c: 233:     EUSART_RxDataHandler();
  5551  076D  3185  252F  3187   	fcall	_EUSART_RxDataHandler
  5552  0770                     i1l163:
  5553  0770  0008               	return
  5554  0771                     __end_of_EUSART_DefaultErrorHandler:
  5555                           
  5556                           	psect	text30
  5557  052F                     __ptext30:	
  5558 ;; *************** function _EUSART_RxDataHandler *****************
  5559 ;; Defined at:
  5560 ;;		line 194 in file "mcc_generated_files/eusart.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  tModbusData     2    7[COMMON] PTR struct _TModbusData
  5565 ;;		 -> MOS_tModbusData(204), NULL(0), 
  5566 ;;  ucReceivedBy    1    6[COMMON] unsigned char 
  5567 ;; Return value:  Size  Location     Type
  5568 ;;                  1    wreg      void 
  5569 ;; Registers used:
  5570 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5571 ;; Tracked objects:
  5572 ;;		On entry : 0/0
  5573 ;;		On exit  : 0/0
  5574 ;;		Unchanged: 0/0
  5575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5576 ;;      Params:         0       0       0       0       0       0
  5577 ;;      Locals:         3       0       0       0       0       0
  5578 ;;      Temps:          4       0       0       0       0       0
  5579 ;;      Totals:         7       0       0       0       0       0
  5580 ;;Total ram usage:        7 bytes
  5581 ;; Hardware stack levels used: 1
  5582 ;; Hardware stack levels required when called: 1
  5583 ;; This function calls:
  5584 ;;		_Mos_PtGetModbusObject
  5585 ;; This function is called by:
  5586 ;;		_EUSART_Receive_ISR
  5587 ;;		_EUSART_DefaultErrorHandler
  5588 ;; This function uses a non-reentrant model
  5589 ;;
  5590                           
  5591                           
  5592                           ;psect for function _EUSART_RxDataHandler
  5593  052F                     _EUSART_RxDataHandler:
  5594  052F                     i1l1408:	
  5595                           ;incstack = 0
  5596                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5597                           
  5598  052F                     i1l1410:
  5599                           
  5600                           ;mcc_generated_files/eusart.c: 197:     tModbusData = Mos_PtGetModbusObject();
  5601  052F  3187  2760  3185   	fcall	_Mos_PtGetModbusObject
  5602  0532  0871               	movf	?_Mos_PtGetModbusObject+1,w
  5603  0533  00F8               	movwf	EUSART_RxDataHandler@tModbusData+1
  5604  0534  0870               	movf	?_Mos_PtGetModbusObject,w
  5605  0535  00F7               	movwf	EUSART_RxDataHandler@tModbusData
  5606  0536                     i1l1412:
  5607  0536                     i1l1414:
  5608                           
  5609                           ;mcc_generated_files/eusart.c: 200:     ucReceivedByte = RCREG;
  5610  0536  0023               	movlb	3	; select bank3
  5611  0537  0819               	movf	25,w	;volatile
  5612  0538  00F2               	movwf	??_EUSART_RxDataHandler
  5613  0539  0872               	movf	??_EUSART_RxDataHandler,w
  5614  053A  00F6               	movwf	EUSART_RxDataHandler@ucReceivedByte
  5615  053B                     i1l1416:
  5616                           
  5617                           ;mcc_generated_files/eusart.c: 202:     if(tModbusData->u8OneFrameFinish ==1)
  5618  053B  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5619  053C  3E64               	addlw	100
  5620  053D  0086               	movwf	6
  5621  053E  3000               	movlw	0
  5622  053F  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5623  0540  0087               	movwf	7
  5624  0541  0301               	decf	1,w
  5625  0542  1D03               	btfss	3,2
  5626  0543  2D45               	goto	u28_21
  5627  0544  2D46               	goto	u28_20
  5628  0545                     u28_21:
  5629  0545  2D47               	goto	i1l1420
  5630  0546                     u28_20:
  5631  0546  2D84               	goto	i1l153
  5632  0547                     i1l1420:
  5633                           
  5634                           ;mcc_generated_files/eusart.c: 207:         tModbusData->auReceiveBuff[tModbusData->u8Re
      +                          ceivedByteCount ++] = ucReceivedByte;
  5635  0547  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5636  0548  3E65               	addlw	101
  5637  0549  0086               	movwf	6
  5638  054A  3000               	movlw	0
  5639  054B  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5640  054C  0087               	movwf	7
  5641  054D  0801               	movf	1,w
  5642  054E  00F2               	movwf	??_EUSART_RxDataHandler
  5643  054F  01F3               	clrf	??_EUSART_RxDataHandler+1
  5644  0550  0872               	movf	??_EUSART_RxDataHandler,w
  5645  0551  0777               	addwf	EUSART_RxDataHandler@tModbusData,w
  5646  0552  00F4               	movwf	??_EUSART_RxDataHandler+2
  5647  0553  0873               	movf	??_EUSART_RxDataHandler+1,w
  5648  0554  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5649  0555  00F5               	movwf	??_EUSART_RxDataHandler+3
  5650  0556  0874               	movf	??_EUSART_RxDataHandler+2,w
  5651  0557  0086               	movwf	6
  5652  0558  0875               	movf	??_EUSART_RxDataHandler+3,w
  5653  0559  0087               	movwf	7
  5654  055A  0876               	movf	EUSART_RxDataHandler@ucReceivedByte,w
  5655  055B  0081               	movwf	1
  5656  055C  3001               	movlw	1
  5657  055D  00F2               	movwf	??_EUSART_RxDataHandler
  5658  055E  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5659  055F  3E65               	addlw	101
  5660  0560  0086               	movwf	6
  5661  0561  3000               	movlw	0
  5662  0562  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5663  0563  0087               	movwf	7
  5664  0564  0872               	movf	??_EUSART_RxDataHandler,w
  5665  0565  0781               	addwf	1,f
  5666                           
  5667                           ;mcc_generated_files/eusart.c: 208:         tModbusData->u8TimeoutCount = 0;
  5668  0566  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5669  0567  3ECB               	addlw	203
  5670  0568  0086               	movwf	6
  5671  0569  3000               	movlw	0
  5672  056A  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5673  056B  0087               	movwf	7
  5674  056C  0181               	clrf	1
  5675                           
  5676                           ;mcc_generated_files/eusart.c: 210:     if(tModbusData->u8ReceivedByteCount ==1)
  5677  056D  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5678  056E  3E65               	addlw	101
  5679  056F  0086               	movwf	6
  5680  0570  3000               	movlw	0
  5681  0571  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5682  0572  0087               	movwf	7
  5683  0573  0301               	decf	1,w
  5684  0574  1D03               	btfss	3,2
  5685  0575  2D77               	goto	u29_21
  5686  0576  2D78               	goto	u29_20
  5687  0577                     u29_21:
  5688  0577  2D84               	goto	i1l153
  5689  0578                     u29_20:
  5690  0578                     i1l1422:
  5691                           
  5692                           ;mcc_generated_files/eusart.c: 211:         {;mcc_generated_files/eusart.c: 212:        
      +                               tModbusData->u8TimeoutStart=1;
  5693  0578  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5694  0579  3E66               	addlw	102
  5695  057A  00F2               	movwf	??_EUSART_RxDataHandler
  5696  057B  3000               	movlw	0
  5697  057C  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5698  057D  00F3               	movwf	??_EUSART_RxDataHandler+1
  5699  057E  0872               	movf	??_EUSART_RxDataHandler,w
  5700  057F  0086               	movwf	6
  5701  0580  0873               	movf	??_EUSART_RxDataHandler+1,w
  5702  0581  0087               	movwf	7
  5703  0582  3001               	movlw	1
  5704  0583  0081               	movwf	1
  5705  0584                     i1l153:
  5706  0584  0008               	return
  5707  0585                     __end_of_EUSART_RxDataHandler:
  5708                           
  5709                           	psect	text31
  5710  0760                     __ptext31:	
  5711 ;; *************** function _Mos_PtGetModbusObject *****************
  5712 ;; Defined at:
  5713 ;;		line 156 in file "Modbus_uart/Modbus.c"
  5714 ;; Parameters:    Size  Location     Type
  5715 ;;		None
  5716 ;; Auto vars:     Size  Location     Type
  5717 ;;		None
  5718 ;; Return value:  Size  Location     Type
  5719 ;;                  2    0[COMMON] PTR struct _TModbusData
  5720 ;; Registers used:
  5721 ;;		None
  5722 ;; Tracked objects:
  5723 ;;		On entry : 0/0
  5724 ;;		On exit  : 0/0
  5725 ;;		Unchanged: 0/0
  5726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5727 ;;      Params:         2       0       0       0       0       0
  5728 ;;      Locals:         0       0       0       0       0       0
  5729 ;;      Temps:          0       0       0       0       0       0
  5730 ;;      Totals:         2       0       0       0       0       0
  5731 ;;Total ram usage:        2 bytes
  5732 ;; Hardware stack levels used: 1
  5733 ;; This function calls:
  5734 ;;		Nothing
  5735 ;; This function is called by:
  5736 ;;		_EUSART_RxDataHandler
  5737 ;;		_TMR0_DefaultInterruptHandler
  5738 ;; This function uses a non-reentrant model
  5739 ;;
  5740                           
  5741                           
  5742                           ;psect for function _Mos_PtGetModbusObject
  5743  0760                     _Mos_PtGetModbusObject:
  5744  0760                     i1l1392:	
  5745                           ;incstack = 0
  5746                           ; Regs used in _Mos_PtGetModbusObject: []
  5747                           
  5748                           
  5749                           ;Modbus_uart/Modbus.c: 158:  return &MOS_tModbusData;
  5750  0760  3020               	movlw	32
  5751  0761  00F1               	movwf	?_Mos_PtGetModbusObject+1
  5752  0762  30A4               	movlw	164
  5753  0763  00F0               	movwf	?_Mos_PtGetModbusObject
  5754  0764                     i1l384:
  5755  0764  0008               	return
  5756  0765                     __end_of_Mos_PtGetModbusObject:
  5757  007E                     btemp	set	126	;btemp
  5758  007E                     int$flags	set	126
  5759  007E                     wtemp0	set	126
  5760  20A4                     
  5761                           	psect	config
  5762                           
  5763                           ;Config register CONFIG1 @ 0x8007
  5764                           ;	Oscillator Selection
  5765                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5766                           ;	Watchdog Timer Enable
  5767                           ;	WDTE = OFF, WDT disabled
  5768                           ;	Power-up Timer Enable
  5769                           ;	PWRTE = OFF, PWRT disabled
  5770                           ;	MCLR Pin Function Select
  5771                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5772                           ;	Flash Program Memory Code Protection
  5773                           ;	CP = OFF, Program memory code protection is disabled
  5774                           ;	Data Memory Code Protection
  5775                           ;	CPD = OFF, Data memory code protection is disabled
  5776                           ;	Brown-out Reset Enable
  5777                           ;	BOREN = ON, Brown-out Reset enabled
  5778                           ;	Clock Out Enable
  5779                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5780                           ;	Internal/External Switchover
  5781                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5782                           ;	Fail-Safe Clock Monitor Enable
  5783                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5784  8007                     	org	32775
  5785  8007  3FE4               	dw	16356
  5786                           
  5787                           ;Config register CONFIG2 @ 0x8008
  5788                           ;	Flash Memory Self-Write Protection
  5789                           ;	WRT = OFF, Write protection off
  5790                           ;	PLL Enable
  5791                           ;	PLLEN = OFF, 4x PLL disabled
  5792                           ;	Stack Overflow/Underflow Reset Enable
  5793                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5794                           ;	Brown-out Reset Voltage Selection
  5795                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5796                           ;	Low-Voltage Programming Enable
  5797                           ;	LVP = ON, Low-voltage programming enabled
  5798  8008                     	org	32776
  5799  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    512
    Data        22
    BSS         6
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     50      65
    BANK1            80      0      22
    BANK2             4      0       0
    BANK3             0      0       0
    BANK4             0      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    crc16@puchMsg	PTR unsigned char  size(2) Largest target is 204
		 -> MOS_tModbusData(BIGRAM[204]), 

    TMR0_DefaultInterruptHandler@tModbusData	PTR struct _TModbusData size(2) Largest target is 204
		 -> MOS_tModbusData(BIGRAM[204]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    sp__Mos_PtGetModbusObject	PTR struct _TModbusData size(2) Largest target is 204
		 -> MOS_tModbusData(BIGRAM[204]), 

    EUSART_RxDataHandler@tModbusData	PTR struct _TModbusData size(2) Largest target is 204
		 -> MOS_tModbusData(BIGRAM[204]), NULL(NULL[0]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _TMR0_DefaultInterruptHandler->_Mos_PtGetModbusObject
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _EUSART_RxDataHandler->_Mos_PtGetModbusObject

Critical Paths under _main in BANK0

    _main->_MOS_vModBusHandler
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _MOS_vModBusHandler->_MOS_vModbudFun3
    _MOS_vModbudFun6->_crc16
    _MOS_vModbudFun3->_crc16

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4212
                  _EUSART_Initialize
                 _MOS_vModBusHandler
                    _MOS_vModbusInit
           _MOS_vModbusReceiveEnalbe
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      1     1      0      98
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOS_vModbusInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MOS_vModBusHandler                                  13    13      0    3036
                                             37 BANK0     13    13      0
                    _MOS_vModbudFun3
                    _MOS_vModbudFun6
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _MOS_vModbudFun6                                     15    15      0    1118
                                             15 BANK0     15    15      0
                       _EUSART_Write
          _MOS_vModbusTransmitEnalbe
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _MOS_vModbudFun3                                     22    22      0    1143
                                             15 BANK0     22    22      0
                       _EUSART_Write
           _MOS_vModbusReceiveEnalbe
          _MOS_vModbusTransmitEnalbe
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _crc16                                               15    11      4     638
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) _MOS_vModbusTransmitEnalbe                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOS_vModbusReceiveEnalbe                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0     472
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (5) _TMR0_ISR                                             0     0      0     112
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (6) _TMR0_DefaultInterruptHandler                         4     4      0     112
                                              2 COMMON     4     4      0
              _Mos_PtGetModbusObject
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0     360
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0     180
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 7     7      0     180
                                              2 COMMON     7     7      0
              _Mos_PtGetModbusObject
 ---------------------------------------------------------------------------------
 (7) _Mos_PtGetModbusObject                                2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     _EUSART_SetErrorHandler
     _EUSART_SetFramingErrorHandler
     _EUSART_SetOverrunErrorHandler
     _EUSART_SetRxInterruptHandler
     _EUSART_SetTxInterruptHandler
   _MOS_vModBusHandler
     _MOS_vModbudFun3
       _EUSART_Write
       _MOS_vModbusReceiveEnalbe
       _MOS_vModbusTransmitEnalbe
       _crc16
     _MOS_vModbudFun6
       _EUSART_Write
       _MOS_vModbusTransmitEnalbe
       _crc16
     _crc16
   _MOS_vModbusInit
   _MOS_vModbusReceiveEnalbe
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _TMR0_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
         _Mos_PtGetModbusObject
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _Mos_PtGetModbusObject

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             170      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      64       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      41       6       81.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0      16       8       27.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2                4      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            30      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      64      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 12 21:40:01 2021

                ?_EUSART_SetRxInterruptHandler 0020                       __size_of_MOS_vModbusInit 000B  
                                           l25 06AF                                             l51 06EE  
                                           l54 0734                                             l57 0768  
                              _timer0ReloadVal 007C                                            l118 0655  
                                          l136 071E                                            l321 05D9  
                                          l139 0722                                            l172 075F  
                                          l341 0774                                            l166 0759  
                                          l262 06DB                                            l343 0776  
                                          l351 010F                                            l175 0747  
                                          l169 0753                                            l346 0771  
                                          l362 0278                                            l338 072D  
                                          l178 074D                                            l363 027E  
                                          l195 073B                                            l348 0773  
                                          l380 0524                                            l357 017A  
                                          l278 0741                                            l367 052E  
                                          u300 05CA                                            u301 05C9  
                                          u420 0488                                            u421 0487  
                                          u270 0722                                            u350 0119  
                                          u430 04F3                                            u271 0721  
                                          u351 0118                                            u335 00C0  
                                          u431 04F2                                            u360 0177  
                                          u440 04F9                                            u361 0176  
                                          u345 00E9                                            u441 04F8  
                                          u370 0278                                            u355 0115  
                                          u371 0277                                            u435 04EF  
                                          u365 0173                                            u375 0274  
                                          _Reg 00A0                         ??_EUSART_RxDataHandler 0072  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                         l1400 074E                                           l1402 075A  
                                         l1404 0719                                           l1500 064A  
                                         l1406 071C                                           l1430 05A1  
                                         l1502 0652                                           l1432 05A5  
                                         l1600 0206                                           l1504 0653  
                                         l1424 073C                                           l1434 05B2  
                                         l1426 0585                                           l1530 008A  
                                         l1522 005D                                           l1610 0240  
                                         l1602 0216                                           l1450 06A4  
                                         l1442 0699                                           l1428 058F  
                                         l1436 05BE                                           l1540 00B6  
                                         l1532 008E                                           l1524 0068  
                                         l1620 0269                                           l1612 0250  
                                         l1604 021A                                           l1460 0732  
                                         l1452 06A9                                           l1444 069C  
                                         l1438 05CA                                           l1550 0119  
                                         l1542 00BA                                           l1534 009E  
                                         l1526 0076                                           l1622 026E  
                                         l1614 0254                                           l1606 022A  
                                         l1454 06AD                                           l1446 069F  
                                         l1470 06D2                                           l1462 0765  
                                         l1710 067F                                           l1560 0153  
                                         l1552 0129                                           l1544 00BD  
                                         l1536 00A2                                           l1528 0084  
                                         l1616 0257                                           l1608 023C  
                                         l1480 061B                                           l1456 072E  
                                         l1448 06A1                                           l1472 06D3  
                                         l1464 06C6                                           l1624 06DC  
                                         l1720 0693                                           l1712 068B  
                                         l1570 0177                                           l1562 0156  
                                         l1554 013B                                           l1546 00E2  
                                         l1538 00A6                                           l1618 025B  
                                         l1394 0748                                           l1490 0634  
                                         l1482 061D                                           l1458 0731  
                                         l1474 06D4                                           l1466 06CB  
                                         l1714 068E                                           l1564 015A  
                                         l1556 013F                                           l1548 00E6  
                                         l1580 01A8                                           l1572 017B  
                                         l1660 047F                                           l1476 0735  
                                         l1396 0742                                           l1492 0636  
                                         l1484 0625                                           l1468 06CE  
                                         l1716 0691                                           l1566 0168  
                                         l1558 014F                                           l1590 01D8  
                                         l1582 01AE                                           l1574 0184  
                                         l1742 050A                                           l1670 04CD  
                                         l1478 0739                                           l1398 0754  
                                         l1494 0638                                           l1486 062F  
                                         l1718 0692                                           l1568 016D  
                                         l1592 01DC                                           l1584 01B2  
                                         l1576 0192                                           l1680 04FE  
                                         l1672 04E9                                           l1664 0489  
                                         l1656 0723                                           l1496 063A  
                                         l1488 0632                                           l1594 01EC  
                                         l1586 01C2                                           l1578 01A0  
                                         l1674 04F3                                           l1666 049B  
                                         l1658 0728                                           l1498 0642  
                                         l1596 01F0                                           l1588 01C6  
                                         l1684 0502                                           l1668 04B2  
                                         l1598 0202                                           l1678 04FA  
                                         l1688 0524                                           _LATA 010C  
                                         _LATB 010D                                           _TMR0 0015  
                                         _WPUA 020C                                           _WPUB 020D  
                                         _main 067F                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                         start 0038                  MOS_vModbudFun6@u16TransmitCRC 0034  
                      __end_of_TMR0_Initialize 06DC                 ??_TMR0_DefaultInterruptHandler 0072  
                                ?_EUSART_Write 0070                 __size_of_OSCILLATOR_Initialize 0007  
                __end_of_OSCILLATOR_Initialize 0735                                          ?_main 0070  
                                        i1l142 0779                                          i1l160 076C  
                                        i1l240 0036                                          i1l153 0584  
                                        i1l241 0036                                          i1l233 0012  
                                        i1l163 0770                                          i1l236 0026  
                                        i1l157 077A                                          i1l149 067E  
                                        i1l275 06FE                                          i1l285 061A  
                                        i1l384 0764                                          _RCREG 0199  
                                        _RCSTA 019D                                          u31_20 05F1  
                                        u31_21 05F0                                          u40_20 0674  
                                        u32_20 0607                                          u40_21 0673  
                                        u32_21 0606                                          u41_20 06F9  
                                        u41_21 06F8                                          u50_20 002B  
                                        u50_21 002A                                          u51_20 0030  
                                        u51_21 002F                                          u28_20 0546  
                                        u28_21 0545                                          u29_20 0578  
                                        u45_20 000A                                          u29_21 0577  
                                        u45_21 0009                                          u38_20 065C  
                                        u46_20 000E                                          u38_21 065B  
                                        u46_21 000D                                          u39_20 0668  
                                        u47_20 0016                                          u39_21 0667  
                                        u47_21 0015                                          u48_20 001B  
                                        u48_21 001A                                          u49_20 0020  
                                        u49_21 001F                                          _TRISA 008C  
                                        _TRISB 008D                                          _TXREG 019A  
                                        _TXSTA 019E              __size_of_TMR0_SetInterruptHandler 0006  
                    ?_TMR0_SetInterruptHandler 0020                               __end_of_TMR0_ISR 06FF  
                                        _crc16 0585                                 _WDT_Initialize 0765  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E              MOS_vModBusHandler@u16CalculateCRC 004C  
                              __initialization 003A                                   __end_of_main 0699  
                               ??_EUSART_Write 0020                    ?_INTERRUPT_InterruptManager 0070  
                  ??_MOS_vModbusTransmitEnalbe 0020                              ??_MOS_vModbudFun3 002F  
                            ??_MOS_vModbudFun6 002F                 ??_EUSART_SetRxInterruptHandler 0022  
                                       ??_main 0052                              ??_MOS_vModbusInit 0020  
                       __end_of_WDT_Initialize 0769                                         ?_crc16 0020  
    __end_of_EUSART_DefaultFramingErrorHandler 077B     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0070             ?_EUSART_DefaultFramingErrorHandler 0070  
            _EUSART_DefaultFramingErrorHandler 077A                                         _ADCON0 009D  
                                       _ADCON1 009E                     _EUSART_OverrunErrorHandler 0056  
                                       _ADRESH 009C                                         _ADRESL 009B  
                                       _ANSELA 018C                                         _ANSELB 018D  
                                       _BORCON 0116                                         i1l1410 052F  
                                       i1l1420 0547                                         i1l1412 0536  
                                       i1l1422 0578                                         i1l1414 0536  
                                       i1l1510 05DA                                         i1l1416 053B  
                                       i1l1408 052F                                         i1l1520 0607  
                                       i1l1512 05DA                                         i1l1506 0769  
                                       i1l1514 05E1                                         i1l1508 076D  
                                       i1l1516 05E6                                         i1l1700 0016  
                                       i1l1630 0657                                         i1l1518 05F1  
                                       i1l1702 001B                                         i1l1392 0760  
                                       i1l1640 0669                                         i1l1632 065C  
                                       i1l1704 0020                                         i1l1642 066F  
                                       i1l1634 065D                                         i1l1626 0777  
                                       i1l1650 06F0                                         i1l1706 002B  
                                       i1l1644 0674                                         i1l1636 0663  
                                       i1l1628 0656                                         i1l1652 06F3  
                                       i1l1708 0030                                         i1l1646 067B  
                                       i1l1638 0668                                         i1l1654 06F9  
                                       i1l1648 06EF                                         i1l1694 0006  
                                       i1l1696 000A                                         i1l1698 000E  
                                       _OSCCON 0099                                         _SPBRGH 019C  
                                       _SPBRGL 019B                                         _WDTCON 0097  
                      ??_Mos_PtGetModbusObject 0072                            _EUSART_Transmit_ISR 0777  
                             ?_TMR0_Initialize 0070                                ?_WDT_Initialize 0070  
     TMR0_SetInterruptHandler@InterruptHandler 0020                           ?_EUSART_Transmit_ISR 0070  
                    _MOS_vModbusTransmitEnalbe 0771                              _SYSTEM_Initialize 06DC  
              EUSART_RxDataHandler@tModbusData 0077                                   crc16@puchMsg 0020  
                      __end_of__initialization 0059                             ?_SYSTEM_Initialize 0070  
         __end_of_EUSART_SetTxInterruptHandler 0748          __size_of_EUSART_SetTxInterruptHandler 0006  
                 _EUSART_SetTxInterruptHandler 0742                                 __pcstackCOMMON 0070  
                                 __pidataBANK1 06B0                                  __end_of_crc16 05DA  
                          ??_SYSTEM_Initialize 0023                                      ?_TMR0_ISR 0070  
            __size_of_MOS_vModbusReceiveEnalbe 0003                      ?_MOS_vModbusReceiveEnalbe 0070  
                               _OPTION_REGbits 0095                    __size_of_MOS_vModBusHandler 00B0  
              ??_EUSART_SetOverrunErrorHandler 0022                                        ??_crc16 0024  
                    __end_of_SYSTEM_Initialize 06EF                          ??_EUSART_Transmit_ISR 0070  
         TMR0_DefaultInterruptHandler@u16Count 005E                                     __pbssBANK0 005E  
                         __end_of_EUSART_Write 0723                                     __pnvCOMMON 007C  
                  __size_of_EUSART_Receive_ISR 0029                  MOS_vModbudFun3@u16RegisterAdd 003B  
                MOS_vModbudFun3@u16RegisterLen 003D                                     __pmaintext 067F  
                ?_EUSART_SetTxInterruptHandler 0020               _EUSART_TxDefaultInterruptHandler 005C  
             __end_of_TMR0_SetInterruptHandler 0742                                     ??_TMR0_ISR 0076  
                                   __pintentry 0004                                        _BAUDCON 019F  
                                      _APFCON0 011D                                        _APFCON1 011E  
                 ??_EUSART_DefaultErrorHandler 0079                        __size_of_ADC_Initialize 0007  
                              _MOS_tModbusData 20A4                                _MOS_tModbusPara 0060  
                __size_of_EUSART_RxDataHandler 0056                                        _OSCTUNE 0098  
                     ??_EUSART_SetErrorHandler 0022                              __end_of_auchCRCHi 047F  
                            __end_of_auchCRCLo 037F                                _MOS_vModbudFun3 005D  
                              _MOS_vModbudFun6 017B                           _ADC_InterruptHandler 0079  
          __size_of_EUSART_DefaultErrorHandler 0004                                _MOS_vModbusInit 0723  
                                      __ptext1 06DC                                        __ptext2 0765  
                                      __ptext3 06C6                                        __ptext4 073C  
                                      __ptext5 0699                                        __ptext6 072E  
                                      __ptext7 061B                                        __ptext8 0742  
                                      __ptext9 0748                          _OSCILLATOR_Initialize 072E  
                     ??_PIN_MANAGER_Initialize 0020                     __size_of_SYSTEM_Initialize 0013  
                                      clrloop0 070C                           end_of_initialization 0059  
        __end_of_EUSART_SetOverrunErrorHandler 0754         __size_of_EUSART_SetOverrunErrorHandler 0006  
                _EUSART_SetOverrunErrorHandler 074E                                        init_ram 06FF  
                MOS_vModbudFun3@u16TransmitCRC 003F                                        initloop 0700  
    MOS_vModBusHandler@u16ReceivedFunctionCode 004E                              _EUSART_Initialize 061B  
                           ?_EUSART_Initialize 0070             __size_of_MOS_vModbusTransmitEnalbe 0003  
                                    _RCSTAbits 019D                        MOS_vModbudFun6@u16value 003A  
                                crc16@uchCRCHi 002D                                  crc16@uchCRCLo 002E  
                          ??_EUSART_Initialize 0022                               ??_WDT_Initialize 0020  
               ??_EUSART_SetTxInterruptHandler 0022                 __size_of_Mos_PtGetModbusObject 0005  
                     _TMR0_SetInterruptHandler 073C                  __end_of_Mos_PtGetModbusObject 0765  
                        __size_of_EUSART_Write 000C                __size_of_EUSART_SetErrorHandler 0006  
                      __end_of_MOS_vModbudFun3 017B                        __end_of_MOS_vModbudFun6 027F  
                      __end_of_MOS_vModbusInit 072E                      __end_of_EUSART_Initialize 0656  
         MOS_vModBusHandler@u16ReceivedAddress 0051               __end_of_MOS_vModbusReceiveEnalbe 0777  
                                    _TXSTAbits 019E             __end_of_EUSART_DefaultErrorHandler 0771  
                   _EUSART_DefaultErrorHandler 076D                                   _EUSART_Write 0717  
                            __size_of_TMR0_ISR 0010                                 _ADC_Initialize 0735  
                       ?_OSCILLATOR_Initialize 0070                            start_initialization 003A  
                     __size_of_TMR0_Initialize 0016                __size_of_PIN_MANAGER_Initialize 0017  
 EUSART_SetRxInterruptHandler@interruptHandler 0020   EUSART_SetTxInterruptHandler@interruptHandler 0020  
               ?_EUSART_SetOverrunErrorHandler 0020                     _EUSART_FramingErrorHandler 0058  
                       _EUSART_SetErrorHandler 075A                         __end_of_ADC_Initialize 073C  
                                  __pdataBANK1 00A0                                    crc16@uIndex 0029  
                   __end_of_MOS_vModBusHandler 052F                                    __pbssBIGRAM 20A4  
                  __end_of_EUSART_Transmit_ISR 077A                                    __pbssCOMMON 0079  
                                    ___latbits 0001                                  __pcstackBANK0 0020  
                             ?_MOS_vModbudFun3 0070                               ?_MOS_vModbudFun6 0070  
                   __end_of_EUSART_Receive_ISR 067F                     __size_of_EUSART_Initialize 003B  
                             ?_MOS_vModbusInit 0070               _EUSART_RxDefaultInterruptHandler 005A  
                        _TMR0_InterruptHandler 0052                                      __pnvBANK0 0052  
                                    _auchCRCHi 037F                                      _auchCRCLo 027F  
                 __end_of_EUSART_RxDataHandler 0585                         _PIN_MANAGER_Initialize 0699  
                     _MOS_vModbusReceiveEnalbe 0774                                ?_ADC_Initialize 0070  
                 ??_INTERRUPT_InterruptManager 0079                                 __size_of_crc16 0055  
                            ??_TMR0_Initialize 0022         EUSART_SetErrorHandler@interruptHandler 0020  
                                     _LATBbits 010D                                      clear_ram0 070B  
                                     _PIE1bits 0091                              _eusartRxLastError 007B  
          __size_of_INTERRUPT_InterruptManager 0034                     ??_TMR0_SetInterruptHandler 0022  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 0022  
                             MOS_vModbudFun3@i 0043                               MOS_vModbudFun3@j 0041  
                             MOS_vModbudFun6@i 003C                               MOS_vModbudFun6@j 0036  
                                     _TMR0_ISR 06EF      __end_of_EUSART_DefaultOverrunErrorHandler 076D  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0769  
                                   _ADCON0bits 009D               MOS_vModBusHandler@u16ReceivedCRC 004F  
                      ??_OSCILLATOR_Initialize 0020                            _EUSART_ErrorHandler 0054  
                  ?_EUSART_DefaultErrorHandler 0070                          _Mos_PtGetModbusObject 0760  
                         _EUSART_RxDataHandler 052F                                       __ptext10 074E  
                                     __ptext11 0754                                       __ptext20 0774  
                                     __ptext12 075A                                       __ptext21 0717  
                                     __ptext13 0735                                       __ptext30 052F  
                                     __ptext14 0723                                       __ptext31 0760  
                                     __ptext23 06EF                                       __ptext15 047F  
                                     __ptext24 05DA                                       __ptext16 017B  
                                     __ptext25 0777                                       __ptext17 005D  
                                     __ptext26 0656                                       __ptext18 0585  
                                     __ptext27 0769                                       __ptext19 0771  
                                     __ptext28 077A                                       __ptext29 076D  
                                __size_of_main 001A           __end_of_TMR0_DefaultInterruptHandler 061B  
        __size_of_TMR0_DefaultInterruptHandler 0041                   _TMR0_DefaultInterruptHandler 05DA  
               MOS_vModbudFun3@u16TransDataLen 0039                        ?_EUSART_SetErrorHandler 0020  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0038                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 075A         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 0754                     ?_MOS_vModbusTransmitEnalbe 0070  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                   ??_MOS_vModbusReceiveEnalbe 0020                             _MOS_vModBusHandler 047F  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0760  
                             ??_ADC_Initialize 0020           __end_of_EUSART_SetRxInterruptHandler 074E  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 0748  
                ?_TMR0_DefaultInterruptHandler 0070                            ?_MOS_vModBusHandler 0070  
                           _EUSART_Receive_ISR 0656  EUSART_SetFramingErrorHandler@interruptHandler 0020  
            __end_of_MOS_vModbusTransmitEnalbe 0774                  MOS_vModbudFun6@u16RegisterAdd 0038  
                                __pstringtext1 027F                                  __pstringtext2 037F  
                                   _OPTION_REG 0095                         ?_Mos_PtGetModbusObject 0070  
                          ?_EUSART_Receive_ISR 0070                                _TMR0_Initialize 06C6  
                         ??_MOS_vModBusHandler 0045                             EUSART_Write@txData 0020  
                 __size_of_EUSART_Transmit_ISR 0003             EUSART_RxDataHandler@ucReceivedByte 0076  
               __end_of_PIN_MANAGER_Initialize 06B0                                 crc16@usDataLen 0022  
                         ??_EUSART_Receive_ISR 0079                       __size_of_MOS_vModbudFun3 011E  
                     __size_of_MOS_vModbudFun6 0104        TMR0_DefaultInterruptHandler@tModbusData 0074  
