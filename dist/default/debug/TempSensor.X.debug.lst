

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sat Jun 12 22:29:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1827
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cinit,global,class=CODE,merge=1,delta=2
    10                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	intentry,global,class=CODE,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    51                           	dabs	1,0x220,32
    52                           	dabs	1,0x1A0,80
    53                           	dabs	1,0x120,80
    54                           	dabs	1,0xE4,12
    55                           	dabs	1,0x2094,0,_MOS_tModbusData
    56                           	dabs	1,0x7E,2
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC16F1827 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     	;# 
    93  0001                     	;# 
    94  0002                     	;# 
    95  0003                     	;# 
    96  0004                     	;# 
    97  0005                     	;# 
    98  0006                     	;# 
    99  0007                     	;# 
   100  0008                     	;# 
   101  0009                     	;# 
   102  000A                     	;# 
   103  000B                     	;# 
   104  000C                     	;# 
   105  000D                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0013                     	;# 
   109  0014                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0016                     	;# 
   113  0017                     	;# 
   114  0018                     	;# 
   115  0019                     	;# 
   116  001A                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  0091                     	;# 
   124  0092                     	;# 
   125  0093                     	;# 
   126  0094                     	;# 
   127  0095                     	;# 
   128  0096                     	;# 
   129  0097                     	;# 
   130  0098                     	;# 
   131  0099                     	;# 
   132  009A                     	;# 
   133  009B                     	;# 
   134  009B                     	;# 
   135  009C                     	;# 
   136  009D                     	;# 
   137  009E                     	;# 
   138  010C                     	;# 
   139  010D                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0113                     	;# 
   143  0114                     	;# 
   144  0115                     	;# 
   145  0116                     	;# 
   146  0117                     	;# 
   147  0118                     	;# 
   148  0119                     	;# 
   149  011A                     	;# 
   150  011B                     	;# 
   151  011D                     	;# 
   152  011E                     	;# 
   153  018C                     	;# 
   154  018D                     	;# 
   155  0191                     	;# 
   156  0191                     	;# 
   157  0192                     	;# 
   158  0193                     	;# 
   159  0193                     	;# 
   160  0193                     	;# 
   161  0194                     	;# 
   162  0195                     	;# 
   163  0196                     	;# 
   164  0199                     	;# 
   165  019A                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019B                     	;# 
   169  019B                     	;# 
   170  019C                     	;# 
   171  019C                     	;# 
   172  019D                     	;# 
   173  019E                     	;# 
   174  019F                     	;# 
   175  020C                     	;# 
   176  020D                     	;# 
   177  0211                     	;# 
   178  0211                     	;# 
   179  0212                     	;# 
   180  0212                     	;# 
   181  0213                     	;# 
   182  0213                     	;# 
   183  0214                     	;# 
   184  0214                     	;# 
   185  0215                     	;# 
   186  0215                     	;# 
   187  0215                     	;# 
   188  0216                     	;# 
   189  0216                     	;# 
   190  0217                     	;# 
   191  0217                     	;# 
   192  0219                     	;# 
   193  021A                     	;# 
   194  021B                     	;# 
   195  021C                     	;# 
   196  021D                     	;# 
   197  021E                     	;# 
   198  021F                     	;# 
   199  0291                     	;# 
   200  0291                     	;# 
   201  0292                     	;# 
   202  0293                     	;# 
   203  0294                     	;# 
   204  0295                     	;# 
   205  0295                     	;# 
   206  0296                     	;# 
   207  0298                     	;# 
   208  0298                     	;# 
   209  0299                     	;# 
   210  029A                     	;# 
   211  029B                     	;# 
   212  029C                     	;# 
   213  029C                     	;# 
   214  029D                     	;# 
   215  029E                     	;# 
   216  029E                     	;# 
   217  0311                     	;# 
   218  0311                     	;# 
   219  0312                     	;# 
   220  0313                     	;# 
   221  0318                     	;# 
   222  0318                     	;# 
   223  0319                     	;# 
   224  031A                     	;# 
   225  0394                     	;# 
   226  0395                     	;# 
   227  0396                     	;# 
   228  039A                     	;# 
   229  039C                     	;# 
   230  039D                     	;# 
   231  039E                     	;# 
   232  039F                     	;# 
   233  0415                     	;# 
   234  0416                     	;# 
   235  0417                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  0FE4                     	;# 
   240  0FE5                     	;# 
   241  0FE6                     	;# 
   242  0FE7                     	;# 
   243  0FE8                     	;# 
   244  0FE9                     	;# 
   245  0FEA                     	;# 
   246  0FEB                     	;# 
   247  0FED                     	;# 
   248  0FEE                     	;# 
   249  0FEF                     	;# 
   250  0000                     	;# 
   251  0001                     	;# 
   252  0002                     	;# 
   253  0003                     	;# 
   254  0004                     	;# 
   255  0005                     	;# 
   256  0006                     	;# 
   257  0007                     	;# 
   258  0008                     	;# 
   259  0009                     	;# 
   260  000A                     	;# 
   261  000B                     	;# 
   262  000C                     	;# 
   263  000D                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  008C                     	;# 
   280  008D                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0095                     	;# 
   286  0096                     	;# 
   287  0097                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009A                     	;# 
   291  009B                     	;# 
   292  009B                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  010C                     	;# 
   297  010D                     	;# 
   298  0111                     	;# 
   299  0112                     	;# 
   300  0113                     	;# 
   301  0114                     	;# 
   302  0115                     	;# 
   303  0116                     	;# 
   304  0117                     	;# 
   305  0118                     	;# 
   306  0119                     	;# 
   307  011A                     	;# 
   308  011B                     	;# 
   309  011D                     	;# 
   310  011E                     	;# 
   311  018C                     	;# 
   312  018D                     	;# 
   313  0191                     	;# 
   314  0191                     	;# 
   315  0192                     	;# 
   316  0193                     	;# 
   317  0193                     	;# 
   318  0193                     	;# 
   319  0194                     	;# 
   320  0195                     	;# 
   321  0196                     	;# 
   322  0199                     	;# 
   323  019A                     	;# 
   324  019B                     	;# 
   325  019B                     	;# 
   326  019B                     	;# 
   327  019B                     	;# 
   328  019C                     	;# 
   329  019C                     	;# 
   330  019D                     	;# 
   331  019E                     	;# 
   332  019F                     	;# 
   333  020C                     	;# 
   334  020D                     	;# 
   335  0211                     	;# 
   336  0211                     	;# 
   337  0212                     	;# 
   338  0212                     	;# 
   339  0213                     	;# 
   340  0213                     	;# 
   341  0214                     	;# 
   342  0214                     	;# 
   343  0215                     	;# 
   344  0215                     	;# 
   345  0215                     	;# 
   346  0216                     	;# 
   347  0216                     	;# 
   348  0217                     	;# 
   349  0217                     	;# 
   350  0219                     	;# 
   351  021A                     	;# 
   352  021B                     	;# 
   353  021C                     	;# 
   354  021D                     	;# 
   355  021E                     	;# 
   356  021F                     	;# 
   357  0291                     	;# 
   358  0291                     	;# 
   359  0292                     	;# 
   360  0293                     	;# 
   361  0294                     	;# 
   362  0295                     	;# 
   363  0295                     	;# 
   364  0296                     	;# 
   365  0298                     	;# 
   366  0298                     	;# 
   367  0299                     	;# 
   368  029A                     	;# 
   369  029B                     	;# 
   370  029C                     	;# 
   371  029C                     	;# 
   372  029D                     	;# 
   373  029E                     	;# 
   374  029E                     	;# 
   375  0311                     	;# 
   376  0311                     	;# 
   377  0312                     	;# 
   378  0313                     	;# 
   379  0318                     	;# 
   380  0318                     	;# 
   381  0319                     	;# 
   382  031A                     	;# 
   383  0394                     	;# 
   384  0395                     	;# 
   385  0396                     	;# 
   386  039A                     	;# 
   387  039C                     	;# 
   388  039D                     	;# 
   389  039E                     	;# 
   390  039F                     	;# 
   391  0415                     	;# 
   392  0416                     	;# 
   393  0417                     	;# 
   394  041C                     	;# 
   395  041D                     	;# 
   396  041E                     	;# 
   397  0FE4                     	;# 
   398  0FE5                     	;# 
   399  0FE6                     	;# 
   400  0FE7                     	;# 
   401  0FE8                     	;# 
   402  0FE9                     	;# 
   403  0FEA                     	;# 
   404  0FEB                     	;# 
   405  0FED                     	;# 
   406  0FEE                     	;# 
   407  0FEF                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0008                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000D                     	;# 
   422  0011                     	;# 
   423  0012                     	;# 
   424  0013                     	;# 
   425  0014                     	;# 
   426  0015                     	;# 
   427  0016                     	;# 
   428  0016                     	;# 
   429  0017                     	;# 
   430  0018                     	;# 
   431  0019                     	;# 
   432  001A                     	;# 
   433  001B                     	;# 
   434  001C                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  008C                     	;# 
   438  008D                     	;# 
   439  0091                     	;# 
   440  0092                     	;# 
   441  0093                     	;# 
   442  0094                     	;# 
   443  0095                     	;# 
   444  0096                     	;# 
   445  0097                     	;# 
   446  0098                     	;# 
   447  0099                     	;# 
   448  009A                     	;# 
   449  009B                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  010C                     	;# 
   455  010D                     	;# 
   456  0111                     	;# 
   457  0112                     	;# 
   458  0113                     	;# 
   459  0114                     	;# 
   460  0115                     	;# 
   461  0116                     	;# 
   462  0117                     	;# 
   463  0118                     	;# 
   464  0119                     	;# 
   465  011A                     	;# 
   466  011B                     	;# 
   467  011D                     	;# 
   468  011E                     	;# 
   469  018C                     	;# 
   470  018D                     	;# 
   471  0191                     	;# 
   472  0191                     	;# 
   473  0192                     	;# 
   474  0193                     	;# 
   475  0193                     	;# 
   476  0193                     	;# 
   477  0194                     	;# 
   478  0195                     	;# 
   479  0196                     	;# 
   480  0199                     	;# 
   481  019A                     	;# 
   482  019B                     	;# 
   483  019B                     	;# 
   484  019B                     	;# 
   485  019B                     	;# 
   486  019C                     	;# 
   487  019C                     	;# 
   488  019D                     	;# 
   489  019E                     	;# 
   490  019F                     	;# 
   491  020C                     	;# 
   492  020D                     	;# 
   493  0211                     	;# 
   494  0211                     	;# 
   495  0212                     	;# 
   496  0212                     	;# 
   497  0213                     	;# 
   498  0213                     	;# 
   499  0214                     	;# 
   500  0214                     	;# 
   501  0215                     	;# 
   502  0215                     	;# 
   503  0215                     	;# 
   504  0216                     	;# 
   505  0216                     	;# 
   506  0217                     	;# 
   507  0217                     	;# 
   508  0219                     	;# 
   509  021A                     	;# 
   510  021B                     	;# 
   511  021C                     	;# 
   512  021D                     	;# 
   513  021E                     	;# 
   514  021F                     	;# 
   515  0291                     	;# 
   516  0291                     	;# 
   517  0292                     	;# 
   518  0293                     	;# 
   519  0294                     	;# 
   520  0295                     	;# 
   521  0295                     	;# 
   522  0296                     	;# 
   523  0298                     	;# 
   524  0298                     	;# 
   525  0299                     	;# 
   526  029A                     	;# 
   527  029B                     	;# 
   528  029C                     	;# 
   529  029C                     	;# 
   530  029D                     	;# 
   531  029E                     	;# 
   532  029E                     	;# 
   533  0311                     	;# 
   534  0311                     	;# 
   535  0312                     	;# 
   536  0313                     	;# 
   537  0318                     	;# 
   538  0318                     	;# 
   539  0319                     	;# 
   540  031A                     	;# 
   541  0394                     	;# 
   542  0395                     	;# 
   543  0396                     	;# 
   544  039A                     	;# 
   545  039C                     	;# 
   546  039D                     	;# 
   547  039E                     	;# 
   548  039F                     	;# 
   549  0415                     	;# 
   550  0416                     	;# 
   551  0417                     	;# 
   552  041C                     	;# 
   553  041D                     	;# 
   554  041E                     	;# 
   555  0FE4                     	;# 
   556  0FE5                     	;# 
   557  0FE6                     	;# 
   558  0FE7                     	;# 
   559  0FE8                     	;# 
   560  0FE9                     	;# 
   561  0FEA                     	;# 
   562  0FEB                     	;# 
   563  0FED                     	;# 
   564  0FEE                     	;# 
   565  0FEF                     	;# 
   566  0000                     	;# 
   567  0001                     	;# 
   568  0002                     	;# 
   569  0003                     	;# 
   570  0004                     	;# 
   571  0005                     	;# 
   572  0006                     	;# 
   573  0007                     	;# 
   574  0008                     	;# 
   575  0009                     	;# 
   576  000A                     	;# 
   577  000B                     	;# 
   578  000C                     	;# 
   579  000D                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0013                     	;# 
   583  0014                     	;# 
   584  0015                     	;# 
   585  0016                     	;# 
   586  0016                     	;# 
   587  0017                     	;# 
   588  0018                     	;# 
   589  0019                     	;# 
   590  001A                     	;# 
   591  001B                     	;# 
   592  001C                     	;# 
   593  001E                     	;# 
   594  001F                     	;# 
   595  008C                     	;# 
   596  008D                     	;# 
   597  0091                     	;# 
   598  0092                     	;# 
   599  0093                     	;# 
   600  0094                     	;# 
   601  0095                     	;# 
   602  0096                     	;# 
   603  0097                     	;# 
   604  0098                     	;# 
   605  0099                     	;# 
   606  009A                     	;# 
   607  009B                     	;# 
   608  009B                     	;# 
   609  009C                     	;# 
   610  009D                     	;# 
   611  009E                     	;# 
   612  010C                     	;# 
   613  010D                     	;# 
   614  0111                     	;# 
   615  0112                     	;# 
   616  0113                     	;# 
   617  0114                     	;# 
   618  0115                     	;# 
   619  0116                     	;# 
   620  0117                     	;# 
   621  0118                     	;# 
   622  0119                     	;# 
   623  011A                     	;# 
   624  011B                     	;# 
   625  011D                     	;# 
   626  011E                     	;# 
   627  018C                     	;# 
   628  018D                     	;# 
   629  0191                     	;# 
   630  0191                     	;# 
   631  0192                     	;# 
   632  0193                     	;# 
   633  0193                     	;# 
   634  0193                     	;# 
   635  0194                     	;# 
   636  0195                     	;# 
   637  0196                     	;# 
   638  0199                     	;# 
   639  019A                     	;# 
   640  019B                     	;# 
   641  019B                     	;# 
   642  019B                     	;# 
   643  019B                     	;# 
   644  019C                     	;# 
   645  019C                     	;# 
   646  019D                     	;# 
   647  019E                     	;# 
   648  019F                     	;# 
   649  020C                     	;# 
   650  020D                     	;# 
   651  0211                     	;# 
   652  0211                     	;# 
   653  0212                     	;# 
   654  0212                     	;# 
   655  0213                     	;# 
   656  0213                     	;# 
   657  0214                     	;# 
   658  0214                     	;# 
   659  0215                     	;# 
   660  0215                     	;# 
   661  0215                     	;# 
   662  0216                     	;# 
   663  0216                     	;# 
   664  0217                     	;# 
   665  0217                     	;# 
   666  0219                     	;# 
   667  021A                     	;# 
   668  021B                     	;# 
   669  021C                     	;# 
   670  021D                     	;# 
   671  021E                     	;# 
   672  021F                     	;# 
   673  0291                     	;# 
   674  0291                     	;# 
   675  0292                     	;# 
   676  0293                     	;# 
   677  0294                     	;# 
   678  0295                     	;# 
   679  0295                     	;# 
   680  0296                     	;# 
   681  0298                     	;# 
   682  0298                     	;# 
   683  0299                     	;# 
   684  029A                     	;# 
   685  029B                     	;# 
   686  029C                     	;# 
   687  029C                     	;# 
   688  029D                     	;# 
   689  029E                     	;# 
   690  029E                     	;# 
   691  0311                     	;# 
   692  0311                     	;# 
   693  0312                     	;# 
   694  0313                     	;# 
   695  0318                     	;# 
   696  0318                     	;# 
   697  0319                     	;# 
   698  031A                     	;# 
   699  0394                     	;# 
   700  0395                     	;# 
   701  0396                     	;# 
   702  039A                     	;# 
   703  039C                     	;# 
   704  039D                     	;# 
   705  039E                     	;# 
   706  039F                     	;# 
   707  0415                     	;# 
   708  0416                     	;# 
   709  0417                     	;# 
   710  041C                     	;# 
   711  041D                     	;# 
   712  041E                     	;# 
   713  0FE4                     	;# 
   714  0FE5                     	;# 
   715  0FE6                     	;# 
   716  0FE7                     	;# 
   717  0FE8                     	;# 
   718  0FE9                     	;# 
   719  0FEA                     	;# 
   720  0FEB                     	;# 
   721  0FED                     	;# 
   722  0FEE                     	;# 
   723  0FEF                     	;# 
   724  0000                     	;# 
   725  0001                     	;# 
   726  0002                     	;# 
   727  0003                     	;# 
   728  0004                     	;# 
   729  0005                     	;# 
   730  0006                     	;# 
   731  0007                     	;# 
   732  0008                     	;# 
   733  0009                     	;# 
   734  000A                     	;# 
   735  000B                     	;# 
   736  000C                     	;# 
   737  000D                     	;# 
   738  0011                     	;# 
   739  0012                     	;# 
   740  0013                     	;# 
   741  0014                     	;# 
   742  0015                     	;# 
   743  0016                     	;# 
   744  0016                     	;# 
   745  0017                     	;# 
   746  0018                     	;# 
   747  0019                     	;# 
   748  001A                     	;# 
   749  001B                     	;# 
   750  001C                     	;# 
   751  001E                     	;# 
   752  001F                     	;# 
   753  008C                     	;# 
   754  008D                     	;# 
   755  0091                     	;# 
   756  0092                     	;# 
   757  0093                     	;# 
   758  0094                     	;# 
   759  0095                     	;# 
   760  0096                     	;# 
   761  0097                     	;# 
   762  0098                     	;# 
   763  0099                     	;# 
   764  009A                     	;# 
   765  009B                     	;# 
   766  009B                     	;# 
   767  009C                     	;# 
   768  009D                     	;# 
   769  009E                     	;# 
   770  010C                     	;# 
   771  010D                     	;# 
   772  0111                     	;# 
   773  0112                     	;# 
   774  0113                     	;# 
   775  0114                     	;# 
   776  0115                     	;# 
   777  0116                     	;# 
   778  0117                     	;# 
   779  0118                     	;# 
   780  0119                     	;# 
   781  011A                     	;# 
   782  011B                     	;# 
   783  011D                     	;# 
   784  011E                     	;# 
   785  018C                     	;# 
   786  018D                     	;# 
   787  0191                     	;# 
   788  0191                     	;# 
   789  0192                     	;# 
   790  0193                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0194                     	;# 
   794  0195                     	;# 
   795  0196                     	;# 
   796  0199                     	;# 
   797  019A                     	;# 
   798  019B                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019C                     	;# 
   803  019C                     	;# 
   804  019D                     	;# 
   805  019E                     	;# 
   806  019F                     	;# 
   807  020C                     	;# 
   808  020D                     	;# 
   809  0211                     	;# 
   810  0211                     	;# 
   811  0212                     	;# 
   812  0212                     	;# 
   813  0213                     	;# 
   814  0213                     	;# 
   815  0214                     	;# 
   816  0214                     	;# 
   817  0215                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0216                     	;# 
   821  0216                     	;# 
   822  0217                     	;# 
   823  0217                     	;# 
   824  0219                     	;# 
   825  021A                     	;# 
   826  021B                     	;# 
   827  021C                     	;# 
   828  021D                     	;# 
   829  021E                     	;# 
   830  021F                     	;# 
   831  0291                     	;# 
   832  0291                     	;# 
   833  0292                     	;# 
   834  0293                     	;# 
   835  0294                     	;# 
   836  0295                     	;# 
   837  0295                     	;# 
   838  0296                     	;# 
   839  0298                     	;# 
   840  0298                     	;# 
   841  0299                     	;# 
   842  029A                     	;# 
   843  029B                     	;# 
   844  029C                     	;# 
   845  029C                     	;# 
   846  029D                     	;# 
   847  029E                     	;# 
   848  029E                     	;# 
   849  0311                     	;# 
   850  0311                     	;# 
   851  0312                     	;# 
   852  0313                     	;# 
   853  0318                     	;# 
   854  0318                     	;# 
   855  0319                     	;# 
   856  031A                     	;# 
   857  0394                     	;# 
   858  0395                     	;# 
   859  0396                     	;# 
   860  039A                     	;# 
   861  039C                     	;# 
   862  039D                     	;# 
   863  039E                     	;# 
   864  039F                     	;# 
   865  0415                     	;# 
   866  0416                     	;# 
   867  0417                     	;# 
   868  041C                     	;# 
   869  041D                     	;# 
   870  041E                     	;# 
   871  0FE4                     	;# 
   872  0FE5                     	;# 
   873  0FE6                     	;# 
   874  0FE7                     	;# 
   875  0FE8                     	;# 
   876  0FE9                     	;# 
   877  0FEA                     	;# 
   878  0FEB                     	;# 
   879  0FED                     	;# 
   880  0FEE                     	;# 
   881  0FEF                     	;# 
   882  0000                     	;# 
   883  0001                     	;# 
   884  0002                     	;# 
   885  0003                     	;# 
   886  0004                     	;# 
   887  0005                     	;# 
   888  0006                     	;# 
   889  0007                     	;# 
   890  0008                     	;# 
   891  0009                     	;# 
   892  000A                     	;# 
   893  000B                     	;# 
   894  000C                     	;# 
   895  000D                     	;# 
   896  0011                     	;# 
   897  0012                     	;# 
   898  0013                     	;# 
   899  0014                     	;# 
   900  0015                     	;# 
   901  0016                     	;# 
   902  0016                     	;# 
   903  0017                     	;# 
   904  0018                     	;# 
   905  0019                     	;# 
   906  001A                     	;# 
   907  001B                     	;# 
   908  001C                     	;# 
   909  001E                     	;# 
   910  001F                     	;# 
   911  008C                     	;# 
   912  008D                     	;# 
   913  0091                     	;# 
   914  0092                     	;# 
   915  0093                     	;# 
   916  0094                     	;# 
   917  0095                     	;# 
   918  0096                     	;# 
   919  0097                     	;# 
   920  0098                     	;# 
   921  0099                     	;# 
   922  009A                     	;# 
   923  009B                     	;# 
   924  009B                     	;# 
   925  009C                     	;# 
   926  009D                     	;# 
   927  009E                     	;# 
   928  010C                     	;# 
   929  010D                     	;# 
   930  0111                     	;# 
   931  0112                     	;# 
   932  0113                     	;# 
   933  0114                     	;# 
   934  0115                     	;# 
   935  0116                     	;# 
   936  0117                     	;# 
   937  0118                     	;# 
   938  0119                     	;# 
   939  011A                     	;# 
   940  011B                     	;# 
   941  011D                     	;# 
   942  011E                     	;# 
   943  018C                     	;# 
   944  018D                     	;# 
   945  0191                     	;# 
   946  0191                     	;# 
   947  0192                     	;# 
   948  0193                     	;# 
   949  0193                     	;# 
   950  0193                     	;# 
   951  0194                     	;# 
   952  0195                     	;# 
   953  0196                     	;# 
   954  0199                     	;# 
   955  019A                     	;# 
   956  019B                     	;# 
   957  019B                     	;# 
   958  019B                     	;# 
   959  019B                     	;# 
   960  019C                     	;# 
   961  019C                     	;# 
   962  019D                     	;# 
   963  019E                     	;# 
   964  019F                     	;# 
   965  020C                     	;# 
   966  020D                     	;# 
   967  0211                     	;# 
   968  0211                     	;# 
   969  0212                     	;# 
   970  0212                     	;# 
   971  0213                     	;# 
   972  0213                     	;# 
   973  0214                     	;# 
   974  0214                     	;# 
   975  0215                     	;# 
   976  0215                     	;# 
   977  0215                     	;# 
   978  0216                     	;# 
   979  0216                     	;# 
   980  0217                     	;# 
   981  0217                     	;# 
   982  0219                     	;# 
   983  021A                     	;# 
   984  021B                     	;# 
   985  021C                     	;# 
   986  021D                     	;# 
   987  021E                     	;# 
   988  021F                     	;# 
   989  0291                     	;# 
   990  0291                     	;# 
   991  0292                     	;# 
   992  0293                     	;# 
   993  0294                     	;# 
   994  0295                     	;# 
   995  0295                     	;# 
   996  0296                     	;# 
   997  0298                     	;# 
   998  0298                     	;# 
   999  0299                     	;# 
  1000  029A                     	;# 
  1001  029B                     	;# 
  1002  029C                     	;# 
  1003  029C                     	;# 
  1004  029D                     	;# 
  1005  029E                     	;# 
  1006  029E                     	;# 
  1007  0311                     	;# 
  1008  0311                     	;# 
  1009  0312                     	;# 
  1010  0313                     	;# 
  1011  0318                     	;# 
  1012  0318                     	;# 
  1013  0319                     	;# 
  1014  031A                     	;# 
  1015  0394                     	;# 
  1016  0395                     	;# 
  1017  0396                     	;# 
  1018  039A                     	;# 
  1019  039C                     	;# 
  1020  039D                     	;# 
  1021  039E                     	;# 
  1022  039F                     	;# 
  1023  0415                     	;# 
  1024  0416                     	;# 
  1025  0417                     	;# 
  1026  041C                     	;# 
  1027  041D                     	;# 
  1028  041E                     	;# 
  1029  0FE4                     	;# 
  1030  0FE5                     	;# 
  1031  0FE6                     	;# 
  1032  0FE7                     	;# 
  1033  0FE8                     	;# 
  1034  0FE9                     	;# 
  1035  0FEA                     	;# 
  1036  0FEB                     	;# 
  1037  0FED                     	;# 
  1038  0FEE                     	;# 
  1039  0FEF                     	;# 
  1040  0000                     	;# 
  1041  0001                     	;# 
  1042  0002                     	;# 
  1043  0003                     	;# 
  1044  0004                     	;# 
  1045  0005                     	;# 
  1046  0006                     	;# 
  1047  0007                     	;# 
  1048  0008                     	;# 
  1049  0009                     	;# 
  1050  000A                     	;# 
  1051  000B                     	;# 
  1052  000C                     	;# 
  1053  000D                     	;# 
  1054  0011                     	;# 
  1055  0012                     	;# 
  1056  0013                     	;# 
  1057  0014                     	;# 
  1058  0015                     	;# 
  1059  0016                     	;# 
  1060  0016                     	;# 
  1061  0017                     	;# 
  1062  0018                     	;# 
  1063  0019                     	;# 
  1064  001A                     	;# 
  1065  001B                     	;# 
  1066  001C                     	;# 
  1067  001E                     	;# 
  1068  001F                     	;# 
  1069  008C                     	;# 
  1070  008D                     	;# 
  1071  0091                     	;# 
  1072  0092                     	;# 
  1073  0093                     	;# 
  1074  0094                     	;# 
  1075  0095                     	;# 
  1076  0096                     	;# 
  1077  0097                     	;# 
  1078  0098                     	;# 
  1079  0099                     	;# 
  1080  009A                     	;# 
  1081  009B                     	;# 
  1082  009B                     	;# 
  1083  009C                     	;# 
  1084  009D                     	;# 
  1085  009E                     	;# 
  1086  010C                     	;# 
  1087  010D                     	;# 
  1088  0111                     	;# 
  1089  0112                     	;# 
  1090  0113                     	;# 
  1091  0114                     	;# 
  1092  0115                     	;# 
  1093  0116                     	;# 
  1094  0117                     	;# 
  1095  0118                     	;# 
  1096  0119                     	;# 
  1097  011A                     	;# 
  1098  011B                     	;# 
  1099  011D                     	;# 
  1100  011E                     	;# 
  1101  018C                     	;# 
  1102  018D                     	;# 
  1103  0191                     	;# 
  1104  0191                     	;# 
  1105  0192                     	;# 
  1106  0193                     	;# 
  1107  0193                     	;# 
  1108  0193                     	;# 
  1109  0194                     	;# 
  1110  0195                     	;# 
  1111  0196                     	;# 
  1112  0199                     	;# 
  1113  019A                     	;# 
  1114  019B                     	;# 
  1115  019B                     	;# 
  1116  019B                     	;# 
  1117  019B                     	;# 
  1118  019C                     	;# 
  1119  019C                     	;# 
  1120  019D                     	;# 
  1121  019E                     	;# 
  1122  019F                     	;# 
  1123  020C                     	;# 
  1124  020D                     	;# 
  1125  0211                     	;# 
  1126  0211                     	;# 
  1127  0212                     	;# 
  1128  0212                     	;# 
  1129  0213                     	;# 
  1130  0213                     	;# 
  1131  0214                     	;# 
  1132  0214                     	;# 
  1133  0215                     	;# 
  1134  0215                     	;# 
  1135  0215                     	;# 
  1136  0216                     	;# 
  1137  0216                     	;# 
  1138  0217                     	;# 
  1139  0217                     	;# 
  1140  0219                     	;# 
  1141  021A                     	;# 
  1142  021B                     	;# 
  1143  021C                     	;# 
  1144  021D                     	;# 
  1145  021E                     	;# 
  1146  021F                     	;# 
  1147  0291                     	;# 
  1148  0291                     	;# 
  1149  0292                     	;# 
  1150  0293                     	;# 
  1151  0294                     	;# 
  1152  0295                     	;# 
  1153  0295                     	;# 
  1154  0296                     	;# 
  1155  0298                     	;# 
  1156  0298                     	;# 
  1157  0299                     	;# 
  1158  029A                     	;# 
  1159  029B                     	;# 
  1160  029C                     	;# 
  1161  029C                     	;# 
  1162  029D                     	;# 
  1163  029E                     	;# 
  1164  029E                     	;# 
  1165  0311                     	;# 
  1166  0311                     	;# 
  1167  0312                     	;# 
  1168  0313                     	;# 
  1169  0318                     	;# 
  1170  0318                     	;# 
  1171  0319                     	;# 
  1172  031A                     	;# 
  1173  0394                     	;# 
  1174  0395                     	;# 
  1175  0396                     	;# 
  1176  039A                     	;# 
  1177  039C                     	;# 
  1178  039D                     	;# 
  1179  039E                     	;# 
  1180  039F                     	;# 
  1181  0415                     	;# 
  1182  0416                     	;# 
  1183  0417                     	;# 
  1184  041C                     	;# 
  1185  041D                     	;# 
  1186  041E                     	;# 
  1187  0FE4                     	;# 
  1188  0FE5                     	;# 
  1189  0FE6                     	;# 
  1190  0FE7                     	;# 
  1191  0FE8                     	;# 
  1192  0FE9                     	;# 
  1193  0FEA                     	;# 
  1194  0FEB                     	;# 
  1195  0FED                     	;# 
  1196  0FEE                     	;# 
  1197  0FEF                     	;# 
  1198  0000                     	;# 
  1199  0001                     	;# 
  1200  0002                     	;# 
  1201  0003                     	;# 
  1202  0004                     	;# 
  1203  0005                     	;# 
  1204  0006                     	;# 
  1205  0007                     	;# 
  1206  0008                     	;# 
  1207  0009                     	;# 
  1208  000A                     	;# 
  1209  000B                     	;# 
  1210  000C                     	;# 
  1211  000D                     	;# 
  1212  0011                     	;# 
  1213  0012                     	;# 
  1214  0013                     	;# 
  1215  0014                     	;# 
  1216  0015                     	;# 
  1217  0016                     	;# 
  1218  0016                     	;# 
  1219  0017                     	;# 
  1220  0018                     	;# 
  1221  0019                     	;# 
  1222  001A                     	;# 
  1223  001B                     	;# 
  1224  001C                     	;# 
  1225  001E                     	;# 
  1226  001F                     	;# 
  1227  008C                     	;# 
  1228  008D                     	;# 
  1229  0091                     	;# 
  1230  0092                     	;# 
  1231  0093                     	;# 
  1232  0094                     	;# 
  1233  0095                     	;# 
  1234  0096                     	;# 
  1235  0097                     	;# 
  1236  0098                     	;# 
  1237  0099                     	;# 
  1238  009A                     	;# 
  1239  009B                     	;# 
  1240  009B                     	;# 
  1241  009C                     	;# 
  1242  009D                     	;# 
  1243  009E                     	;# 
  1244  010C                     	;# 
  1245  010D                     	;# 
  1246  0111                     	;# 
  1247  0112                     	;# 
  1248  0113                     	;# 
  1249  0114                     	;# 
  1250  0115                     	;# 
  1251  0116                     	;# 
  1252  0117                     	;# 
  1253  0118                     	;# 
  1254  0119                     	;# 
  1255  011A                     	;# 
  1256  011B                     	;# 
  1257  011D                     	;# 
  1258  011E                     	;# 
  1259  018C                     	;# 
  1260  018D                     	;# 
  1261  0191                     	;# 
  1262  0191                     	;# 
  1263  0192                     	;# 
  1264  0193                     	;# 
  1265  0193                     	;# 
  1266  0193                     	;# 
  1267  0194                     	;# 
  1268  0195                     	;# 
  1269  0196                     	;# 
  1270  0199                     	;# 
  1271  019A                     	;# 
  1272  019B                     	;# 
  1273  019B                     	;# 
  1274  019B                     	;# 
  1275  019B                     	;# 
  1276  019C                     	;# 
  1277  019C                     	;# 
  1278  019D                     	;# 
  1279  019E                     	;# 
  1280  019F                     	;# 
  1281  020C                     	;# 
  1282  020D                     	;# 
  1283  0211                     	;# 
  1284  0211                     	;# 
  1285  0212                     	;# 
  1286  0212                     	;# 
  1287  0213                     	;# 
  1288  0213                     	;# 
  1289  0214                     	;# 
  1290  0214                     	;# 
  1291  0215                     	;# 
  1292  0215                     	;# 
  1293  0215                     	;# 
  1294  0216                     	;# 
  1295  0216                     	;# 
  1296  0217                     	;# 
  1297  0217                     	;# 
  1298  0219                     	;# 
  1299  021A                     	;# 
  1300  021B                     	;# 
  1301  021C                     	;# 
  1302  021D                     	;# 
  1303  021E                     	;# 
  1304  021F                     	;# 
  1305  0291                     	;# 
  1306  0291                     	;# 
  1307  0292                     	;# 
  1308  0293                     	;# 
  1309  0294                     	;# 
  1310  0295                     	;# 
  1311  0295                     	;# 
  1312  0296                     	;# 
  1313  0298                     	;# 
  1314  0298                     	;# 
  1315  0299                     	;# 
  1316  029A                     	;# 
  1317  029B                     	;# 
  1318  029C                     	;# 
  1319  029C                     	;# 
  1320  029D                     	;# 
  1321  029E                     	;# 
  1322  029E                     	;# 
  1323  0311                     	;# 
  1324  0311                     	;# 
  1325  0312                     	;# 
  1326  0313                     	;# 
  1327  0318                     	;# 
  1328  0318                     	;# 
  1329  0319                     	;# 
  1330  031A                     	;# 
  1331  0394                     	;# 
  1332  0395                     	;# 
  1333  0396                     	;# 
  1334  039A                     	;# 
  1335  039C                     	;# 
  1336  039D                     	;# 
  1337  039E                     	;# 
  1338  039F                     	;# 
  1339  0415                     	;# 
  1340  0416                     	;# 
  1341  0417                     	;# 
  1342  041C                     	;# 
  1343  041D                     	;# 
  1344  041E                     	;# 
  1345  0FE4                     	;# 
  1346  0FE5                     	;# 
  1347  0FE6                     	;# 
  1348  0FE7                     	;# 
  1349  0FE8                     	;# 
  1350  0FE9                     	;# 
  1351  0FEA                     	;# 
  1352  0FEB                     	;# 
  1353  0FED                     	;# 
  1354  0FEE                     	;# 
  1355  0FEF                     	;# 
  1356  0000                     	;# 
  1357  0001                     	;# 
  1358  0002                     	;# 
  1359  0003                     	;# 
  1360  0004                     	;# 
  1361  0005                     	;# 
  1362  0006                     	;# 
  1363  0007                     	;# 
  1364  0008                     	;# 
  1365  0009                     	;# 
  1366  000A                     	;# 
  1367  000B                     	;# 
  1368  000C                     	;# 
  1369  000D                     	;# 
  1370  0011                     	;# 
  1371  0012                     	;# 
  1372  0013                     	;# 
  1373  0014                     	;# 
  1374  0015                     	;# 
  1375  0016                     	;# 
  1376  0016                     	;# 
  1377  0017                     	;# 
  1378  0018                     	;# 
  1379  0019                     	;# 
  1380  001A                     	;# 
  1381  001B                     	;# 
  1382  001C                     	;# 
  1383  001E                     	;# 
  1384  001F                     	;# 
  1385  008C                     	;# 
  1386  008D                     	;# 
  1387  0091                     	;# 
  1388  0092                     	;# 
  1389  0093                     	;# 
  1390  0094                     	;# 
  1391  0095                     	;# 
  1392  0096                     	;# 
  1393  0097                     	;# 
  1394  0098                     	;# 
  1395  0099                     	;# 
  1396  009A                     	;# 
  1397  009B                     	;# 
  1398  009B                     	;# 
  1399  009C                     	;# 
  1400  009D                     	;# 
  1401  009E                     	;# 
  1402  010C                     	;# 
  1403  010D                     	;# 
  1404  0111                     	;# 
  1405  0112                     	;# 
  1406  0113                     	;# 
  1407  0114                     	;# 
  1408  0115                     	;# 
  1409  0116                     	;# 
  1410  0117                     	;# 
  1411  0118                     	;# 
  1412  0119                     	;# 
  1413  011A                     	;# 
  1414  011B                     	;# 
  1415  011D                     	;# 
  1416  011E                     	;# 
  1417  018C                     	;# 
  1418  018D                     	;# 
  1419  0191                     	;# 
  1420  0191                     	;# 
  1421  0192                     	;# 
  1422  0193                     	;# 
  1423  0193                     	;# 
  1424  0193                     	;# 
  1425  0194                     	;# 
  1426  0195                     	;# 
  1427  0196                     	;# 
  1428  0199                     	;# 
  1429  019A                     	;# 
  1430  019B                     	;# 
  1431  019B                     	;# 
  1432  019B                     	;# 
  1433  019B                     	;# 
  1434  019C                     	;# 
  1435  019C                     	;# 
  1436  019D                     	;# 
  1437  019E                     	;# 
  1438  019F                     	;# 
  1439  020C                     	;# 
  1440  020D                     	;# 
  1441  0211                     	;# 
  1442  0211                     	;# 
  1443  0212                     	;# 
  1444  0212                     	;# 
  1445  0213                     	;# 
  1446  0213                     	;# 
  1447  0214                     	;# 
  1448  0214                     	;# 
  1449  0215                     	;# 
  1450  0215                     	;# 
  1451  0215                     	;# 
  1452  0216                     	;# 
  1453  0216                     	;# 
  1454  0217                     	;# 
  1455  0217                     	;# 
  1456  0219                     	;# 
  1457  021A                     	;# 
  1458  021B                     	;# 
  1459  021C                     	;# 
  1460  021D                     	;# 
  1461  021E                     	;# 
  1462  021F                     	;# 
  1463  0291                     	;# 
  1464  0291                     	;# 
  1465  0292                     	;# 
  1466  0293                     	;# 
  1467  0294                     	;# 
  1468  0295                     	;# 
  1469  0295                     	;# 
  1470  0296                     	;# 
  1471  0298                     	;# 
  1472  0298                     	;# 
  1473  0299                     	;# 
  1474  029A                     	;# 
  1475  029B                     	;# 
  1476  029C                     	;# 
  1477  029C                     	;# 
  1478  029D                     	;# 
  1479  029E                     	;# 
  1480  029E                     	;# 
  1481  0311                     	;# 
  1482  0311                     	;# 
  1483  0312                     	;# 
  1484  0313                     	;# 
  1485  0318                     	;# 
  1486  0318                     	;# 
  1487  0319                     	;# 
  1488  031A                     	;# 
  1489  0394                     	;# 
  1490  0395                     	;# 
  1491  0396                     	;# 
  1492  039A                     	;# 
  1493  039C                     	;# 
  1494  039D                     	;# 
  1495  039E                     	;# 
  1496  039F                     	;# 
  1497  0415                     	;# 
  1498  0416                     	;# 
  1499  0417                     	;# 
  1500  041C                     	;# 
  1501  041D                     	;# 
  1502  041E                     	;# 
  1503  0FE4                     	;# 
  1504  0FE5                     	;# 
  1505  0FE6                     	;# 
  1506  0FE7                     	;# 
  1507  0FE8                     	;# 
  1508  0FE9                     	;# 
  1509  0FEA                     	;# 
  1510  0FEB                     	;# 
  1511  0FED                     	;# 
  1512  0FEE                     	;# 
  1513  0FEF                     	;_MOS_tModbusData
  1514                           
  1515                           	psect	idataBANK1
  1516  06AD                     __pidataBANK1:
  1517                           
  1518                           ;initializer for _Reg
  1519  06AD  3400               	retlw	0
  1520  06AE  3400               	retlw	0
  1521  06AF  3401               	retlw	1
  1522  06B0  3400               	retlw	0
  1523  06B1  3402               	retlw	2
  1524  06B2  3400               	retlw	0
  1525  06B3  3403               	retlw	3
  1526  06B4  3400               	retlw	0
  1527  06B5  3404               	retlw	4
  1528  06B6  3400               	retlw	0
  1529  06B7  3405               	retlw	5
  1530  06B8  3400               	retlw	0
  1531  06B9  3406               	retlw	6
  1532  06BA  3400               	retlw	0
  1533  06BB  3407               	retlw	7
  1534  06BC  3400               	retlw	0
  1535  06BD  3408               	retlw	8
  1536  06BE  3400               	retlw	0
  1537  06BF  3409               	retlw	9
  1538  06C0  3400               	retlw	0
  1539  06C1  340A               	retlw	10
  1540  06C2  3400               	retlw	0
  1541                           
  1542                           	psect	stringtext1
  1543  027C                     __pstringtext1:
  1544  027C                     _auchCRCLo:
  1545  027C  3400               	retlw	0
  1546  027D  34C0               	retlw	192
  1547  027E  34C1               	retlw	193
  1548  027F  3401               	retlw	1
  1549  0280  34C3               	retlw	195
  1550  0281  3403               	retlw	3
  1551  0282  3402               	retlw	2
  1552  0283  34C2               	retlw	194
  1553  0284  34C6               	retlw	198
  1554  0285  3406               	retlw	6
  1555  0286  3407               	retlw	7
  1556  0287  34C7               	retlw	199
  1557  0288  3405               	retlw	5
  1558  0289  34C5               	retlw	197
  1559  028A  34C4               	retlw	196
  1560  028B  3404               	retlw	4
  1561  028C  34CC               	retlw	204
  1562  028D  340C               	retlw	12
  1563  028E  340D               	retlw	13
  1564  028F  34CD               	retlw	205
  1565  0290  340F               	retlw	15
  1566  0291  34CF               	retlw	207
  1567  0292  34CE               	retlw	206
  1568  0293  340E               	retlw	14
  1569  0294  340A               	retlw	10
  1570  0295  34CA               	retlw	202
  1571  0296  34CB               	retlw	203
  1572  0297  340B               	retlw	11
  1573  0298  34C9               	retlw	201
  1574  0299  3409               	retlw	9
  1575  029A  3408               	retlw	8
  1576  029B  34C8               	retlw	200
  1577  029C  34D8               	retlw	216
  1578  029D  3418               	retlw	24
  1579  029E  3419               	retlw	25
  1580  029F  34D9               	retlw	217
  1581  02A0  341B               	retlw	27
  1582  02A1  34DB               	retlw	219
  1583  02A2  34DA               	retlw	218
  1584  02A3  341A               	retlw	26
  1585  02A4  341E               	retlw	30
  1586  02A5  34DE               	retlw	222
  1587  02A6  34DF               	retlw	223
  1588  02A7  341F               	retlw	31
  1589  02A8  34DD               	retlw	221
  1590  02A9  341D               	retlw	29
  1591  02AA  341C               	retlw	28
  1592  02AB  34DC               	retlw	220
  1593  02AC  3414               	retlw	20
  1594  02AD  34D4               	retlw	212
  1595  02AE  34D5               	retlw	213
  1596  02AF  3415               	retlw	21
  1597  02B0  34D7               	retlw	215
  1598  02B1  3417               	retlw	23
  1599  02B2  3416               	retlw	22
  1600  02B3  34D6               	retlw	214
  1601  02B4  34D2               	retlw	210
  1602  02B5  3412               	retlw	18
  1603  02B6  3413               	retlw	19
  1604  02B7  34D3               	retlw	211
  1605  02B8  3411               	retlw	17
  1606  02B9  34D1               	retlw	209
  1607  02BA  34D0               	retlw	208
  1608  02BB  3410               	retlw	16
  1609  02BC  34F0               	retlw	240
  1610  02BD  3430               	retlw	48
  1611  02BE  3431               	retlw	49
  1612  02BF  34F1               	retlw	241
  1613  02C0  3433               	retlw	51
  1614  02C1  34F3               	retlw	243
  1615  02C2  34F2               	retlw	242
  1616  02C3  3432               	retlw	50
  1617  02C4  3436               	retlw	54
  1618  02C5  34F6               	retlw	246
  1619  02C6  34F7               	retlw	247
  1620  02C7  3437               	retlw	55
  1621  02C8  34F5               	retlw	245
  1622  02C9  3435               	retlw	53
  1623  02CA  3434               	retlw	52
  1624  02CB  34F4               	retlw	244
  1625  02CC  343C               	retlw	60
  1626  02CD  34FC               	retlw	252
  1627  02CE  34FD               	retlw	253
  1628  02CF  343D               	retlw	61
  1629  02D0  34FF               	retlw	255
  1630  02D1  343F               	retlw	63
  1631  02D2  343E               	retlw	62
  1632  02D3  34FE               	retlw	254
  1633  02D4  34FA               	retlw	250
  1634  02D5  343A               	retlw	58
  1635  02D6  343B               	retlw	59
  1636  02D7  34FB               	retlw	251
  1637  02D8  3439               	retlw	57
  1638  02D9  34F9               	retlw	249
  1639  02DA  34F8               	retlw	248
  1640  02DB  3438               	retlw	56
  1641  02DC  3428               	retlw	40
  1642  02DD  34E8               	retlw	232
  1643  02DE  34E9               	retlw	233
  1644  02DF  3429               	retlw	41
  1645  02E0  34EB               	retlw	235
  1646  02E1  342B               	retlw	43
  1647  02E2  342A               	retlw	42
  1648  02E3  34EA               	retlw	234
  1649  02E4  34EE               	retlw	238
  1650  02E5  342E               	retlw	46
  1651  02E6  342F               	retlw	47
  1652  02E7  34EF               	retlw	239
  1653  02E8  342D               	retlw	45
  1654  02E9  34ED               	retlw	237
  1655  02EA  34EC               	retlw	236
  1656  02EB  342C               	retlw	44
  1657  02EC  34E4               	retlw	228
  1658  02ED  3424               	retlw	36
  1659  02EE  3425               	retlw	37
  1660  02EF  34E5               	retlw	229
  1661  02F0  3427               	retlw	39
  1662  02F1  34E7               	retlw	231
  1663  02F2  34E6               	retlw	230
  1664  02F3  3426               	retlw	38
  1665  02F4  3422               	retlw	34
  1666  02F5  34E2               	retlw	226
  1667  02F6  34E3               	retlw	227
  1668  02F7  3423               	retlw	35
  1669  02F8  34E1               	retlw	225
  1670  02F9  3421               	retlw	33
  1671  02FA  3420               	retlw	32
  1672  02FB  34E0               	retlw	224
  1673  02FC  34A0               	retlw	160
  1674  02FD  3460               	retlw	96
  1675  02FE  3461               	retlw	97
  1676  02FF  34A1               	retlw	161
  1677  0300  3463               	retlw	99
  1678  0301  34A3               	retlw	163
  1679  0302  34A2               	retlw	162
  1680  0303  3462               	retlw	98
  1681  0304  3466               	retlw	102
  1682  0305  34A6               	retlw	166
  1683  0306  34A7               	retlw	167
  1684  0307  3467               	retlw	103
  1685  0308  34A5               	retlw	165
  1686  0309  3465               	retlw	101
  1687  030A  3464               	retlw	100
  1688  030B  34A4               	retlw	164
  1689  030C  346C               	retlw	108
  1690  030D  34AC               	retlw	172
  1691  030E  34AD               	retlw	173
  1692  030F  346D               	retlw	109
  1693  0310  34AF               	retlw	175
  1694  0311  346F               	retlw	111
  1695  0312  346E               	retlw	110
  1696  0313  34AE               	retlw	174
  1697  0314  34AA               	retlw	170
  1698  0315  346A               	retlw	106
  1699  0316  346B               	retlw	107
  1700  0317  34AB               	retlw	171
  1701  0318  3469               	retlw	105
  1702  0319  34A9               	retlw	169
  1703  031A  34A8               	retlw	168
  1704  031B  3468               	retlw	104
  1705  031C  3478               	retlw	120
  1706  031D  34B8               	retlw	184
  1707  031E  34B9               	retlw	185
  1708  031F  3479               	retlw	121
  1709  0320  34BB               	retlw	187
  1710  0321  347B               	retlw	123
  1711  0322  347A               	retlw	122
  1712  0323  34BA               	retlw	186
  1713  0324  34BE               	retlw	190
  1714  0325  347E               	retlw	126
  1715  0326  347F               	retlw	127
  1716  0327  34BF               	retlw	191
  1717  0328  347D               	retlw	125
  1718  0329  34BD               	retlw	189
  1719  032A  34BC               	retlw	188
  1720  032B  347C               	retlw	124
  1721  032C  34B4               	retlw	180
  1722  032D  3474               	retlw	116
  1723  032E  3475               	retlw	117
  1724  032F  34B5               	retlw	181
  1725  0330  3477               	retlw	119
  1726  0331  34B7               	retlw	183
  1727  0332  34B6               	retlw	182
  1728  0333  3476               	retlw	118
  1729  0334  3472               	retlw	114
  1730  0335  34B2               	retlw	178
  1731  0336  34B3               	retlw	179
  1732  0337  3473               	retlw	115
  1733  0338  34B1               	retlw	177
  1734  0339  3471               	retlw	113
  1735  033A  3470               	retlw	112
  1736  033B  34B0               	retlw	176
  1737  033C  3450               	retlw	80
  1738  033D  3490               	retlw	144
  1739  033E  3491               	retlw	145
  1740  033F  3451               	retlw	81
  1741  0340  3493               	retlw	147
  1742  0341  3453               	retlw	83
  1743  0342  3452               	retlw	82
  1744  0343  3492               	retlw	146
  1745  0344  3496               	retlw	150
  1746  0345  3456               	retlw	86
  1747  0346  3457               	retlw	87
  1748  0347  3497               	retlw	151
  1749  0348  3455               	retlw	85
  1750  0349  3495               	retlw	149
  1751  034A  3494               	retlw	148
  1752  034B  3454               	retlw	84
  1753  034C  349C               	retlw	156
  1754  034D  345C               	retlw	92
  1755  034E  345D               	retlw	93
  1756  034F  349D               	retlw	157
  1757  0350  345F               	retlw	95
  1758  0351  349F               	retlw	159
  1759  0352  349E               	retlw	158
  1760  0353  345E               	retlw	94
  1761  0354  345A               	retlw	90
  1762  0355  349A               	retlw	154
  1763  0356  349B               	retlw	155
  1764  0357  345B               	retlw	91
  1765  0358  3499               	retlw	153
  1766  0359  3459               	retlw	89
  1767  035A  3458               	retlw	88
  1768  035B  3498               	retlw	152
  1769  035C  3488               	retlw	136
  1770  035D  3448               	retlw	72
  1771  035E  3449               	retlw	73
  1772  035F  3489               	retlw	137
  1773  0360  344B               	retlw	75
  1774  0361  348B               	retlw	139
  1775  0362  348A               	retlw	138
  1776  0363  344A               	retlw	74
  1777  0364  344E               	retlw	78
  1778  0365  348E               	retlw	142
  1779  0366  348F               	retlw	143
  1780  0367  344F               	retlw	79
  1781  0368  348D               	retlw	141
  1782  0369  344D               	retlw	77
  1783  036A  344C               	retlw	76
  1784  036B  348C               	retlw	140
  1785  036C  3444               	retlw	68
  1786  036D  3484               	retlw	132
  1787  036E  3485               	retlw	133
  1788  036F  3445               	retlw	69
  1789  0370  3487               	retlw	135
  1790  0371  3447               	retlw	71
  1791  0372  3446               	retlw	70
  1792  0373  3486               	retlw	134
  1793  0374  3482               	retlw	130
  1794  0375  3442               	retlw	66
  1795  0376  3443               	retlw	67
  1796  0377  3483               	retlw	131
  1797  0378  3441               	retlw	65
  1798  0379  3481               	retlw	129
  1799  037A  3480               	retlw	128
  1800  037B  3440               	retlw	64
  1801  037C                     __end_of_auchCRCLo:
  1802                           
  1803                           	psect	stringtext2
  1804  037C                     __pstringtext2:
  1805  037C                     _auchCRCHi:
  1806  037C  3400               	retlw	0
  1807  037D  34C1               	retlw	193
  1808  037E  3481               	retlw	129
  1809  037F  3440               	retlw	64
  1810  0380  3401               	retlw	1
  1811  0381  34C0               	retlw	192
  1812  0382  3480               	retlw	128
  1813  0383  3441               	retlw	65
  1814  0384  3401               	retlw	1
  1815  0385  34C0               	retlw	192
  1816  0386  3480               	retlw	128
  1817  0387  3441               	retlw	65
  1818  0388  3400               	retlw	0
  1819  0389  34C1               	retlw	193
  1820  038A  3481               	retlw	129
  1821  038B  3440               	retlw	64
  1822  038C  3401               	retlw	1
  1823  038D  34C0               	retlw	192
  1824  038E  3480               	retlw	128
  1825  038F  3441               	retlw	65
  1826  0390  3400               	retlw	0
  1827  0391  34C1               	retlw	193
  1828  0392  3481               	retlw	129
  1829  0393  3440               	retlw	64
  1830  0394  3400               	retlw	0
  1831  0395  34C1               	retlw	193
  1832  0396  3481               	retlw	129
  1833  0397  3440               	retlw	64
  1834  0398  3401               	retlw	1
  1835  0399  34C0               	retlw	192
  1836  039A  3480               	retlw	128
  1837  039B  3441               	retlw	65
  1838  039C  3401               	retlw	1
  1839  039D  34C0               	retlw	192
  1840  039E  3480               	retlw	128
  1841  039F  3441               	retlw	65
  1842  03A0  3400               	retlw	0
  1843  03A1  34C1               	retlw	193
  1844  03A2  3481               	retlw	129
  1845  03A3  3440               	retlw	64
  1846  03A4  3400               	retlw	0
  1847  03A5  34C1               	retlw	193
  1848  03A6  3481               	retlw	129
  1849  03A7  3440               	retlw	64
  1850  03A8  3401               	retlw	1
  1851  03A9  34C0               	retlw	192
  1852  03AA  3480               	retlw	128
  1853  03AB  3441               	retlw	65
  1854  03AC  3400               	retlw	0
  1855  03AD  34C1               	retlw	193
  1856  03AE  3481               	retlw	129
  1857  03AF  3440               	retlw	64
  1858  03B0  3401               	retlw	1
  1859  03B1  34C0               	retlw	192
  1860  03B2  3480               	retlw	128
  1861  03B3  3441               	retlw	65
  1862  03B4  3401               	retlw	1
  1863  03B5  34C0               	retlw	192
  1864  03B6  3480               	retlw	128
  1865  03B7  3441               	retlw	65
  1866  03B8  3400               	retlw	0
  1867  03B9  34C1               	retlw	193
  1868  03BA  3481               	retlw	129
  1869  03BB  3440               	retlw	64
  1870  03BC  3401               	retlw	1
  1871  03BD  34C0               	retlw	192
  1872  03BE  3480               	retlw	128
  1873  03BF  3441               	retlw	65
  1874  03C0  3400               	retlw	0
  1875  03C1  34C1               	retlw	193
  1876  03C2  3481               	retlw	129
  1877  03C3  3440               	retlw	64
  1878  03C4  3400               	retlw	0
  1879  03C5  34C1               	retlw	193
  1880  03C6  3481               	retlw	129
  1881  03C7  3440               	retlw	64
  1882  03C8  3401               	retlw	1
  1883  03C9  34C0               	retlw	192
  1884  03CA  3480               	retlw	128
  1885  03CB  3441               	retlw	65
  1886  03CC  3400               	retlw	0
  1887  03CD  34C1               	retlw	193
  1888  03CE  3481               	retlw	129
  1889  03CF  3440               	retlw	64
  1890  03D0  3401               	retlw	1
  1891  03D1  34C0               	retlw	192
  1892  03D2  3480               	retlw	128
  1893  03D3  3441               	retlw	65
  1894  03D4  3401               	retlw	1
  1895  03D5  34C0               	retlw	192
  1896  03D6  3480               	retlw	128
  1897  03D7  3441               	retlw	65
  1898  03D8  3400               	retlw	0
  1899  03D9  34C1               	retlw	193
  1900  03DA  3481               	retlw	129
  1901  03DB  3440               	retlw	64
  1902  03DC  3400               	retlw	0
  1903  03DD  34C1               	retlw	193
  1904  03DE  3481               	retlw	129
  1905  03DF  3440               	retlw	64
  1906  03E0  3401               	retlw	1
  1907  03E1  34C0               	retlw	192
  1908  03E2  3480               	retlw	128
  1909  03E3  3441               	retlw	65
  1910  03E4  3401               	retlw	1
  1911  03E5  34C0               	retlw	192
  1912  03E6  3480               	retlw	128
  1913  03E7  3441               	retlw	65
  1914  03E8  3400               	retlw	0
  1915  03E9  34C1               	retlw	193
  1916  03EA  3481               	retlw	129
  1917  03EB  3440               	retlw	64
  1918  03EC  3401               	retlw	1
  1919  03ED  34C0               	retlw	192
  1920  03EE  3480               	retlw	128
  1921  03EF  3441               	retlw	65
  1922  03F0  3400               	retlw	0
  1923  03F1  34C1               	retlw	193
  1924  03F2  3481               	retlw	129
  1925  03F3  3440               	retlw	64
  1926  03F4  3400               	retlw	0
  1927  03F5  34C1               	retlw	193
  1928  03F6  3481               	retlw	129
  1929  03F7  3440               	retlw	64
  1930  03F8  3401               	retlw	1
  1931  03F9  34C0               	retlw	192
  1932  03FA  3480               	retlw	128
  1933  03FB  3441               	retlw	65
  1934  03FC  3401               	retlw	1
  1935  03FD  34C0               	retlw	192
  1936  03FE  3480               	retlw	128
  1937  03FF  3441               	retlw	65
  1938  0400  3400               	retlw	0
  1939  0401  34C1               	retlw	193
  1940  0402  3481               	retlw	129
  1941  0403  3440               	retlw	64
  1942  0404  3400               	retlw	0
  1943  0405  34C1               	retlw	193
  1944  0406  3481               	retlw	129
  1945  0407  3440               	retlw	64
  1946  0408  3401               	retlw	1
  1947  0409  34C0               	retlw	192
  1948  040A  3480               	retlw	128
  1949  040B  3441               	retlw	65
  1950  040C  3400               	retlw	0
  1951  040D  34C1               	retlw	193
  1952  040E  3481               	retlw	129
  1953  040F  3440               	retlw	64
  1954  0410  3401               	retlw	1
  1955  0411  34C0               	retlw	192
  1956  0412  3480               	retlw	128
  1957  0413  3441               	retlw	65
  1958  0414  3401               	retlw	1
  1959  0415  34C0               	retlw	192
  1960  0416  3480               	retlw	128
  1961  0417  3441               	retlw	65
  1962  0418  3400               	retlw	0
  1963  0419  34C1               	retlw	193
  1964  041A  3481               	retlw	129
  1965  041B  3440               	retlw	64
  1966  041C  3400               	retlw	0
  1967  041D  34C1               	retlw	193
  1968  041E  3481               	retlw	129
  1969  041F  3440               	retlw	64
  1970  0420  3401               	retlw	1
  1971  0421  34C0               	retlw	192
  1972  0422  3480               	retlw	128
  1973  0423  3441               	retlw	65
  1974  0424  3401               	retlw	1
  1975  0425  34C0               	retlw	192
  1976  0426  3480               	retlw	128
  1977  0427  3441               	retlw	65
  1978  0428  3400               	retlw	0
  1979  0429  34C1               	retlw	193
  1980  042A  3481               	retlw	129
  1981  042B  3440               	retlw	64
  1982  042C  3401               	retlw	1
  1983  042D  34C0               	retlw	192
  1984  042E  3480               	retlw	128
  1985  042F  3441               	retlw	65
  1986  0430  3400               	retlw	0
  1987  0431  34C1               	retlw	193
  1988  0432  3481               	retlw	129
  1989  0433  3440               	retlw	64
  1990  0434  3400               	retlw	0
  1991  0435  34C1               	retlw	193
  1992  0436  3481               	retlw	129
  1993  0437  3440               	retlw	64
  1994  0438  3401               	retlw	1
  1995  0439  34C0               	retlw	192
  1996  043A  3480               	retlw	128
  1997  043B  3441               	retlw	65
  1998  043C  3400               	retlw	0
  1999  043D  34C1               	retlw	193
  2000  043E  3481               	retlw	129
  2001  043F  3440               	retlw	64
  2002  0440  3401               	retlw	1
  2003  0441  34C0               	retlw	192
  2004  0442  3480               	retlw	128
  2005  0443  3441               	retlw	65
  2006  0444  3401               	retlw	1
  2007  0445  34C0               	retlw	192
  2008  0446  3480               	retlw	128
  2009  0447  3441               	retlw	65
  2010  0448  3400               	retlw	0
  2011  0449  34C1               	retlw	193
  2012  044A  3481               	retlw	129
  2013  044B  3440               	retlw	64
  2014  044C  3401               	retlw	1
  2015  044D  34C0               	retlw	192
  2016  044E  3480               	retlw	128
  2017  044F  3441               	retlw	65
  2018  0450  3400               	retlw	0
  2019  0451  34C1               	retlw	193
  2020  0452  3481               	retlw	129
  2021  0453  3440               	retlw	64
  2022  0454  3400               	retlw	0
  2023  0455  34C1               	retlw	193
  2024  0456  3481               	retlw	129
  2025  0457  3440               	retlw	64
  2026  0458  3401               	retlw	1
  2027  0459  34C0               	retlw	192
  2028  045A  3480               	retlw	128
  2029  045B  3441               	retlw	65
  2030  045C  3401               	retlw	1
  2031  045D  34C0               	retlw	192
  2032  045E  3480               	retlw	128
  2033  045F  3441               	retlw	65
  2034  0460  3400               	retlw	0
  2035  0461  34C1               	retlw	193
  2036  0462  3481               	retlw	129
  2037  0463  3440               	retlw	64
  2038  0464  3400               	retlw	0
  2039  0465  34C1               	retlw	193
  2040  0466  3481               	retlw	129
  2041  0467  3440               	retlw	64
  2042  0468  3401               	retlw	1
  2043  0469  34C0               	retlw	192
  2044  046A  3480               	retlw	128
  2045  046B  3441               	retlw	65
  2046  046C  3400               	retlw	0
  2047  046D  34C1               	retlw	193
  2048  046E  3481               	retlw	129
  2049  046F  3440               	retlw	64
  2050  0470  3401               	retlw	1
  2051  0471  34C0               	retlw	192
  2052  0472  3480               	retlw	128
  2053  0473  3441               	retlw	65
  2054  0474  3401               	retlw	1
  2055  0475  34C0               	retlw	192
  2056  0476  3480               	retlw	128
  2057  0477  3441               	retlw	65
  2058  0478  3400               	retlw	0
  2059  0479  34C1               	retlw	193
  2060  047A  3481               	retlw	129
  2061  047B  3440               	retlw	64
  2062  047C                     __end_of_auchCRCHi:
  2063                           
  2064                           	psect	nvCOMMON
  2065  007C                     __pnvCOMMON:
  2066  007C                     _timer0ReloadVal:
  2067  007C                     	ds	1
  2068                           
  2069                           	psect	nvBANK0
  2070  0052                     __pnvBANK0:
  2071  0052                     _TMR0_InterruptHandler:
  2072  0052                     	ds	2
  2073  0054                     _EUSART_ErrorHandler:
  2074  0054                     	ds	2
  2075  0056                     _EUSART_OverrunErrorHandler:
  2076  0056                     	ds	2
  2077  0058                     _EUSART_FramingErrorHandler:
  2078  0058                     	ds	2
  2079  005A                     _EUSART_RxDefaultInterruptHandler:
  2080  005A                     	ds	2
  2081  005C                     _EUSART_TxDefaultInterruptHandler:
  2082  005C                     	ds	2
  2083  0015                     _TMR0	set	21
  2084  0011                     _PIR1bits	set	17
  2085  000B                     _INTCONbits	set	11
  2086  0095                     _OPTION_REG	set	149
  2087  009D                     _ADCON0bits	set	157
  2088  009D                     _ADCON0	set	157
  2089  009C                     _ADRESH	set	156
  2090  009B                     _ADRESL	set	155
  2091  009E                     _ADCON1	set	158
  2092  0091                     _PIE1bits	set	145
  2093  0097                     _WDTCON	set	151
  2094  0098                     _OSCTUNE	set	152
  2095  0099                     _OSCCON	set	153
  2096  0095                     _OPTION_REGbits	set	149
  2097  008D                     _TRISB	set	141
  2098  008C                     _TRISA	set	140
  2099  010D                     _LATBbits	set	269
  2100  0116                     _BORCON	set	278
  2101  011E                     _APFCON1	set	286
  2102  011D                     _APFCON0	set	285
  2103  010D                     _LATB	set	269
  2104  010C                     _LATA	set	268
  2105  0199                     _RCREG	set	409
  2106  019D                     _RCSTAbits	set	413
  2107  019A                     _TXREG	set	410
  2108  019E                     _TXSTAbits	set	414
  2109  019C                     _SPBRGH	set	412
  2110  019B                     _SPBRGL	set	411
  2111  019E                     _TXSTA	set	414
  2112  019D                     _RCSTA	set	413
  2113  019F                     _BAUDCON	set	415
  2114  018C                     _ANSELA	set	396
  2115  018D                     _ANSELB	set	397
  2116  020C                     _WPUA	set	524
  2117  020D                     _WPUB	set	525
  2118                           
  2119                           	psect	cinit
  2120  003A                     start_initialization:	
  2121                           ; #config settings
  2122                           
  2123  003A                     __initialization:	;BIGRAM
  2124                           
  2125                           ; Initialize objects allocated to BANK1
  2126  003A  30AD               	movlw	low __pidataBANK1
  2127  003B  0084               	movwf	4
  2128  003C  3086               	movlw	(high __pidataBANK1)| (0+128)
  2129  003D  0085               	movwf	5
  2130  003E  30A0               	movlw	low __pdataBANK1
  2131  003F  0086               	movwf	6
  2132  0040  3000               	movlw	high __pdataBANK1
  2133  0041  0087               	movwf	7
  2134  0042  3000               	movlw	0
  2135  0043  00FF               	movwf	btemp+1
  2136  0044  3016               	movlw	22
  2137  0045  3187  2711  3180   	fcall	init_ram
  2138                           
  2139                           ; Clear objects allocated to BIGRAM
  2140  0048  3094               	movlw	low (0+8340)
  2141  0049  0084               	movwf	4
  2142  004A  3020               	movlw	high (0+8340)
  2143  004B  0085               	movwf	5
  2144  004C  30CC               	movlw	204
  2145  004D  00FE               	movwf	btemp
  2146  004E  3000               	movlw	0
  2147  004F  00FF               	movwf	btemp+1
  2148  0050  3187  271D  3180   	fcall	clear_ram0
  2149                           
  2150                           ; Clear objects allocated to COMMON
  2151  0053  01F9               	clrf	__pbssCOMMON& (0+127)
  2152  0054  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  2153  0055  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  2154                           
  2155                           ; Clear objects allocated to BANK0
  2156  0056  01DE               	clrf	__pbssBANK0& (0+127)
  2157  0057  01DF               	clrf	(__pbssBANK0+1)& (0+127)
  2158  0058  01E0               	clrf	(__pbssBANK0+2)& (0+127)
  2159  0059                     end_of_initialization:	
  2160                           ;End of C runtime variable initialization code
  2161                           
  2162  0059                     __end_of__initialization:
  2163  0059  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2164  005A  0020               	movlb	0
  2165  005B  3186  2E7C         	ljmp	_main	;jump to C main() function
  2166                           
  2167                           	psect	bssCOMMON
  2168  0079                     __pbssCOMMON:
  2169  0079                     _ADC_InterruptHandler:
  2170  0079                     	ds	2
  2171  007B                     _eusartRxLastError:
  2172  007B                     	ds	1
  2173                           
  2174                           	psect	bssBANK0
  2175  005E                     __pbssBANK0:
  2176  005E                     TMR0_DefaultInterruptHandler@u16Count:
  2177  005E                     	ds	2
  2178  0060                     _MOS_tModbusPara:
  2179  0060                     	ds	1
  2180                           
  2181                           	psect	dataBANK1
  2182  00A0                     __pdataBANK1:
  2183  00A0                     _Reg:
  2184  00A0                     	ds	22
  2185                           
  2186                           	psect	inittext
  2187  0711                     init_ram:
  2188  0711  00FE               	movwf	btemp
  2189  0712                     initloop:
  2190  0712  0012               	moviw fsr0++
  2191  0713  001E               	movwi fsr1++
  2192  0714  3001               	movlw	1
  2193  0715  02FE               	subwf	btemp,f
  2194  0716  3000               	movlw	0
  2195  0717  3BFF               	subwfb	btemp+1,f
  2196  0718  087F               	movf	btemp+1,w
  2197  0719  047E               	iorwf	btemp,w
  2198  071A  1D03               	skipz
  2199  071B  2F12               	goto	initloop
  2200  071C  3400               	retlw	0
  2201                           
  2202                           	psect	clrtext
  2203  071D                     clear_ram0:	
  2204                           ;	Called with FSR0 containing the base address, and
  2205                           ;	btemp/btemp+1 has the size to clear
  2206                           
  2207  071D  0064               	clrwdt	;clear the watchdog before getting into this loop
  2208  071E                     clrloop0:
  2209  071E  0180               	clrf	0	;clear RAM location pointed to by FSR
  2210  071F  3101               	addfsr 0,1
  2211  0720  3001               	movlw	1
  2212  0721  02FE               	subwf	btemp,f
  2213  0722  3000               	movlw	0
  2214  0723  3BFF               	subwfb	btemp+1,f
  2215  0724  087F               	movf	btemp+1,w
  2216  0725  047E               	iorwf	btemp,w
  2217  0726  1D03               	skipz
  2218  0727  2F1E               	goto	clrloop0	;have we reached the end yet?
  2219  0728  3400               	retlw	0	;all done for this memory range, return
  2220                           
  2221                           	psect	cstackCOMMON
  2222  0070                     __pcstackCOMMON:
  2223  0070                     ?_OSCILLATOR_Initialize:
  2224  0070                     ?_WDT_Initialize:	
  2225                           ; 1 bytes @ 0x0
  2226                           
  2227  0070                     ?_TMR0_Initialize:	
  2228                           ; 1 bytes @ 0x0
  2229                           
  2230  0070                     ?_ADC_Initialize:	
  2231                           ; 1 bytes @ 0x0
  2232                           
  2233  0070                     ?_EUSART_Initialize:	
  2234                           ; 1 bytes @ 0x0
  2235                           
  2236  0070                     ?_EUSART_Receive_ISR:	
  2237                           ; 1 bytes @ 0x0
  2238                           
  2239  0070                     ?_EUSART_Transmit_ISR:	
  2240                           ; 1 bytes @ 0x0
  2241                           
  2242  0070                     ??_EUSART_Transmit_ISR:	
  2243                           ; 1 bytes @ 0x0
  2244                           
  2245  0070                     ?_EUSART_DefaultFramingErrorHandler:	
  2246                           ; 1 bytes @ 0x0
  2247                           
  2248  0070                     ??_EUSART_DefaultFramingErrorHandler:	
  2249                           ; 1 bytes @ 0x0
  2250                           
  2251  0070                     ?_EUSART_DefaultOverrunErrorHandler:	
  2252                           ; 1 bytes @ 0x0
  2253                           
  2254  0070                     ??_EUSART_DefaultOverrunErrorHandler:	
  2255                           ; 1 bytes @ 0x0
  2256                           
  2257  0070                     ?_EUSART_DefaultErrorHandler:	
  2258                           ; 1 bytes @ 0x0
  2259                           
  2260  0070                     ?_EUSART_RxDataHandler:	
  2261                           ; 1 bytes @ 0x0
  2262                           
  2263  0070                     ?_TMR0_ISR:	
  2264                           ; 1 bytes @ 0x0
  2265                           
  2266  0070                     ?_TMR0_DefaultInterruptHandler:	
  2267                           ; 1 bytes @ 0x0
  2268                           
  2269  0070                     ?_MOS_vModbusReceiveEnalbe:	
  2270                           ; 1 bytes @ 0x0
  2271                           
  2272  0070                     ?_MOS_vModbusInit:	
  2273                           ; 1 bytes @ 0x0
  2274                           
  2275  0070                     ?_MOS_vModBusHandler:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278  0070                     ?_PIN_MANAGER_Initialize:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281  0070                     ?_SYSTEM_Initialize:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284  0070                     ?_EUSART_is_tx_done:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287  0070                     ?_EUSART_Write:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290  0070                     ?_INTERRUPT_InterruptManager:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293  0070                     ?_main:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296  0070                     ?_MOS_vModbusTransmitEnalbe:	
  2297                           ; 1 bytes @ 0x0
  2298                           
  2299  0070                     ?_MOS_vModbudFun3:	
  2300                           ; 1 bytes @ 0x0
  2301                           
  2302  0070                     ?_MOS_vModbudFun6:	
  2303                           ; 1 bytes @ 0x0
  2304                           
  2305  0070                     ?_Mos_PtGetModbusObject:	
  2306                           ; 1 bytes @ 0x0
  2307                           
  2308                           
  2309                           ; 2 bytes @ 0x0
  2310  0070                     	ds	2
  2311  0072                     ??_EUSART_RxDataHandler:
  2312  0072                     ??_Mos_PtGetModbusObject:	
  2313                           ; 1 bytes @ 0x2
  2314                           
  2315  0072                     ??_TMR0_DefaultInterruptHandler:	
  2316                           ; 1 bytes @ 0x2
  2317                           
  2318                           
  2319                           ; 1 bytes @ 0x2
  2320  0072                     	ds	2
  2321  0074                     TMR0_DefaultInterruptHandler@tModbusData:
  2322                           
  2323                           ; 2 bytes @ 0x4
  2324  0074                     	ds	2
  2325  0076                     ??_TMR0_ISR:
  2326  0076                     EUSART_RxDataHandler@ucReceivedByte:	
  2327                           ; 1 bytes @ 0x6
  2328                           
  2329                           
  2330                           ; 1 bytes @ 0x6
  2331  0076                     	ds	1
  2332  0077                     EUSART_RxDataHandler@tModbusData:
  2333                           
  2334                           ; 2 bytes @ 0x7
  2335  0077                     	ds	2
  2336  0079                     ??_EUSART_Receive_ISR:
  2337  0079                     ??_EUSART_DefaultErrorHandler:	
  2338                           ; 1 bytes @ 0x9
  2339                           
  2340  0079                     ??_INTERRUPT_InterruptManager:	
  2341                           ; 1 bytes @ 0x9
  2342                           
  2343                           
  2344                           	psect	cstackBANK0
  2345  0020                     __pcstackBANK0:	
  2346                           ; 1 bytes @ 0x9
  2347                           
  2348  0020                     ??_OSCILLATOR_Initialize:
  2349  0020                     ??_WDT_Initialize:	
  2350                           ; 1 bytes @ 0x0
  2351                           
  2352  0020                     ??_ADC_Initialize:	
  2353                           ; 1 bytes @ 0x0
  2354                           
  2355  0020                     ?_EUSART_SetRxInterruptHandler:	
  2356                           ; 1 bytes @ 0x0
  2357                           
  2358  0020                     ?_EUSART_SetTxInterruptHandler:	
  2359                           ; 1 bytes @ 0x0
  2360                           
  2361  0020                     ?_EUSART_SetFramingErrorHandler:	
  2362                           ; 1 bytes @ 0x0
  2363                           
  2364  0020                     ?_EUSART_SetOverrunErrorHandler:	
  2365                           ; 1 bytes @ 0x0
  2366                           
  2367  0020                     ?_EUSART_SetErrorHandler:	
  2368                           ; 1 bytes @ 0x0
  2369                           
  2370  0020                     ?_TMR0_SetInterruptHandler:	
  2371                           ; 1 bytes @ 0x0
  2372                           
  2373  0020                     ??_MOS_vModbusReceiveEnalbe:	
  2374                           ; 1 bytes @ 0x0
  2375                           
  2376  0020                     ??_MOS_vModbusInit:	
  2377                           ; 1 bytes @ 0x0
  2378                           
  2379  0020                     ??_PIN_MANAGER_Initialize:	
  2380                           ; 1 bytes @ 0x0
  2381                           
  2382  0020                     ??_EUSART_is_tx_done:	
  2383                           ; 1 bytes @ 0x0
  2384                           
  2385  0020                     ??_EUSART_Write:	
  2386                           ; 1 bytes @ 0x0
  2387                           
  2388  0020                     ??_MOS_vModbusTransmitEnalbe:	
  2389                           ; 1 bytes @ 0x0
  2390                           
  2391  0020                     ?_crc16:	
  2392                           ; 1 bytes @ 0x0
  2393                           
  2394  0020                     EUSART_Write@txData:	
  2395                           ; 2 bytes @ 0x0
  2396                           
  2397  0020                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2398                           ; 1 bytes @ 0x0
  2399                           
  2400  0020                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2401                           ; 2 bytes @ 0x0
  2402                           
  2403  0020                     EUSART_SetErrorHandler@interruptHandler:	
  2404                           ; 2 bytes @ 0x0
  2405                           
  2406  0020                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2407                           ; 2 bytes @ 0x0
  2408                           
  2409  0020                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2410                           ; 2 bytes @ 0x0
  2411                           
  2412  0020                     TMR0_SetInterruptHandler@InterruptHandler:	
  2413                           ; 2 bytes @ 0x0
  2414                           
  2415  0020                     crc16@puchMsg:	
  2416                           ; 2 bytes @ 0x0
  2417                           
  2418                           
  2419                           ; 2 bytes @ 0x0
  2420  0020                     	ds	2
  2421  0022                     ??_TMR0_Initialize:
  2422  0022                     ??_EUSART_Initialize:	
  2423                           ; 1 bytes @ 0x2
  2424                           
  2425  0022                     ??_EUSART_SetRxInterruptHandler:	
  2426                           ; 1 bytes @ 0x2
  2427                           
  2428  0022                     ??_EUSART_SetTxInterruptHandler:	
  2429                           ; 1 bytes @ 0x2
  2430                           
  2431  0022                     ??_EUSART_SetFramingErrorHandler:	
  2432                           ; 1 bytes @ 0x2
  2433                           
  2434  0022                     ??_EUSART_SetOverrunErrorHandler:	
  2435                           ; 1 bytes @ 0x2
  2436                           
  2437  0022                     ??_EUSART_SetErrorHandler:	
  2438                           ; 1 bytes @ 0x2
  2439                           
  2440  0022                     ??_TMR0_SetInterruptHandler:	
  2441                           ; 1 bytes @ 0x2
  2442                           
  2443  0022                     crc16@usDataLen:	
  2444                           ; 1 bytes @ 0x2
  2445                           
  2446                           
  2447                           ; 2 bytes @ 0x2
  2448  0022                     	ds	1
  2449  0023                     ??_SYSTEM_Initialize:
  2450                           
  2451                           ; 1 bytes @ 0x3
  2452  0023                     	ds	1
  2453  0024                     ??_crc16:
  2454                           
  2455                           ; 1 bytes @ 0x4
  2456  0024                     	ds	5
  2457  0029                     crc16@uIndex:
  2458                           
  2459                           ; 4 bytes @ 0x9
  2460  0029                     	ds	4
  2461  002D                     crc16@uchCRCHi:
  2462                           
  2463                           ; 1 bytes @ 0xD
  2464  002D                     	ds	1
  2465  002E                     crc16@uchCRCLo:
  2466                           
  2467                           ; 1 bytes @ 0xE
  2468  002E                     	ds	1
  2469  002F                     ??_MOS_vModbudFun3:
  2470  002F                     ??_MOS_vModbudFun6:	
  2471                           ; 1 bytes @ 0xF
  2472                           
  2473                           
  2474                           ; 1 bytes @ 0xF
  2475  002F                     	ds	5
  2476  0034                     MOS_vModbudFun6@u16TransmitCRC:
  2477                           
  2478                           ; 2 bytes @ 0x14
  2479  0034                     	ds	2
  2480  0036                     MOS_vModbudFun6@j:
  2481                           
  2482                           ; 2 bytes @ 0x16
  2483  0036                     	ds	2
  2484  0038                     MOS_vModbudFun6@u16RegisterAdd:
  2485                           
  2486                           ; 2 bytes @ 0x18
  2487  0038                     	ds	1
  2488  0039                     MOS_vModbudFun3@u16TransDataLen:
  2489                           
  2490                           ; 2 bytes @ 0x19
  2491  0039                     	ds	1
  2492  003A                     MOS_vModbudFun6@u16value:
  2493                           
  2494                           ; 2 bytes @ 0x1A
  2495  003A                     	ds	1
  2496  003B                     MOS_vModbudFun3@u16RegisterAdd:
  2497                           
  2498                           ; 2 bytes @ 0x1B
  2499  003B                     	ds	1
  2500  003C                     MOS_vModbudFun6@i:
  2501                           
  2502                           ; 2 bytes @ 0x1C
  2503  003C                     	ds	1
  2504  003D                     MOS_vModbudFun3@u16RegisterLen:
  2505                           
  2506                           ; 2 bytes @ 0x1D
  2507  003D                     	ds	2
  2508  003F                     MOS_vModbudFun3@u16TransmitCRC:
  2509                           
  2510                           ; 2 bytes @ 0x1F
  2511  003F                     	ds	2
  2512  0041                     MOS_vModbudFun3@j:
  2513                           
  2514                           ; 2 bytes @ 0x21
  2515  0041                     	ds	2
  2516  0043                     MOS_vModbudFun3@i:
  2517                           
  2518                           ; 2 bytes @ 0x23
  2519  0043                     	ds	2
  2520  0045                     ??_MOS_vModBusHandler:
  2521                           
  2522                           ; 1 bytes @ 0x25
  2523  0045                     	ds	7
  2524  004C                     MOS_vModBusHandler@u16CalculateCRC:
  2525                           
  2526                           ; 2 bytes @ 0x2C
  2527  004C                     	ds	2
  2528  004E                     MOS_vModBusHandler@u16ReceivedFunctionCode:
  2529                           
  2530                           ; 1 bytes @ 0x2E
  2531  004E                     	ds	1
  2532  004F                     MOS_vModBusHandler@u16ReceivedCRC:
  2533                           
  2534                           ; 2 bytes @ 0x2F
  2535  004F                     	ds	2
  2536  0051                     MOS_vModBusHandler@u16ReceivedAddress:
  2537                           
  2538                           ; 1 bytes @ 0x31
  2539  0051                     	ds	1
  2540  0052                     ??_main:
  2541                           
  2542                           	psect	maintext
  2543  067C                     __pmaintext:	
  2544                           ; 1 bytes @ 0x32
  2545 ;;
  2546 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2547 ;;
  2548 ;; *************** function _main *****************
  2549 ;; Defined at:
  2550 ;;		line 49 in file "main.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;		None
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;		None
  2555 ;; Return value:  Size  Location     Type
  2556 ;;                  1    wreg      void 
  2557 ;; Registers used:
  2558 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2559 ;; Tracked objects:
  2560 ;;		On entry : B1F/0
  2561 ;;		On exit  : 0/0
  2562 ;;		Unchanged: 0/0
  2563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2564 ;;      Params:         0       0       0       0       0       0
  2565 ;;      Locals:         0       0       0       0       0       0
  2566 ;;      Temps:          0       0       0       0       0       0
  2567 ;;      Totals:         0       0       0       0       0       0
  2568 ;;Total ram usage:        0 bytes
  2569 ;; Hardware stack levels required when called: 9
  2570 ;; This function calls:
  2571 ;;		_EUSART_Initialize
  2572 ;;		_MOS_vModBusHandler
  2573 ;;		_MOS_vModbusInit
  2574 ;;		_MOS_vModbusReceiveEnalbe
  2575 ;;		_PIN_MANAGER_Initialize
  2576 ;;		_SYSTEM_Initialize
  2577 ;;		_TMR0_Initialize
  2578 ;; This function is called by:
  2579 ;;		Startup code after reset
  2580 ;; This function uses a non-reentrant model
  2581 ;;
  2582                           
  2583                           
  2584                           ;psect for function _main
  2585  067C                     _main:
  2586  067C                     l1720:	
  2587                           ;incstack = 0
  2588                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2589                           
  2590                           
  2591                           ;main.c: 52:     SYSTEM_Initialize();
  2592  067C  3186  26EE  3186   	fcall	_SYSTEM_Initialize
  2593                           
  2594                           ;main.c: 53:     EUSART_Initialize();
  2595  067F  3186  2618  3186   	fcall	_EUSART_Initialize
  2596                           
  2597                           ;main.c: 54:     TMR0_Initialize();
  2598  0682  3186  26C3  3186   	fcall	_TMR0_Initialize
  2599                           
  2600                           ;main.c: 55:     PIN_MANAGER_Initialize();
  2601  0685  3186  2696  3186   	fcall	_PIN_MANAGER_Initialize
  2602  0688                     l1722:
  2603                           
  2604                           ;main.c: 56:     MOS_vModbusReceiveEnalbe();
  2605  0688  3187  277E  3186   	fcall	_MOS_vModbusReceiveEnalbe
  2606  068B                     l1724:
  2607                           
  2608                           ;main.c: 57:     MOS_vModbusInit();
  2609  068B  3187  2729  3186   	fcall	_MOS_vModbusInit
  2610  068E                     l1726:
  2611                           
  2612                           ;main.c: 62:     (INTCONbits.GIE = 1);
  2613  068E  178B               	bsf	11,7	;volatile
  2614  068F                     l1728:
  2615                           
  2616                           ;main.c: 65:     (INTCONbits.PEIE = 1);
  2617  068F  170B               	bsf	11,6	;volatile
  2618  0690                     l1730:
  2619                           
  2620                           ;main.c: 74:     {;main.c: 76:       MOS_vModBusHandler();
  2621  0690  3184  247C  3186   	fcall	_MOS_vModBusHandler
  2622  0693  2E90               	goto	l1730
  2623  0694  3180  2838         	ljmp	start
  2624  0696                     __end_of_main:
  2625                           
  2626                           	psect	text1
  2627  06EE                     __ptext1:	
  2628 ;; *************** function _SYSTEM_Initialize *****************
  2629 ;; Defined at:
  2630 ;;		line 50 in file "mcc_generated_files/mcc.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;		None
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;		None
  2635 ;; Return value:  Size  Location     Type
  2636 ;;                  1    wreg      void 
  2637 ;; Registers used:
  2638 ;;		wreg, status,2, status,0, pclath, cstack
  2639 ;; Tracked objects:
  2640 ;;		On entry : 0/0
  2641 ;;		On exit  : 0/0
  2642 ;;		Unchanged: 0/0
  2643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2644 ;;      Params:         0       0       0       0       0       0
  2645 ;;      Locals:         0       0       0       0       0       0
  2646 ;;      Temps:          0       0       0       0       0       0
  2647 ;;      Totals:         0       0       0       0       0       0
  2648 ;;Total ram usage:        0 bytes
  2649 ;; Hardware stack levels used: 1
  2650 ;; Hardware stack levels required when called: 7
  2651 ;; This function calls:
  2652 ;;		_ADC_Initialize
  2653 ;;		_EUSART_Initialize
  2654 ;;		_OSCILLATOR_Initialize
  2655 ;;		_PIN_MANAGER_Initialize
  2656 ;;		_TMR0_Initialize
  2657 ;;		_WDT_Initialize
  2658 ;; This function is called by:
  2659 ;;		_main
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function _SYSTEM_Initialize
  2665  06EE                     _SYSTEM_Initialize:
  2666  06EE                     l1634:	
  2667                           ;incstack = 0
  2668                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2669                           
  2670                           
  2671                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2672  06EE  3186  2696  3186   	fcall	_PIN_MANAGER_Initialize
  2673                           
  2674                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2675  06F1  3187  2734  3186   	fcall	_OSCILLATOR_Initialize
  2676                           
  2677                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  2678  06F4  3187  276B  3186   	fcall	_WDT_Initialize
  2679                           
  2680                           ;mcc_generated_files/mcc.c: 56:     TMR0_Initialize();
  2681  06F7  3186  26C3  3186   	fcall	_TMR0_Initialize
  2682                           
  2683                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  2684  06FA  3187  273B  3186   	fcall	_ADC_Initialize
  2685                           
  2686                           ;mcc_generated_files/mcc.c: 58:     EUSART_Initialize();
  2687  06FD  3186  2618  3186   	fcall	_EUSART_Initialize
  2688  0700                     l51:
  2689  0700  0008               	return
  2690  0701                     __end_of_SYSTEM_Initialize:
  2691                           
  2692                           	psect	text2
  2693  076B                     __ptext2:	
  2694 ;; *************** function _WDT_Initialize *****************
  2695 ;; Defined at:
  2696 ;;		line 71 in file "mcc_generated_files/mcc.c"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2710 ;;      Params:         0       0       0       0       0       0
  2711 ;;      Locals:         0       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0
  2713 ;;      Totals:         0       0       0       0       0       0
  2714 ;;Total ram usage:        0 bytes
  2715 ;; Hardware stack levels used: 1
  2716 ;; Hardware stack levels required when called: 5
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		_SYSTEM_Initialize
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function _WDT_Initialize
  2726  076B                     _WDT_Initialize:
  2727  076B                     l1470:	
  2728                           ;incstack = 0
  2729                           ; Regs used in _WDT_Initialize: [wreg]
  2730                           
  2731                           
  2732                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x16;
  2733  076B  3016               	movlw	22
  2734  076C  0021               	movlb	1	; select bank1
  2735  076D  0097               	movwf	23	;volatile
  2736  076E                     l57:
  2737  076E  0008               	return
  2738  076F                     __end_of_WDT_Initialize:
  2739                           
  2740                           	psect	text3
  2741  06C3                     __ptext3:	
  2742 ;; *************** function _TMR0_Initialize *****************
  2743 ;; Defined at:
  2744 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;		None
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, pclath, cstack
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2758 ;;      Params:         0       0       0       0       0       0
  2759 ;;      Locals:         0       0       0       0       0       0
  2760 ;;      Temps:          0       1       0       0       0       0
  2761 ;;      Totals:         0       1       0       0       0       0
  2762 ;;Total ram usage:        1 bytes
  2763 ;; Hardware stack levels used: 1
  2764 ;; Hardware stack levels required when called: 6
  2765 ;; This function calls:
  2766 ;;		_TMR0_SetInterruptHandler
  2767 ;; This function is called by:
  2768 ;;		_SYSTEM_Initialize
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           
  2774                           ;psect for function _TMR0_Initialize
  2775  06C3                     _TMR0_Initialize:
  2776  06C3                     l1472:	
  2777                           ;incstack = 0
  2778                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  2779                           
  2780                           
  2781                           ;mcc_generated_files/tmr0.c: 72:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD7 
      +                          & 0x3F));
  2782  06C3  0021               	movlb	1	; select bank1
  2783  06C4  0815               	movf	21,w	;volatile
  2784  06C5  39C0               	andlw	192
  2785  06C6  3817               	iorlw	23
  2786  06C7  0095               	movwf	21	;volatile
  2787  06C8                     l1474:
  2788                           
  2789                           ;mcc_generated_files/tmr0.c: 75:     TMR0 = 0xF0;
  2790  06C8  30F0               	movlw	240
  2791  06C9  0020               	movlb	0	; select bank0
  2792  06CA  0095               	movwf	21	;volatile
  2793  06CB                     l1476:
  2794                           
  2795                           ;mcc_generated_files/tmr0.c: 78:     timer0ReloadVal= 240;
  2796  06CB  30F0               	movlw	240
  2797  06CC  00A2               	movwf	??_TMR0_Initialize
  2798  06CD  0822               	movf	??_TMR0_Initialize,w
  2799  06CE  00FC               	movwf	_timer0ReloadVal	;volatile
  2800  06CF                     l1478:
  2801                           
  2802                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IF = 0;
  2803  06CF  110B               	bcf	11,2	;volatile
  2804  06D0                     l1480:
  2805                           
  2806                           ;mcc_generated_files/tmr0.c: 84:     INTCONbits.TMR0IE = 1;
  2807  06D0  168B               	bsf	11,5	;volatile
  2808  06D1                     l1482:
  2809                           
  2810                           ;mcc_generated_files/tmr0.c: 87:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2811  06D1  30D7               	movlw	low _TMR0_DefaultInterruptHandler
  2812  06D2  00A0               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2813  06D3  3005               	movlw	high _TMR0_DefaultInterruptHandler
  2814  06D4  00A1               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2815  06D5  3187  2742  3186   	fcall	_TMR0_SetInterruptHandler
  2816  06D8                     l262:
  2817  06D8  0008               	return
  2818  06D9                     __end_of_TMR0_Initialize:
  2819                           
  2820                           	psect	text4
  2821  0742                     __ptext4:	
  2822 ;; *************** function _TMR0_SetInterruptHandler *****************
  2823 ;; Defined at:
  2824 ;;		line 128 in file "mcc_generated_files/tmr0.c"
  2825 ;; Parameters:    Size  Location     Type
  2826 ;;  InterruptHan    2    0[BANK0 ] PTR FTN()void 
  2827 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;		None
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      void 
  2832 ;; Registers used:
  2833 ;;		wreg
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2839 ;;      Params:         0       2       0       0       0       0
  2840 ;;      Locals:         0       0       0       0       0       0
  2841 ;;      Temps:          0       0       0       0       0       0
  2842 ;;      Totals:         0       2       0       0       0       0
  2843 ;;Total ram usage:        2 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 5
  2846 ;; This function calls:
  2847 ;;		Nothing
  2848 ;; This function is called by:
  2849 ;;		_TMR0_Initialize
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           
  2853                           
  2854                           ;psect for function _TMR0_SetInterruptHandler
  2855  0742                     _TMR0_SetInterruptHandler:
  2856  0742                     l1432:	
  2857                           ;incstack = 0
  2858                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  2859                           
  2860                           
  2861                           ;mcc_generated_files/tmr0.c: 129:     TMR0_InterruptHandler = InterruptHandler;
  2862  0742  0020               	movlb	0	; select bank0
  2863  0743  0821               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  2864  0744  00D3               	movwf	_TMR0_InterruptHandler+1
  2865  0745  0820               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  2866  0746  00D2               	movwf	_TMR0_InterruptHandler
  2867  0747                     l278:
  2868  0747  0008               	return
  2869  0748                     __end_of_TMR0_SetInterruptHandler:
  2870                           
  2871                           	psect	text5
  2872  0696                     __ptext5:	
  2873 ;; *************** function _PIN_MANAGER_Initialize *****************
  2874 ;; Defined at:
  2875 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2876 ;; Parameters:    Size  Location     Type
  2877 ;;		None
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;		None
  2880 ;; Return value:  Size  Location     Type
  2881 ;;                  1    wreg      void 
  2882 ;; Registers used:
  2883 ;;		wreg, status,2
  2884 ;; Tracked objects:
  2885 ;;		On entry : 0/0
  2886 ;;		On exit  : 0/0
  2887 ;;		Unchanged: 0/0
  2888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2889 ;;      Params:         0       0       0       0       0       0
  2890 ;;      Locals:         0       0       0       0       0       0
  2891 ;;      Temps:          0       0       0       0       0       0
  2892 ;;      Totals:         0       0       0       0       0       0
  2893 ;;Total ram usage:        0 bytes
  2894 ;; Hardware stack levels used: 1
  2895 ;; Hardware stack levels required when called: 5
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_SYSTEM_Initialize
  2900 ;;		_main
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           
  2905                           ;psect for function _PIN_MANAGER_Initialize
  2906  0696                     _PIN_MANAGER_Initialize:
  2907  0696                     l1450:	
  2908                           ;incstack = 0
  2909                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  2910                           
  2911                           
  2912                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2913  0696  0022               	movlb	2	; select bank2
  2914  0697  018C               	clrf	12	;volatile
  2915                           
  2916                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2917  0698  018D               	clrf	13	;volatile
  2918  0699                     l1452:
  2919                           
  2920                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0xF7;
  2921  0699  30F7               	movlw	247
  2922  069A  0021               	movlb	1	; select bank1
  2923  069B  008C               	movwf	12	;volatile
  2924  069C                     l1454:
  2925                           
  2926                           ;mcc_generated_files/pin_manager.c: 67:     TRISB = 0xFE;
  2927  069C  30FE               	movlw	254
  2928  069D  008D               	movwf	13	;volatile
  2929  069E                     l1456:
  2930                           
  2931                           ;mcc_generated_files/pin_manager.c: 72:     ANSELB = 0xC8;
  2932  069E  30C8               	movlw	200
  2933  069F  0023               	movlb	3	; select bank3
  2934  06A0  008D               	movwf	13	;volatile
  2935  06A1                     l1458:
  2936                           
  2937                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x04;
  2938  06A1  3004               	movlw	4
  2939  06A2  008C               	movwf	12	;volatile
  2940                           
  2941                           ;mcc_generated_files/pin_manager.c: 78:     WPUB = 0x00;
  2942  06A3  0024               	movlb	4	; select bank4
  2943  06A4  018D               	clrf	13	;volatile
  2944                           
  2945                           ;mcc_generated_files/pin_manager.c: 79:     WPUA = 0x00;
  2946  06A5  018C               	clrf	12	;volatile
  2947  06A6                     l1460:
  2948                           
  2949                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  2950  06A6  0021               	movlb	1	; select bank1
  2951  06A7  1795               	bsf	21,7	;volatile
  2952                           
  2953                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  2954  06A8  0022               	movlb	2	; select bank2
  2955  06A9  019D               	clrf	29	;volatile
  2956  06AA                     l1462:
  2957                           
  2958                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x01;
  2959  06AA  3001               	movlw	1
  2960  06AB  009E               	movwf	30	;volatile
  2961  06AC                     l25:
  2962  06AC  0008               	return
  2963  06AD                     __end_of_PIN_MANAGER_Initialize:
  2964                           
  2965                           	psect	text6
  2966  0734                     __ptext6:	
  2967 ;; *************** function _OSCILLATOR_Initialize *****************
  2968 ;; Defined at:
  2969 ;;		line 61 in file "mcc_generated_files/mcc.c"
  2970 ;; Parameters:    Size  Location     Type
  2971 ;;		None
  2972 ;; Auto vars:     Size  Location     Type
  2973 ;;		None
  2974 ;; Return value:  Size  Location     Type
  2975 ;;                  1    wreg      void 
  2976 ;; Registers used:
  2977 ;;		wreg, status,2
  2978 ;; Tracked objects:
  2979 ;;		On entry : 0/0
  2980 ;;		On exit  : 0/0
  2981 ;;		Unchanged: 0/0
  2982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  2983 ;;      Params:         0       0       0       0       0       0
  2984 ;;      Locals:         0       0       0       0       0       0
  2985 ;;      Temps:          0       0       0       0       0       0
  2986 ;;      Totals:         0       0       0       0       0       0
  2987 ;;Total ram usage:        0 bytes
  2988 ;; Hardware stack levels used: 1
  2989 ;; Hardware stack levels required when called: 5
  2990 ;; This function calls:
  2991 ;;		Nothing
  2992 ;; This function is called by:
  2993 ;;		_SYSTEM_Initialize
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           
  2998                           ;psect for function _OSCILLATOR_Initialize
  2999  0734                     _OSCILLATOR_Initialize:
  3000  0734                     l1464:	
  3001                           ;incstack = 0
  3002                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3003                           
  3004                           
  3005                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x7A;
  3006  0734  307A               	movlw	122
  3007  0735  0021               	movlb	1	; select bank1
  3008  0736  0099               	movwf	25	;volatile
  3009  0737                     l1466:
  3010                           
  3011                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3012  0737  0198               	clrf	24	;volatile
  3013  0738                     l1468:
  3014                           
  3015                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3016  0738  0022               	movlb	2	; select bank2
  3017  0739  0196               	clrf	22	;volatile
  3018  073A                     l54:
  3019  073A  0008               	return
  3020  073B                     __end_of_OSCILLATOR_Initialize:
  3021                           
  3022                           	psect	text7
  3023  0618                     __ptext7:	
  3024 ;; *************** function _EUSART_Initialize *****************
  3025 ;; Defined at:
  3026 ;;		line 79 in file "mcc_generated_files/eusart.c"
  3027 ;; Parameters:    Size  Location     Type
  3028 ;;		None
  3029 ;; Auto vars:     Size  Location     Type
  3030 ;;		None
  3031 ;; Return value:  Size  Location     Type
  3032 ;;                  1    wreg      void 
  3033 ;; Registers used:
  3034 ;;		wreg, status,2, status,0, pclath, cstack
  3035 ;; Tracked objects:
  3036 ;;		On entry : 0/0
  3037 ;;		On exit  : 0/0
  3038 ;;		Unchanged: 0/0
  3039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3040 ;;      Params:         0       0       0       0       0       0
  3041 ;;      Locals:         0       0       0       0       0       0
  3042 ;;      Temps:          0       0       0       0       0       0
  3043 ;;      Totals:         0       0       0       0       0       0
  3044 ;;Total ram usage:        0 bytes
  3045 ;; Hardware stack levels used: 1
  3046 ;; Hardware stack levels required when called: 6
  3047 ;; This function calls:
  3048 ;;		_EUSART_SetErrorHandler
  3049 ;;		_EUSART_SetFramingErrorHandler
  3050 ;;		_EUSART_SetOverrunErrorHandler
  3051 ;;		_EUSART_SetRxInterruptHandler
  3052 ;;		_EUSART_SetTxInterruptHandler
  3053 ;; This function is called by:
  3054 ;;		_SYSTEM_Initialize
  3055 ;;		_main
  3056 ;; This function uses a non-reentrant model
  3057 ;;
  3058                           
  3059                           
  3060                           ;psect for function _EUSART_Initialize
  3061  0618                     _EUSART_Initialize:
  3062  0618                     l1488:	
  3063                           ;incstack = 0
  3064                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3065                           
  3066                           
  3067                           ;mcc_generated_files/eusart.c: 82:     PIE1bits.RCIE = 0;
  3068  0618  0021               	movlb	1	; select bank1
  3069  0619  1291               	bcf	17,5	;volatile
  3070  061A                     l1490:
  3071                           
  3072                           ;mcc_generated_files/eusart.c: 83:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3073  061A  3053               	movlw	low _EUSART_Receive_ISR
  3074  061B  0020               	movlb	0	; select bank0
  3075  061C  00A0               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3076  061D  3006               	movlw	high _EUSART_Receive_ISR
  3077  061E  00A1               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  3078  061F  3187  274E  3186   	fcall	_EUSART_SetRxInterruptHandler
  3079  0622                     l1492:
  3080                           
  3081                           ;mcc_generated_files/eusart.c: 84:     PIE1bits.TXIE = 0;
  3082  0622  0021               	movlb	1	; select bank1
  3083  0623  1211               	bcf	17,4	;volatile
  3084                           
  3085                           ;mcc_generated_files/eusart.c: 85:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  3086  0624  3081               	movlw	low _EUSART_Transmit_ISR
  3087  0625  0020               	movlb	0	; select bank0
  3088  0626  00A0               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  3089  0627  3007               	movlw	high _EUSART_Transmit_ISR
  3090  0628  00A1               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  3091  0629  3187  2748  3186   	fcall	_EUSART_SetTxInterruptHandler
  3092  062C                     l1494:
  3093                           
  3094                           ;mcc_generated_files/eusart.c: 89:     BAUDCON = 0x08;
  3095  062C  3008               	movlw	8
  3096  062D  0023               	movlb	3	; select bank3
  3097  062E  009F               	movwf	31	;volatile
  3098  062F                     l1496:
  3099                           
  3100                           ;mcc_generated_files/eusart.c: 92:     RCSTA = 0x90;
  3101  062F  3090               	movlw	144
  3102  0630  009D               	movwf	29	;volatile
  3103  0631                     l1498:
  3104                           
  3105                           ;mcc_generated_files/eusart.c: 95:     TXSTA = 0x24;
  3106  0631  3024               	movlw	36
  3107  0632  009E               	movwf	30	;volatile
  3108  0633                     l1500:
  3109                           
  3110                           ;mcc_generated_files/eusart.c: 98:     SPBRGL = 0xA0;
  3111  0633  30A0               	movlw	160
  3112  0634  009B               	movwf	27	;volatile
  3113  0635                     l1502:
  3114                           
  3115                           ;mcc_generated_files/eusart.c: 101:     SPBRGH = 0x01;
  3116  0635  3001               	movlw	1
  3117  0636  009C               	movwf	28	;volatile
  3118  0637                     l1504:
  3119                           
  3120                           ;mcc_generated_files/eusart.c: 104:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  3121  0637  3084               	movlw	low _EUSART_DefaultFramingErrorHandler
  3122  0638  0020               	movlb	0	; select bank0
  3123  0639  00A0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  3124  063A  3007               	movlw	high _EUSART_DefaultFramingErrorHandler
  3125  063B  00A1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  3126  063C  3187  275A  3186   	fcall	_EUSART_SetFramingErrorHandler
  3127  063F                     l1506:
  3128                           
  3129                           ;mcc_generated_files/eusart.c: 105:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  3130  063F  3073               	movlw	low _EUSART_DefaultOverrunErrorHandler
  3131  0640  0020               	movlb	0	; select bank0
  3132  0641  00A0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  3133  0642  3007               	movlw	high _EUSART_DefaultOverrunErrorHandler
  3134  0643  00A1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  3135  0644  3187  2754  3186   	fcall	_EUSART_SetOverrunErrorHandler
  3136  0647                     l1508:
  3137                           
  3138                           ;mcc_generated_files/eusart.c: 106:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  3139  0647  3077               	movlw	low _EUSART_DefaultErrorHandler
  3140  0648  0020               	movlb	0	; select bank0
  3141  0649  00A0               	movwf	EUSART_SetErrorHandler@interruptHandler
  3142  064A  3007               	movlw	high _EUSART_DefaultErrorHandler
  3143  064B  00A1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  3144  064C  3187  2760  3186   	fcall	_EUSART_SetErrorHandler
  3145  064F                     l1510:
  3146                           
  3147                           ;mcc_generated_files/eusart.c: 108:     eusartRxLastError.status = 0;
  3148  064F  01FB               	clrf	_eusartRxLastError	;volatile
  3149  0650                     l1512:
  3150                           
  3151                           ;mcc_generated_files/eusart.c: 113:     PIE1bits.RCIE = 1;
  3152  0650  0021               	movlb	1	; select bank1
  3153  0651  1691               	bsf	17,5	;volatile
  3154  0652                     l118:
  3155  0652  0008               	return
  3156  0653                     __end_of_EUSART_Initialize:
  3157                           
  3158                           	psect	text8
  3159  0748                     __ptext8:	
  3160 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  3161 ;; Defined at:
  3162 ;;		line 248 in file "mcc_generated_files/eusart.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3165 ;;		 -> EUSART_Transmit_ISR(1), 
  3166 ;; Auto vars:     Size  Location     Type
  3167 ;;		None
  3168 ;; Return value:  Size  Location     Type
  3169 ;;                  1    wreg      void 
  3170 ;; Registers used:
  3171 ;;		wreg
  3172 ;; Tracked objects:
  3173 ;;		On entry : 0/0
  3174 ;;		On exit  : 0/0
  3175 ;;		Unchanged: 0/0
  3176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3177 ;;      Params:         0       2       0       0       0       0
  3178 ;;      Locals:         0       0       0       0       0       0
  3179 ;;      Temps:          0       0       0       0       0       0
  3180 ;;      Totals:         0       2       0       0       0       0
  3181 ;;Total ram usage:        2 bytes
  3182 ;; Hardware stack levels used: 1
  3183 ;; Hardware stack levels required when called: 5
  3184 ;; This function calls:
  3185 ;;		Nothing
  3186 ;; This function is called by:
  3187 ;;		_EUSART_Initialize
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           
  3192                           ;psect for function _EUSART_SetTxInterruptHandler
  3193  0748                     _EUSART_SetTxInterruptHandler:
  3194  0748                     l1402:	
  3195                           ;incstack = 0
  3196                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  3197                           
  3198                           
  3199                           ;mcc_generated_files/eusart.c: 249:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  3200  0748  0020               	movlb	0	; select bank0
  3201  0749  0821               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  3202  074A  00DD               	movwf	_EUSART_TxDefaultInterruptHandler+1
  3203  074B  0820               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  3204  074C  00DC               	movwf	_EUSART_TxDefaultInterruptHandler
  3205  074D                     l175:
  3206  074D  0008               	return
  3207  074E                     __end_of_EUSART_SetTxInterruptHandler:
  3208                           
  3209                           	psect	text9
  3210  074E                     __ptext9:	
  3211 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  3212 ;; Defined at:
  3213 ;;		line 252 in file "mcc_generated_files/eusart.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3216 ;;		 -> EUSART_Receive_ISR(1), 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;		None
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3228 ;;      Params:         0       2       0       0       0       0
  3229 ;;      Locals:         0       0       0       0       0       0
  3230 ;;      Temps:          0       0       0       0       0       0
  3231 ;;      Totals:         0       2       0       0       0       0
  3232 ;;Total ram usage:        2 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 5
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_EUSART_Initialize
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function _EUSART_SetRxInterruptHandler
  3244  074E                     _EUSART_SetRxInterruptHandler:
  3245  074E                     l1400:	
  3246                           ;incstack = 0
  3247                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  3248                           
  3249                           
  3250                           ;mcc_generated_files/eusart.c: 253:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  3251  074E  0020               	movlb	0	; select bank0
  3252  074F  0821               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  3253  0750  00DB               	movwf	_EUSART_RxDefaultInterruptHandler+1
  3254  0751  0820               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  3255  0752  00DA               	movwf	_EUSART_RxDefaultInterruptHandler
  3256  0753                     l178:
  3257  0753  0008               	return
  3258  0754                     __end_of_EUSART_SetRxInterruptHandler:
  3259                           
  3260                           	psect	text10
  3261  0754                     __ptext10:	
  3262 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  3263 ;; Defined at:
  3264 ;;		line 240 in file "mcc_generated_files/eusart.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3267 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  3268 ;; Auto vars:     Size  Location     Type
  3269 ;;		None
  3270 ;; Return value:  Size  Location     Type
  3271 ;;                  1    wreg      void 
  3272 ;; Registers used:
  3273 ;;		wreg
  3274 ;; Tracked objects:
  3275 ;;		On entry : 0/0
  3276 ;;		On exit  : 0/0
  3277 ;;		Unchanged: 0/0
  3278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3279 ;;      Params:         0       2       0       0       0       0
  3280 ;;      Locals:         0       0       0       0       0       0
  3281 ;;      Temps:          0       0       0       0       0       0
  3282 ;;      Totals:         0       2       0       0       0       0
  3283 ;;Total ram usage:        2 bytes
  3284 ;; Hardware stack levels used: 1
  3285 ;; Hardware stack levels required when called: 5
  3286 ;; This function calls:
  3287 ;;		Nothing
  3288 ;; This function is called by:
  3289 ;;		_EUSART_Initialize
  3290 ;; This function uses a non-reentrant model
  3291 ;;
  3292                           
  3293                           
  3294                           ;psect for function _EUSART_SetOverrunErrorHandler
  3295  0754                     _EUSART_SetOverrunErrorHandler:
  3296  0754                     l1406:	
  3297                           ;incstack = 0
  3298                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  3299                           
  3300                           
  3301                           ;mcc_generated_files/eusart.c: 241:     EUSART_OverrunErrorHandler = interruptHandler;
  3302  0754  0020               	movlb	0	; select bank0
  3303  0755  0821               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  3304  0756  00D7               	movwf	_EUSART_OverrunErrorHandler+1
  3305  0757  0820               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  3306  0758  00D6               	movwf	_EUSART_OverrunErrorHandler
  3307  0759                     l169:
  3308  0759  0008               	return
  3309  075A                     __end_of_EUSART_SetOverrunErrorHandler:
  3310                           
  3311                           	psect	text11
  3312  075A                     __ptext11:	
  3313 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  3314 ;; Defined at:
  3315 ;;		line 236 in file "mcc_generated_files/eusart.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3318 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		wreg
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3330 ;;      Params:         0       2       0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0
  3333 ;;      Totals:         0       2       0       0       0       0
  3334 ;;Total ram usage:        2 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 5
  3337 ;; This function calls:
  3338 ;;		Nothing
  3339 ;; This function is called by:
  3340 ;;		_EUSART_Initialize
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           
  3345                           ;psect for function _EUSART_SetFramingErrorHandler
  3346  075A                     _EUSART_SetFramingErrorHandler:
  3347  075A                     l1404:	
  3348                           ;incstack = 0
  3349                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  3350                           
  3351                           
  3352                           ;mcc_generated_files/eusart.c: 237:     EUSART_FramingErrorHandler = interruptHandler;
  3353  075A  0020               	movlb	0	; select bank0
  3354  075B  0821               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  3355  075C  00D9               	movwf	_EUSART_FramingErrorHandler+1
  3356  075D  0820               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  3357  075E  00D8               	movwf	_EUSART_FramingErrorHandler
  3358  075F                     l166:
  3359  075F  0008               	return
  3360  0760                     __end_of_EUSART_SetFramingErrorHandler:
  3361                           
  3362                           	psect	text12
  3363  0760                     __ptext12:	
  3364 ;; *************** function _EUSART_SetErrorHandler *****************
  3365 ;; Defined at:
  3366 ;;		line 244 in file "mcc_generated_files/eusart.c"
  3367 ;; Parameters:    Size  Location     Type
  3368 ;;  interruptHan    2    0[BANK0 ] PTR FTN()void 
  3369 ;;		 -> EUSART_DefaultErrorHandler(1), 
  3370 ;; Auto vars:     Size  Location     Type
  3371 ;;		None
  3372 ;; Return value:  Size  Location     Type
  3373 ;;                  1    wreg      void 
  3374 ;; Registers used:
  3375 ;;		wreg
  3376 ;; Tracked objects:
  3377 ;;		On entry : 0/0
  3378 ;;		On exit  : 0/0
  3379 ;;		Unchanged: 0/0
  3380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3381 ;;      Params:         0       2       0       0       0       0
  3382 ;;      Locals:         0       0       0       0       0       0
  3383 ;;      Temps:          0       0       0       0       0       0
  3384 ;;      Totals:         0       2       0       0       0       0
  3385 ;;Total ram usage:        2 bytes
  3386 ;; Hardware stack levels used: 1
  3387 ;; Hardware stack levels required when called: 5
  3388 ;; This function calls:
  3389 ;;		Nothing
  3390 ;; This function is called by:
  3391 ;;		_EUSART_Initialize
  3392 ;; This function uses a non-reentrant model
  3393 ;;
  3394                           
  3395                           
  3396                           ;psect for function _EUSART_SetErrorHandler
  3397  0760                     _EUSART_SetErrorHandler:
  3398  0760                     l1408:	
  3399                           ;incstack = 0
  3400                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  3401                           
  3402                           
  3403                           ;mcc_generated_files/eusart.c: 245:     EUSART_ErrorHandler = interruptHandler;
  3404  0760  0020               	movlb	0	; select bank0
  3405  0761  0821               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  3406  0762  00D5               	movwf	_EUSART_ErrorHandler+1
  3407  0763  0820               	movf	EUSART_SetErrorHandler@interruptHandler,w
  3408  0764  00D4               	movwf	_EUSART_ErrorHandler
  3409  0765                     l172:
  3410  0765  0008               	return
  3411  0766                     __end_of_EUSART_SetErrorHandler:
  3412                           
  3413                           	psect	text13
  3414  073B                     __ptext13:	
  3415 ;; *************** function _ADC_Initialize *****************
  3416 ;; Defined at:
  3417 ;;		line 67 in file "mcc_generated_files/adc.c"
  3418 ;; Parameters:    Size  Location     Type
  3419 ;;		None
  3420 ;; Auto vars:     Size  Location     Type
  3421 ;;		None
  3422 ;; Return value:  Size  Location     Type
  3423 ;;                  1    wreg      void 
  3424 ;; Registers used:
  3425 ;;		wreg, status,2
  3426 ;; Tracked objects:
  3427 ;;		On entry : 0/0
  3428 ;;		On exit  : 0/0
  3429 ;;		Unchanged: 0/0
  3430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3431 ;;      Params:         0       0       0       0       0       0
  3432 ;;      Locals:         0       0       0       0       0       0
  3433 ;;      Temps:          0       0       0       0       0       0
  3434 ;;      Totals:         0       0       0       0       0       0
  3435 ;;Total ram usage:        0 bytes
  3436 ;; Hardware stack levels used: 1
  3437 ;; Hardware stack levels required when called: 5
  3438 ;; This function calls:
  3439 ;;		Nothing
  3440 ;; This function is called by:
  3441 ;;		_SYSTEM_Initialize
  3442 ;; This function uses a non-reentrant model
  3443 ;;
  3444                           
  3445                           
  3446                           ;psect for function _ADC_Initialize
  3447  073B                     _ADC_Initialize:
  3448  073B                     l1484:	
  3449                           ;incstack = 0
  3450                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3451                           
  3452                           
  3453                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x00;
  3454  073B  0021               	movlb	1	; select bank1
  3455  073C  019E               	clrf	30	;volatile
  3456                           
  3457                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3458  073D  019B               	clrf	27	;volatile
  3459                           
  3460                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3461  073E  019C               	clrf	28	;volatile
  3462  073F                     l1486:
  3463                           
  3464                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x01;
  3465  073F  3001               	movlw	1
  3466  0740  009D               	movwf	29	;volatile
  3467  0741                     l195:
  3468  0741  0008               	return
  3469  0742                     __end_of_ADC_Initialize:
  3470                           
  3471                           	psect	text14
  3472  0729                     __ptext14:	
  3473 ;; *************** function _MOS_vModbusInit *****************
  3474 ;; Defined at:
  3475 ;;		line 17 in file "Modbus_uart/Modbus.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;		None
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3489 ;;      Params:         0       0       0       0       0       0
  3490 ;;      Locals:         0       0       0       0       0       0
  3491 ;;      Temps:          0       1       0       0       0       0
  3492 ;;      Totals:         0       1       0       0       0       0
  3493 ;;Total ram usage:        1 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 5
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_main
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           
  3504                           ;psect for function _MOS_vModbusInit
  3505  0729                     _MOS_vModbusInit:
  3506  0729                     l1666:	
  3507                           ;incstack = 0
  3508                           ; Regs used in _MOS_vModbusInit: [wreg+fsr1l+fsr1h+status,2+status,0]
  3509                           
  3510                           
  3511                           ;Modbus_uart/Modbus.c: 19:  MOS_tModbusPara.u8DeviceAddress = 4;
  3512  0729  3004               	movlw	4
  3513  072A  0020               	movlb	0	; select bank0
  3514  072B  00A0               	movwf	??_MOS_vModbusInit
  3515  072C  0820               	movf	??_MOS_vModbusInit,w
  3516  072D  00E0               	movwf	_MOS_tModbusPara
  3517  072E                     l1668:
  3518                           
  3519                           ;Modbus_uart/Modbus.c: 20:  MOS_tModbusData.u8TimeoutStart = 0;
  3520  072E  30FA               	movlw	250
  3521  072F  0086               	movwf	6
  3522  0730  3020               	movlw	32
  3523  0731  0087               	movwf	7
  3524  0732  0181               	clrf	1
  3525  0733                     l336:
  3526  0733  0008               	return
  3527  0734                     __end_of_MOS_vModbusInit:
  3528                           
  3529                           	psect	text15
  3530  047C                     __ptext15:	
  3531 ;; *************** function _MOS_vModBusHandler *****************
  3532 ;; Defined at:
  3533 ;;		line 111 in file "Modbus_uart/Modbus.c"
  3534 ;; Parameters:    Size  Location     Type
  3535 ;;		None
  3536 ;; Auto vars:     Size  Location     Type
  3537 ;;  u16ReceivedC    2   47[BANK0 ] unsigned short 
  3538 ;;  u16Calculate    2   44[BANK0 ] unsigned short 
  3539 ;;  u16ReceivedA    1   49[BANK0 ] unsigned char 
  3540 ;;  u16ReceivedF    1   46[BANK0 ] unsigned char 
  3541 ;; Return value:  Size  Location     Type
  3542 ;;                  1    wreg      void 
  3543 ;; Registers used:
  3544 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3545 ;; Tracked objects:
  3546 ;;		On entry : 0/0
  3547 ;;		On exit  : 0/0
  3548 ;;		Unchanged: 0/0
  3549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3550 ;;      Params:         0       0       0       0       0       0
  3551 ;;      Locals:         0       6       0       0       0       0
  3552 ;;      Temps:          0       7       0       0       0       0
  3553 ;;      Totals:         0      13       0       0       0       0
  3554 ;;Total ram usage:       13 bytes
  3555 ;; Hardware stack levels used: 1
  3556 ;; Hardware stack levels required when called: 8
  3557 ;; This function calls:
  3558 ;;		_MOS_vModbudFun3
  3559 ;;		_MOS_vModbudFun6
  3560 ;;		_crc16
  3561 ;; This function is called by:
  3562 ;;		_main
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           
  3567                           ;psect for function _MOS_vModBusHandler
  3568  047C                     _MOS_vModBusHandler:
  3569  047C                     l1670:	
  3570                           ;incstack = 0
  3571                           ; Regs used in _MOS_vModBusHandler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3572                           
  3573                           
  3574                           ;Modbus_uart/Modbus.c: 113:  uint16_t u16CalculateCRC;;Modbus_uart/Modbus.c: 114:  uint1
      +                          6_t u16ReceivedCRC;;Modbus_uart/Modbus.c: 116:  uint8_t u16ReceivedAddress;;Modbus_uart/
      +                          Modbus.c: 117:  uint8_t u16ReceivedFunctionCode;;Modbus_uart/Modbus.c: 118:  if(0 == MOS
      +                          _tModbusData.u8OneFrameFinish)
  3575  047C  30F8               	movlw	248
  3576  047D  0086               	movwf	6
  3577  047E  3020               	movlw	32
  3578  047F  0087               	movwf	7
  3579  0480  0801               	movf	1,w
  3580  0481  1D03               	btfss	3,2
  3581  0482  2C84               	goto	u441
  3582  0483  2C85               	goto	u440
  3583  0484                     u441:
  3584  0484  2C86               	goto	l1674
  3585  0485                     u440:
  3586  0485  2D2B               	goto	l365
  3587  0486                     l1674:
  3588                           
  3589                           ;Modbus_uart/Modbus.c: 123:  u16ReceivedAddress = MOS_tModbusData.auReceiveBuff[0];
  3590  0486  3094               	movlw	148
  3591  0487  0086               	movwf	6
  3592  0488  3020               	movlw	32
  3593  0489  0087               	movwf	7
  3594  048A  0801               	movf	1,w
  3595  048B  0020               	movlb	0	; select bank0
  3596  048C  00C5               	movwf	??_MOS_vModBusHandler
  3597  048D  0845               	movf	??_MOS_vModBusHandler,w
  3598  048E  00D1               	movwf	MOS_vModBusHandler@u16ReceivedAddress
  3599                           
  3600                           ;Modbus_uart/Modbus.c: 124:  u16ReceivedFunctionCode = MOS_tModbusData.auReceiveBuff[1];
  3601  048F  3094               	movlw	148
  3602  0490  0086               	movwf	6
  3603  0491  3020               	movlw	32
  3604  0492  0087               	movwf	7
  3605  0493  3141               	addfsr 1,1
  3606  0494  0801               	movf	1,w
  3607  0495  00C5               	movwf	??_MOS_vModBusHandler
  3608  0496  0845               	movf	??_MOS_vModBusHandler,w
  3609  0497  00CE               	movwf	MOS_vModBusHandler@u16ReceivedFunctionCode
  3610  0498                     l1676:
  3611                           
  3612                           ;Modbus_uart/Modbus.c: 126:  u16CalculateCRC= crc16(&MOS_tModbusData.auReceiveBuff[0], M
      +                          OS_tModbusData.u8ReceivedByteCount-2);
  3613  0498  3094               	movlw	148
  3614  0499  00A0               	movwf	crc16@puchMsg
  3615  049A  3020               	movlw	32
  3616  049B  00A1               	movwf	crc16@puchMsg+1
  3617  049C  30F9               	movlw	249
  3618  049D  0086               	movwf	6
  3619  049E  3020               	movlw	32
  3620  049F  0087               	movwf	7
  3621  04A0  0801               	movf	1,w
  3622  04A1  3EFE               	addlw	254
  3623  04A2  00A2               	movwf	crc16@usDataLen
  3624  04A3  30FF               	movlw	255
  3625  04A4  1803               	skipnc
  3626  04A5  3000               	movlw	0
  3627  04A6  00A3               	movwf	crc16@usDataLen+1
  3628  04A7  3185  2582  3184   	fcall	_crc16
  3629  04AA  0020               	movlb	0	; select bank0
  3630  04AB  0821               	movf	?_crc16+1,w
  3631  04AC  00CD               	movwf	MOS_vModBusHandler@u16CalculateCRC+1
  3632  04AD  0820               	movf	?_crc16,w
  3633  04AE  00CC               	movwf	MOS_vModBusHandler@u16CalculateCRC
  3634  04AF                     l1678:
  3635                           
  3636                           ;Modbus_uart/Modbus.c: 128:    u16ReceivedCRC= (MOS_tModbusData.auReceiveBuff[MOS_tModbu
      +                          sData.u8ReceivedByteCount-2]*256);
  3637  04AF  30F9               	movlw	249
  3638  04B0  0086               	movwf	6
  3639  04B1  3020               	movlw	32
  3640  04B2  0087               	movwf	7
  3641  04B3  0801               	movf	1,w
  3642  04B4  00C5               	movwf	??_MOS_vModBusHandler
  3643  04B5  01C6               	clrf	??_MOS_vModBusHandler+1
  3644  04B6  3092               	movlw	146
  3645  04B7  00C7               	movwf	??_MOS_vModBusHandler+2
  3646  04B8  3020               	movlw	32
  3647  04B9  00C8               	movwf	??_MOS_vModBusHandler+3
  3648  04BA  0845               	movf	??_MOS_vModBusHandler,w
  3649  04BB  0747               	addwf	??_MOS_vModBusHandler+2,w
  3650  04BC  0086               	movwf	6
  3651  04BD  0846               	movf	??_MOS_vModBusHandler+1,w
  3652  04BE  3D48               	addwfc	??_MOS_vModBusHandler+3,w
  3653  04BF  0087               	movwf	7
  3654  04C0  0801               	movf	1,w
  3655  04C1  00C9               	movwf	??_MOS_vModBusHandler+4
  3656  04C2  01CA               	clrf	??_MOS_vModBusHandler+5
  3657  04C3  0849               	movf	??_MOS_vModBusHandler+4,w
  3658  04C4  00CA               	movwf	??_MOS_vModBusHandler+5
  3659  04C5  01C9               	clrf	??_MOS_vModBusHandler+4
  3660  04C6  0849               	movf	??_MOS_vModBusHandler+4,w
  3661  04C7  00CF               	movwf	MOS_vModBusHandler@u16ReceivedCRC
  3662  04C8  084A               	movf	??_MOS_vModBusHandler+5,w
  3663  04C9  00D0               	movwf	MOS_vModBusHandler@u16ReceivedCRC+1
  3664  04CA                     l1680:
  3665                           
  3666                           ;Modbus_uart/Modbus.c: 129:  u16ReceivedCRC = u16ReceivedCRC + MOS_tModbusData.auReceive
      +                          Buff[MOS_tModbusData.u8ReceivedByteCount -1];
  3667  04CA  30F9               	movlw	249
  3668  04CB  0086               	movwf	6
  3669  04CC  3020               	movlw	32
  3670  04CD  0087               	movwf	7
  3671  04CE  0801               	movf	1,w
  3672  04CF  00C5               	movwf	??_MOS_vModBusHandler
  3673  04D0  01C6               	clrf	??_MOS_vModBusHandler+1
  3674  04D1  3093               	movlw	147
  3675  04D2  00C7               	movwf	??_MOS_vModBusHandler+2
  3676  04D3  3020               	movlw	32
  3677  04D4  00C8               	movwf	??_MOS_vModBusHandler+3
  3678  04D5  0845               	movf	??_MOS_vModBusHandler,w
  3679  04D6  0747               	addwf	??_MOS_vModBusHandler+2,w
  3680  04D7  0086               	movwf	6
  3681  04D8  0846               	movf	??_MOS_vModBusHandler+1,w
  3682  04D9  3D48               	addwfc	??_MOS_vModBusHandler+3,w
  3683  04DA  0087               	movwf	7
  3684  04DB  0801               	movf	1,w
  3685  04DC  074F               	addwf	MOS_vModBusHandler@u16ReceivedCRC,w
  3686  04DD  00C9               	movwf	??_MOS_vModBusHandler+4
  3687  04DE  0850               	movf	MOS_vModBusHandler@u16ReceivedCRC+1,w
  3688  04DF  1803               	skipnc
  3689  04E0  0A50               	incf	MOS_vModBusHandler@u16ReceivedCRC+1,w
  3690  04E1  00CA               	movwf	??_MOS_vModBusHandler+5
  3691  04E2  0849               	movf	??_MOS_vModBusHandler+4,w
  3692  04E3  00CF               	movwf	MOS_vModBusHandler@u16ReceivedCRC
  3693  04E4  084A               	movf	??_MOS_vModBusHandler+5,w
  3694  04E5  00D0               	movwf	MOS_vModBusHandler@u16ReceivedCRC+1
  3695  04E6                     l1682:
  3696                           
  3697                           ;Modbus_uart/Modbus.c: 130:    if(u16CalculateCRC == u16ReceivedCRC)
  3698  04E6  0850               	movf	MOS_vModBusHandler@u16ReceivedCRC+1,w
  3699  04E7  064D               	xorwf	MOS_vModBusHandler@u16CalculateCRC+1,w
  3700  04E8  1D03               	skipz
  3701  04E9  2CEC               	goto	u455
  3702  04EA  084F               	movf	MOS_vModBusHandler@u16ReceivedCRC,w
  3703  04EB  064C               	xorwf	MOS_vModBusHandler@u16CalculateCRC,w
  3704  04EC                     u455:
  3705  04EC  1D03               	skipz
  3706  04ED  2CEF               	goto	u451
  3707  04EE  2CF0               	goto	u450
  3708  04EF                     u451:
  3709  04EF  2D21               	goto	l1698
  3710  04F0                     u450:
  3711  04F0                     l1684:
  3712                           
  3713                           ;Modbus_uart/Modbus.c: 131:  {;Modbus_uart/Modbus.c: 132:    if(u16ReceivedAddress == MO
      +                          S_tModbusPara.u8DeviceAddress)
  3714  04F0  0860               	movf	_MOS_tModbusPara,w
  3715  04F1  0651               	xorwf	MOS_vModBusHandler@u16ReceivedAddress,w
  3716  04F2  1D03               	skipz
  3717  04F3  2CF5               	goto	u461
  3718  04F4  2CF6               	goto	u460
  3719  04F5                     u461:
  3720  04F5  2D21               	goto	l1698
  3721  04F6                     u460:
  3722  04F6  2CFF               	goto	l1694
  3723  04F7                     l1688:
  3724  04F7  3180  205D  3184   	fcall	_MOS_vModbudFun3
  3725  04FA  2D21               	goto	l1698
  3726  04FB                     l1690:
  3727  04FB  3181  217B  3184   	fcall	_MOS_vModbudFun6
  3728  04FE  2D21               	goto	l1698
  3729  04FF                     l1694:
  3730  04FF  084E               	movf	MOS_vModBusHandler@u16ReceivedFunctionCode,w
  3731  0500  00C5               	movwf	??_MOS_vModBusHandler
  3732  0501  01C6               	clrf	??_MOS_vModBusHandler+1
  3733                           
  3734                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3735                           ; Switch size 1, requested type "simple"
  3736                           ; Number of cases is 1, Range of values is 0 to 0
  3737                           ; switch strategies available:
  3738                           ; Name         Instructions Cycles
  3739                           ; simple_byte            4     3 (average)
  3740                           ; direct_byte            8     6 (fixed)
  3741                           ; jumptable            260     6 (fixed)
  3742                           ;	Chosen strategy is simple_byte
  3743  0502  0846               	movf	??_MOS_vModBusHandler+1,w
  3744  0503  3A00               	xorlw	0	; case 0
  3745  0504  1903               	skipnz
  3746  0505  2D07               	goto	l1752
  3747  0506  2D21               	goto	l1698
  3748  0507                     l1752:
  3749                           
  3750                           ; Switch size 1, requested type "simple"
  3751                           ; Number of cases is 8, Range of values is 0 to 7
  3752                           ; switch strategies available:
  3753                           ; Name         Instructions Cycles
  3754                           ; direct_byte           22     6 (fixed)
  3755                           ; simple_byte           25    13 (average)
  3756                           ; jumptable            260     6 (fixed)
  3757                           ;	Chosen strategy is simple_byte
  3758  0507  0845               	movf	??_MOS_vModBusHandler,w
  3759  0508  3A00               	xorlw	0	; case 0
  3760  0509  1903               	skipnz
  3761  050A  2D21               	goto	l378
  3762  050B  3A01               	xorlw	1	; case 1
  3763  050C  1903               	skipnz
  3764  050D  2D21               	goto	l378
  3765  050E  3A03               	xorlw	3	; case 2
  3766  050F  1903               	skipnz
  3767  0510  2D21               	goto	l378
  3768  0511  3A01               	xorlw	1	; case 3
  3769  0512  1903               	skipnz
  3770  0513  2CF7               	goto	l1688
  3771  0514  3A07               	xorlw	7	; case 4
  3772  0515  1903               	skipnz
  3773  0516  2D21               	goto	l378
  3774  0517  3A01               	xorlw	1	; case 5
  3775  0518  1903               	skipnz
  3776  0519  2D21               	goto	l378
  3777  051A  3A03               	xorlw	3	; case 6
  3778  051B  1903               	skipnz
  3779  051C  2CFB               	goto	l1690
  3780  051D  3A01               	xorlw	1	; case 7
  3781  051E  1903               	skipnz
  3782  051F  2D21               	goto	l378
  3783  0520  2D21               	goto	l1698
  3784  0521                     l378:
  3785  0521                     l1698:
  3786                           
  3787                           ;Modbus_uart/Modbus.c: 152:  MOS_tModbusData.u8ReceivedByteCount = 0;
  3788  0521  30F9               	movlw	249
  3789  0522  0086               	movwf	6
  3790  0523  3020               	movlw	32
  3791  0524  0087               	movwf	7
  3792  0525  0181               	clrf	1
  3793                           
  3794                           ;Modbus_uart/Modbus.c: 153:     MOS_tModbusData.u8OneFrameFinish = 0;
  3795  0526  30F8               	movlw	248
  3796  0527  0086               	movwf	6
  3797  0528  3020               	movlw	32
  3798  0529  0087               	movwf	7
  3799  052A  0181               	clrf	1
  3800  052B                     l365:
  3801  052B  0008               	return
  3802  052C                     __end_of_MOS_vModBusHandler:
  3803                           
  3804                           	psect	text16
  3805  017B                     __ptext16:	
  3806 ;; *************** function _MOS_vModbudFun6 *****************
  3807 ;; Defined at:
  3808 ;;		line 70 in file "Modbus_uart/Modbus.c"
  3809 ;; Parameters:    Size  Location     Type
  3810 ;;		None
  3811 ;; Auto vars:     Size  Location     Type
  3812 ;;  i               2   28[BANK0 ] unsigned short 
  3813 ;;  u16value        2   26[BANK0 ] unsigned short 
  3814 ;;  u16RegisterA    2   24[BANK0 ] unsigned short 
  3815 ;;  j               2   22[BANK0 ] unsigned short 
  3816 ;;  u16TransmitC    2   20[BANK0 ] unsigned short 
  3817 ;; Return value:  Size  Location     Type
  3818 ;;                  1    wreg      void 
  3819 ;; Registers used:
  3820 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3821 ;; Tracked objects:
  3822 ;;		On entry : 0/0
  3823 ;;		On exit  : 0/0
  3824 ;;		Unchanged: 0/0
  3825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  3826 ;;      Params:         0       0       0       0       0       0
  3827 ;;      Locals:         0      10       0       0       0       0
  3828 ;;      Temps:          0       5       0       0       0       0
  3829 ;;      Totals:         0      15       0       0       0       0
  3830 ;;Total ram usage:       15 bytes
  3831 ;; Hardware stack levels used: 1
  3832 ;; Hardware stack levels required when called: 7
  3833 ;; This function calls:
  3834 ;;		_EUSART_Write
  3835 ;;		_MOS_vModbusReceiveEnalbe
  3836 ;;		_MOS_vModbusTransmitEnalbe
  3837 ;;		_crc16
  3838 ;; This function is called by:
  3839 ;;		_MOS_vModBusHandler
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           
  3844                           ;psect for function _MOS_vModbudFun6
  3845  017B                     _MOS_vModbudFun6:
  3846  017B                     l1580:	
  3847                           ;incstack = 0
  3848                           ; Regs used in _MOS_vModbudFun6: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3849                           
  3850                           
  3851                           ;Modbus_uart/Modbus.c: 73:  uint16_t u16value = 0;
  3852  017B  0020               	movlb	0	; select bank0
  3853  017C  01BA               	clrf	MOS_vModbudFun6@u16value
  3854  017D  01BB               	clrf	MOS_vModbudFun6@u16value+1
  3855                           
  3856                           ;Modbus_uart/Modbus.c: 74:  uint16_t i = 0;
  3857  017E  01BC               	clrf	MOS_vModbudFun6@i
  3858  017F  01BD               	clrf	MOS_vModbudFun6@i+1
  3859                           
  3860                           ;Modbus_uart/Modbus.c: 75:  uint16_t u16TransmitCRC = 0;
  3861  0180  01B4               	clrf	MOS_vModbudFun6@u16TransmitCRC
  3862  0181  01B5               	clrf	MOS_vModbudFun6@u16TransmitCRC+1
  3863                           
  3864                           ;Modbus_uart/Modbus.c: 76:  uint16_t j = 0;
  3865  0182  01B6               	clrf	MOS_vModbudFun6@j
  3866  0183  01B7               	clrf	MOS_vModbudFun6@j+1
  3867  0184                     l1582:
  3868                           
  3869                           ;Modbus_uart/Modbus.c: 78:    u16RegisterAdd=MOS_tModbusData.auReceiveBuff[2]*256+MOS_tM
      +                          odbusData.auReceiveBuff[3];
  3870  0184  3094               	movlw	148
  3871  0185  0086               	movwf	6
  3872  0186  3020               	movlw	32
  3873  0187  0087               	movwf	7
  3874  0188  3143               	addfsr 1,3
  3875  0189  3094               	movlw	148
  3876  018A  0084               	movwf	4
  3877  018B  3020               	movlw	32
  3878  018C  0085               	movwf	5
  3879  018D  3102               	addfsr 0,2
  3880  018E  0800               	movf	0,w
  3881  018F  00B9               	movwf	MOS_vModbudFun6@u16RegisterAdd+1
  3882  0190  0801               	movf	1,w
  3883  0191  00B8               	movwf	MOS_vModbudFun6@u16RegisterAdd
  3884  0192                     l1584:
  3885                           
  3886                           ;Modbus_uart/Modbus.c: 79:  u16value=MOS_tModbusData.auReceiveBuff[4]*256+MOS_tModbusDat
      +                          a.auReceiveBuff[5];
  3887  0192  3094               	movlw	148
  3888  0193  0086               	movwf	6
  3889  0194  3020               	movlw	32
  3890  0195  0087               	movwf	7
  3891  0196  3145               	addfsr 1,5
  3892  0197  3094               	movlw	148
  3893  0198  0084               	movwf	4
  3894  0199  3020               	movlw	32
  3895  019A  0085               	movwf	5
  3896  019B  3104               	addfsr 0,4
  3897  019C  0800               	movf	0,w
  3898  019D  00BB               	movwf	MOS_vModbudFun6@u16value+1
  3899  019E  0801               	movf	1,w
  3900  019F  00BA               	movwf	MOS_vModbudFun6@u16value
  3901  01A0                     l1586:
  3902                           
  3903                           ;Modbus_uart/Modbus.c: 80:  Reg[u16RegisterAdd]=u16value;
  3904  01A0  3538               	lslf	MOS_vModbudFun6@u16RegisterAdd,w
  3905  01A1  3EA0               	addlw	(low (_Reg| 0))& (0+255)
  3906  01A2  0086               	movwf	6
  3907  01A3  0187               	clrf	7
  3908  01A4  083A               	movf	MOS_vModbudFun6@u16value,w
  3909  01A5  3FC0               	movwi [0]fsr1
  3910  01A6  083B               	movf	MOS_vModbudFun6@u16value+1,w
  3911  01A7  3FC1               	movwi [1]fsr1
  3912  01A8                     l1588:
  3913                           
  3914                           ;Modbus_uart/Modbus.c: 84:  MOS_tModbusData.auTransmitBuff[i++]=MOS_tModbusPara.u8Device
      +                          Address;
  3915  01A8  30FB               	movlw	251
  3916  01A9  0086               	movwf	6
  3917  01AA  3020               	movlw	32
  3918  01AB  0087               	movwf	7
  3919  01AC  0860               	movf	_MOS_tModbusPara,w
  3920  01AD  0081               	movwf	1
  3921  01AE                     l1590:
  3922  01AE  3001               	movlw	1
  3923  01AF  07BC               	addwf	MOS_vModbudFun6@i,f
  3924  01B0  3000               	movlw	0
  3925  01B1  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  3926  01B2                     l1592:
  3927                           
  3928                           ;Modbus_uart/Modbus.c: 85:    MOS_tModbusData.auTransmitBuff[i++]=0x06;
  3929  01B2  30FB               	movlw	251
  3930  01B3  00AF               	movwf	??_MOS_vModbudFun6
  3931  01B4  3020               	movlw	32
  3932  01B5  00B0               	movwf	??_MOS_vModbudFun6+1
  3933  01B6  083C               	movf	MOS_vModbudFun6@i,w
  3934  01B7  072F               	addwf	??_MOS_vModbudFun6,w
  3935  01B8  00B1               	movwf	??_MOS_vModbudFun6+2
  3936  01B9  083D               	movf	MOS_vModbudFun6@i+1,w
  3937  01BA  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  3938  01BB  00B2               	movwf	??_MOS_vModbudFun6+3
  3939  01BC  0831               	movf	??_MOS_vModbudFun6+2,w
  3940  01BD  0086               	movwf	6
  3941  01BE  0832               	movf	??_MOS_vModbudFun6+3,w
  3942  01BF  0087               	movwf	7
  3943  01C0  3006               	movlw	6
  3944  01C1  0081               	movwf	1
  3945  01C2                     l1594:
  3946  01C2  3001               	movlw	1
  3947  01C3  07BC               	addwf	MOS_vModbudFun6@i,f
  3948  01C4  3000               	movlw	0
  3949  01C5  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  3950  01C6                     l1596:
  3951                           
  3952                           ;Modbus_uart/Modbus.c: 86:    MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16RegisterA
      +                          dd/256);
  3953  01C6  0839               	movf	MOS_vModbudFun6@u16RegisterAdd+1,w
  3954  01C7  00AF               	movwf	??_MOS_vModbudFun6
  3955  01C8  30FB               	movlw	251
  3956  01C9  00B0               	movwf	??_MOS_vModbudFun6+1
  3957  01CA  3020               	movlw	32
  3958  01CB  00B1               	movwf	??_MOS_vModbudFun6+2
  3959  01CC  083C               	movf	MOS_vModbudFun6@i,w
  3960  01CD  0730               	addwf	??_MOS_vModbudFun6+1,w
  3961  01CE  00B2               	movwf	??_MOS_vModbudFun6+3
  3962  01CF  083D               	movf	MOS_vModbudFun6@i+1,w
  3963  01D0  3D31               	addwfc	??_MOS_vModbudFun6+2,w
  3964  01D1  00B3               	movwf	??_MOS_vModbudFun6+4
  3965  01D2  0832               	movf	??_MOS_vModbudFun6+3,w
  3966  01D3  0086               	movwf	6
  3967  01D4  0833               	movf	??_MOS_vModbudFun6+4,w
  3968  01D5  0087               	movwf	7
  3969  01D6  082F               	movf	??_MOS_vModbudFun6,w
  3970  01D7  0081               	movwf	1
  3971  01D8                     l1598:
  3972  01D8  3001               	movlw	1
  3973  01D9  07BC               	addwf	MOS_vModbudFun6@i,f
  3974  01DA  3000               	movlw	0
  3975  01DB  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  3976  01DC                     l1600:
  3977                           
  3978                           ;Modbus_uart/Modbus.c: 87:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16RegisterAdd
      +                          %256);
  3979  01DC  30FB               	movlw	251
  3980  01DD  00AF               	movwf	??_MOS_vModbudFun6
  3981  01DE  3020               	movlw	32
  3982  01DF  00B0               	movwf	??_MOS_vModbudFun6+1
  3983  01E0  083C               	movf	MOS_vModbudFun6@i,w
  3984  01E1  072F               	addwf	??_MOS_vModbudFun6,w
  3985  01E2  00B1               	movwf	??_MOS_vModbudFun6+2
  3986  01E3  083D               	movf	MOS_vModbudFun6@i+1,w
  3987  01E4  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  3988  01E5  00B2               	movwf	??_MOS_vModbudFun6+3
  3989  01E6  0831               	movf	??_MOS_vModbudFun6+2,w
  3990  01E7  0086               	movwf	6
  3991  01E8  0832               	movf	??_MOS_vModbudFun6+3,w
  3992  01E9  0087               	movwf	7
  3993  01EA  0838               	movf	MOS_vModbudFun6@u16RegisterAdd,w
  3994  01EB  0081               	movwf	1
  3995  01EC                     l1602:
  3996  01EC  3001               	movlw	1
  3997  01ED  07BC               	addwf	MOS_vModbudFun6@i,f
  3998  01EE  3000               	movlw	0
  3999  01EF  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4000  01F0                     l1604:
  4001                           
  4002                           ;Modbus_uart/Modbus.c: 88:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16value/256);
  4003  01F0  083B               	movf	MOS_vModbudFun6@u16value+1,w
  4004  01F1  00AF               	movwf	??_MOS_vModbudFun6
  4005  01F2  30FB               	movlw	251
  4006  01F3  00B0               	movwf	??_MOS_vModbudFun6+1
  4007  01F4  3020               	movlw	32
  4008  01F5  00B1               	movwf	??_MOS_vModbudFun6+2
  4009  01F6  083C               	movf	MOS_vModbudFun6@i,w
  4010  01F7  0730               	addwf	??_MOS_vModbudFun6+1,w
  4011  01F8  00B2               	movwf	??_MOS_vModbudFun6+3
  4012  01F9  083D               	movf	MOS_vModbudFun6@i+1,w
  4013  01FA  3D31               	addwfc	??_MOS_vModbudFun6+2,w
  4014  01FB  00B3               	movwf	??_MOS_vModbudFun6+4
  4015  01FC  0832               	movf	??_MOS_vModbudFun6+3,w
  4016  01FD  0086               	movwf	6
  4017  01FE  0833               	movf	??_MOS_vModbudFun6+4,w
  4018  01FF  0087               	movwf	7
  4019  0200  082F               	movf	??_MOS_vModbudFun6,w
  4020  0201  0081               	movwf	1
  4021  0202                     l1606:
  4022  0202  3001               	movlw	1
  4023  0203  07BC               	addwf	MOS_vModbudFun6@i,f
  4024  0204  3000               	movlw	0
  4025  0205  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4026  0206                     l1608:
  4027                           
  4028                           ;Modbus_uart/Modbus.c: 89:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16value%256);
  4029  0206  30FB               	movlw	251
  4030  0207  00AF               	movwf	??_MOS_vModbudFun6
  4031  0208  3020               	movlw	32
  4032  0209  00B0               	movwf	??_MOS_vModbudFun6+1
  4033  020A  083C               	movf	MOS_vModbudFun6@i,w
  4034  020B  072F               	addwf	??_MOS_vModbudFun6,w
  4035  020C  00B1               	movwf	??_MOS_vModbudFun6+2
  4036  020D  083D               	movf	MOS_vModbudFun6@i+1,w
  4037  020E  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  4038  020F  00B2               	movwf	??_MOS_vModbudFun6+3
  4039  0210  0831               	movf	??_MOS_vModbudFun6+2,w
  4040  0211  0086               	movwf	6
  4041  0212  0832               	movf	??_MOS_vModbudFun6+3,w
  4042  0213  0087               	movwf	7
  4043  0214  083A               	movf	MOS_vModbudFun6@u16value,w
  4044  0215  0081               	movwf	1
  4045  0216                     l1610:
  4046  0216  3001               	movlw	1
  4047  0217  07BC               	addwf	MOS_vModbudFun6@i,f
  4048  0218  3000               	movlw	0
  4049  0219  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4050  021A                     l1612:
  4051                           
  4052                           ;Modbus_uart/Modbus.c: 90:  u16TransmitCRC=crc16(MOS_tModbusData.auTransmitBuff,i);
  4053  021A  30FB               	movlw	251
  4054  021B  00A0               	movwf	crc16@puchMsg
  4055  021C  3020               	movlw	32
  4056  021D  00A1               	movwf	crc16@puchMsg+1
  4057  021E  083D               	movf	MOS_vModbudFun6@i+1,w
  4058  021F  00A3               	movwf	crc16@usDataLen+1
  4059  0220  083C               	movf	MOS_vModbudFun6@i,w
  4060  0221  00A2               	movwf	crc16@usDataLen
  4061  0222  3185  2582  3181   	fcall	_crc16
  4062  0225  0020               	movlb	0	; select bank0
  4063  0226  0821               	movf	?_crc16+1,w
  4064  0227  00B5               	movwf	MOS_vModbudFun6@u16TransmitCRC+1
  4065  0228  0820               	movf	?_crc16,w
  4066  0229  00B4               	movwf	MOS_vModbudFun6@u16TransmitCRC
  4067  022A                     l1614:
  4068                           
  4069                           ;Modbus_uart/Modbus.c: 91:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransmitCRC
      +                          /256);
  4070  022A  0835               	movf	MOS_vModbudFun6@u16TransmitCRC+1,w
  4071  022B  00AF               	movwf	??_MOS_vModbudFun6
  4072  022C  30FB               	movlw	251
  4073  022D  00B0               	movwf	??_MOS_vModbudFun6+1
  4074  022E  3020               	movlw	32
  4075  022F  00B1               	movwf	??_MOS_vModbudFun6+2
  4076  0230  083C               	movf	MOS_vModbudFun6@i,w
  4077  0231  0730               	addwf	??_MOS_vModbudFun6+1,w
  4078  0232  00B2               	movwf	??_MOS_vModbudFun6+3
  4079  0233  083D               	movf	MOS_vModbudFun6@i+1,w
  4080  0234  3D31               	addwfc	??_MOS_vModbudFun6+2,w
  4081  0235  00B3               	movwf	??_MOS_vModbudFun6+4
  4082  0236  0832               	movf	??_MOS_vModbudFun6+3,w
  4083  0237  0086               	movwf	6
  4084  0238  0833               	movf	??_MOS_vModbudFun6+4,w
  4085  0239  0087               	movwf	7
  4086  023A  082F               	movf	??_MOS_vModbudFun6,w
  4087  023B  0081               	movwf	1
  4088  023C                     l1616:
  4089  023C  3001               	movlw	1
  4090  023D  07BC               	addwf	MOS_vModbudFun6@i,f
  4091  023E  3000               	movlw	0
  4092  023F  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4093  0240                     l1618:
  4094                           
  4095                           ;Modbus_uart/Modbus.c: 92:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransmitCRC
      +                          %256);
  4096  0240  30FB               	movlw	251
  4097  0241  00AF               	movwf	??_MOS_vModbudFun6
  4098  0242  3020               	movlw	32
  4099  0243  00B0               	movwf	??_MOS_vModbudFun6+1
  4100  0244  083C               	movf	MOS_vModbudFun6@i,w
  4101  0245  072F               	addwf	??_MOS_vModbudFun6,w
  4102  0246  00B1               	movwf	??_MOS_vModbudFun6+2
  4103  0247  083D               	movf	MOS_vModbudFun6@i+1,w
  4104  0248  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  4105  0249  00B2               	movwf	??_MOS_vModbudFun6+3
  4106  024A  0831               	movf	??_MOS_vModbudFun6+2,w
  4107  024B  0086               	movwf	6
  4108  024C  0832               	movf	??_MOS_vModbudFun6+3,w
  4109  024D  0087               	movwf	7
  4110  024E  0834               	movf	MOS_vModbudFun6@u16TransmitCRC,w
  4111  024F  0081               	movwf	1
  4112  0250                     l1620:
  4113  0250  3001               	movlw	1
  4114  0251  07BC               	addwf	MOS_vModbudFun6@i,f
  4115  0252  3000               	movlw	0
  4116  0253  3DBD               	addwfc	MOS_vModbudFun6@i+1,f
  4117  0254                     l1622:
  4118                           
  4119                           ;Modbus_uart/Modbus.c: 94:  MOS_vModbusTransmitEnalbe();
  4120  0254  3187  277B  3181   	fcall	_MOS_vModbusTransmitEnalbe
  4121  0257                     l1624:
  4122                           
  4123                           ;Modbus_uart/Modbus.c: 96:  for(j=0;j<i;j++)
  4124  0257  0020               	movlb	0	; select bank0
  4125  0258  01B6               	clrf	MOS_vModbudFun6@j
  4126  0259  01B7               	clrf	MOS_vModbudFun6@j+1
  4127  025A  2A6E               	goto	l1630
  4128  025B                     l1626:
  4129                           
  4130                           ;Modbus_uart/Modbus.c: 97:  {;Modbus_uart/Modbus.c: 98:   EUSART_Write(MOS_tModbusData.a
      +                          uTransmitBuff[j]);
  4131  025B  30FB               	movlw	251
  4132  025C  00AF               	movwf	??_MOS_vModbudFun6
  4133  025D  3020               	movlw	32
  4134  025E  00B0               	movwf	??_MOS_vModbudFun6+1
  4135  025F  0836               	movf	MOS_vModbudFun6@j,w
  4136  0260  072F               	addwf	??_MOS_vModbudFun6,w
  4137  0261  0086               	movwf	6
  4138  0262  0837               	movf	MOS_vModbudFun6@j+1,w
  4139  0263  3D30               	addwfc	??_MOS_vModbudFun6+1,w
  4140  0264  0087               	movwf	7
  4141  0265  0801               	movf	1,w
  4142  0266  3186  26D9  3181   	fcall	_EUSART_Write
  4143  0269                     l1628:
  4144                           
  4145                           ;Modbus_uart/Modbus.c: 99:  }
  4146  0269  3001               	movlw	1
  4147  026A  0020               	movlb	0	; select bank0
  4148  026B  07B6               	addwf	MOS_vModbudFun6@j,f
  4149  026C  3000               	movlw	0
  4150  026D  3DB7               	addwfc	MOS_vModbudFun6@j+1,f
  4151  026E                     l1630:
  4152  026E  083D               	movf	MOS_vModbudFun6@i+1,w
  4153  026F  0237               	subwf	MOS_vModbudFun6@j+1,w
  4154  0270  1D03               	skipz
  4155  0271  2A74               	goto	u395
  4156  0272  083C               	movf	MOS_vModbudFun6@i,w
  4157  0273  0236               	subwf	MOS_vModbudFun6@j,w
  4158  0274                     u395:
  4159  0274  1C03               	skipc
  4160  0275  2A77               	goto	u391
  4161  0276  2A78               	goto	u390
  4162  0277                     u391:
  4163  0277  2A5B               	goto	l1626
  4164  0278                     u390:
  4165  0278                     l1632:
  4166                           
  4167                           ;Modbus_uart/Modbus.c: 108:  MOS_vModbusReceiveEnalbe();
  4168  0278  3187  277E  3181   	fcall	_MOS_vModbusReceiveEnalbe
  4169  027B                     l361:
  4170  027B  0008               	return
  4171  027C                     __end_of_MOS_vModbudFun6:
  4172                           
  4173                           	psect	text17
  4174  005D                     __ptext17:	
  4175 ;; *************** function _MOS_vModbudFun3 *****************
  4176 ;; Defined at:
  4177 ;;		line 33 in file "Modbus_uart/Modbus.c"
  4178 ;; Parameters:    Size  Location     Type
  4179 ;;		None
  4180 ;; Auto vars:     Size  Location     Type
  4181 ;;  i               2   35[BANK0 ] unsigned short 
  4182 ;;  j               2   33[BANK0 ] unsigned short 
  4183 ;;  u16TransmitC    2   31[BANK0 ] unsigned short 
  4184 ;;  u16RegisterL    2   29[BANK0 ] unsigned short 
  4185 ;;  u16RegisterA    2   27[BANK0 ] unsigned short 
  4186 ;;  u16TransData    2   25[BANK0 ] unsigned short 
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : 0/0
  4193 ;;		On exit  : 0/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4196 ;;      Params:         0       0       0       0       0       0
  4197 ;;      Locals:         0      12       0       0       0       0
  4198 ;;      Temps:          0      10       0       0       0       0
  4199 ;;      Totals:         0      22       0       0       0       0
  4200 ;;Total ram usage:       22 bytes
  4201 ;; Hardware stack levels used: 1
  4202 ;; Hardware stack levels required when called: 7
  4203 ;; This function calls:
  4204 ;;		_EUSART_Write
  4205 ;;		_MOS_vModbusReceiveEnalbe
  4206 ;;		_MOS_vModbusTransmitEnalbe
  4207 ;;		_crc16
  4208 ;; This function is called by:
  4209 ;;		_MOS_vModBusHandler
  4210 ;; This function uses a non-reentrant model
  4211 ;;
  4212                           
  4213                           
  4214                           ;psect for function _MOS_vModbudFun3
  4215  005D                     _MOS_vModbudFun3:
  4216  005D                     l1530:	
  4217                           ;incstack = 0
  4218                           ; Regs used in _MOS_vModbudFun3: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4219                           
  4220                           
  4221                           ;Modbus_uart/Modbus.c: 36:  uint16_t u16RegisterLen = 0;
  4222  005D  0020               	movlb	0	; select bank0
  4223  005E  01BD               	clrf	MOS_vModbudFun3@u16RegisterLen
  4224  005F  01BE               	clrf	MOS_vModbudFun3@u16RegisterLen+1
  4225                           
  4226                           ;Modbus_uart/Modbus.c: 37:  uint16_t u16TransDataLen = 0;
  4227  0060  01B9               	clrf	MOS_vModbudFun3@u16TransDataLen
  4228  0061  01BA               	clrf	MOS_vModbudFun3@u16TransDataLen+1
  4229                           
  4230                           ;Modbus_uart/Modbus.c: 38:  uint16_t i = 0;
  4231  0062  01C3               	clrf	MOS_vModbudFun3@i
  4232  0063  01C4               	clrf	MOS_vModbudFun3@i+1
  4233                           
  4234                           ;Modbus_uart/Modbus.c: 39:  uint16_t j = 0;
  4235  0064  01C1               	clrf	MOS_vModbudFun3@j
  4236  0065  01C2               	clrf	MOS_vModbudFun3@j+1
  4237                           
  4238                           ;Modbus_uart/Modbus.c: 40:  uint16_t u16TransmitCRC = 0;
  4239  0066  01BF               	clrf	MOS_vModbudFun3@u16TransmitCRC
  4240  0067  01C0               	clrf	MOS_vModbudFun3@u16TransmitCRC+1
  4241  0068                     l1532:
  4242                           
  4243                           ;Modbus_uart/Modbus.c: 42:  u16RegisterAdd=MOS_tModbusData.auReceiveBuff[2]*256+MOS_tMod
      +                          busData.auReceiveBuff[3];
  4244  0068  3094               	movlw	148
  4245  0069  0086               	movwf	6
  4246  006A  3020               	movlw	32
  4247  006B  0087               	movwf	7
  4248  006C  3143               	addfsr 1,3
  4249  006D  3094               	movlw	148
  4250  006E  0084               	movwf	4
  4251  006F  3020               	movlw	32
  4252  0070  0085               	movwf	5
  4253  0071  3102               	addfsr 0,2
  4254  0072  0800               	movf	0,w
  4255  0073  00BC               	movwf	MOS_vModbudFun3@u16RegisterAdd+1
  4256  0074  0801               	movf	1,w
  4257  0075  00BB               	movwf	MOS_vModbudFun3@u16RegisterAdd
  4258  0076                     l1534:
  4259                           
  4260                           ;Modbus_uart/Modbus.c: 43:  u16RegisterLen=MOS_tModbusData.auReceiveBuff[4]*256+MOS_tMod
      +                          busData.auReceiveBuff[5];
  4261  0076  3094               	movlw	148
  4262  0077  0086               	movwf	6
  4263  0078  3020               	movlw	32
  4264  0079  0087               	movwf	7
  4265  007A  3145               	addfsr 1,5
  4266  007B  3094               	movlw	148
  4267  007C  0084               	movwf	4
  4268  007D  3020               	movlw	32
  4269  007E  0085               	movwf	5
  4270  007F  3104               	addfsr 0,4
  4271  0080  0800               	movf	0,w
  4272  0081  00BE               	movwf	MOS_vModbudFun3@u16RegisterLen+1
  4273  0082  0801               	movf	1,w
  4274  0083  00BD               	movwf	MOS_vModbudFun3@u16RegisterLen
  4275  0084                     l1536:
  4276                           
  4277                           ;Modbus_uart/Modbus.c: 45:  MOS_tModbusData.auTransmitBuff[i++]=MOS_tModbusPara.u8Device
      +                          Address;
  4278  0084  30FB               	movlw	251
  4279  0085  0086               	movwf	6
  4280  0086  3020               	movlw	32
  4281  0087  0087               	movwf	7
  4282  0088  0860               	movf	_MOS_tModbusPara,w
  4283  0089  0081               	movwf	1
  4284  008A                     l1538:
  4285  008A  3001               	movlw	1
  4286  008B  07C3               	addwf	MOS_vModbudFun3@i,f
  4287  008C  3000               	movlw	0
  4288  008D  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4289  008E                     l1540:
  4290                           
  4291                           ;Modbus_uart/Modbus.c: 46:     MOS_tModbusData.auTransmitBuff[i++]=0x03;
  4292  008E  30FB               	movlw	251
  4293  008F  00AF               	movwf	??_MOS_vModbudFun3
  4294  0090  3020               	movlw	32
  4295  0091  00B0               	movwf	??_MOS_vModbudFun3+1
  4296  0092  0843               	movf	MOS_vModbudFun3@i,w
  4297  0093  072F               	addwf	??_MOS_vModbudFun3,w
  4298  0094  00B1               	movwf	??_MOS_vModbudFun3+2
  4299  0095  0844               	movf	MOS_vModbudFun3@i+1,w
  4300  0096  3D30               	addwfc	??_MOS_vModbudFun3+1,w
  4301  0097  00B2               	movwf	??_MOS_vModbudFun3+3
  4302  0098  0831               	movf	??_MOS_vModbudFun3+2,w
  4303  0099  0086               	movwf	6
  4304  009A  0832               	movf	??_MOS_vModbudFun3+3,w
  4305  009B  0087               	movwf	7
  4306  009C  3003               	movlw	3
  4307  009D  0081               	movwf	1
  4308  009E                     l1542:
  4309  009E  3001               	movlw	1
  4310  009F  07C3               	addwf	MOS_vModbudFun3@i,f
  4311  00A0  3000               	movlw	0
  4312  00A1  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4313  00A2                     l1544:
  4314                           
  4315                           ;Modbus_uart/Modbus.c: 47:    u16TransDataLen=u16RegisterLen*2;
  4316  00A2  353D               	lslf	MOS_vModbudFun3@u16RegisterLen,w
  4317  00A3  00B9               	movwf	MOS_vModbudFun3@u16TransDataLen
  4318  00A4  0D3E               	rlf	MOS_vModbudFun3@u16RegisterLen+1,w
  4319  00A5  00BA               	movwf	MOS_vModbudFun3@u16TransDataLen+1
  4320  00A6                     l1546:
  4321                           
  4322                           ;Modbus_uart/Modbus.c: 49:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransDataLe
      +                          n%256);
  4323  00A6  30FB               	movlw	251
  4324  00A7  00AF               	movwf	??_MOS_vModbudFun3
  4325  00A8  3020               	movlw	32
  4326  00A9  00B0               	movwf	??_MOS_vModbudFun3+1
  4327  00AA  0843               	movf	MOS_vModbudFun3@i,w
  4328  00AB  072F               	addwf	??_MOS_vModbudFun3,w
  4329  00AC  00B1               	movwf	??_MOS_vModbudFun3+2
  4330  00AD  0844               	movf	MOS_vModbudFun3@i+1,w
  4331  00AE  3D30               	addwfc	??_MOS_vModbudFun3+1,w
  4332  00AF  00B2               	movwf	??_MOS_vModbudFun3+3
  4333  00B0  0831               	movf	??_MOS_vModbudFun3+2,w
  4334  00B1  0086               	movwf	6
  4335  00B2  0832               	movf	??_MOS_vModbudFun3+3,w
  4336  00B3  0087               	movwf	7
  4337  00B4  0839               	movf	MOS_vModbudFun3@u16TransDataLen,w
  4338  00B5  0081               	movwf	1
  4339  00B6                     l1548:
  4340  00B6  3001               	movlw	1
  4341  00B7  07C3               	addwf	MOS_vModbudFun3@i,f
  4342  00B8  3000               	movlw	0
  4343  00B9  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4344  00BA                     l1550:
  4345                           
  4346                           ;Modbus_uart/Modbus.c: 51:  for(j=0;j<u16RegisterLen;j++)
  4347  00BA  01C1               	clrf	MOS_vModbudFun3@j
  4348  00BB  01C2               	clrf	MOS_vModbudFun3@j+1
  4349  00BC  290F               	goto	l349
  4350  00BD                     l1552:
  4351                           
  4352                           ;Modbus_uart/Modbus.c: 52:  {;Modbus_uart/Modbus.c: 53:         MOS_tModbusData.auTransm
      +                          itBuff[i++]=(uint8_t)(Reg[u16RegisterAdd+j]/256);
  4353  00BD  083B               	movf	MOS_vModbudFun3@u16RegisterAdd,w
  4354  00BE  00AF               	movwf	??_MOS_vModbudFun3
  4355  00BF  3001               	movlw	1
  4356  00C0                     u355:
  4357  00C0  35AF               	lslf	??_MOS_vModbudFun3,f
  4358  00C1  0B89               	decfsz	9,f
  4359  00C2  28C0               	goto	u355
  4360  00C3  30A0               	movlw	(low (_Reg| 0))& (0+255)
  4361  00C4  072F               	addwf	??_MOS_vModbudFun3,w
  4362  00C5  00B0               	movwf	??_MOS_vModbudFun3+1
  4363  00C6  3541               	lslf	MOS_vModbudFun3@j,w
  4364  00C7  0730               	addwf	??_MOS_vModbudFun3+1,w
  4365  00C8  00B1               	movwf	??_MOS_vModbudFun3+2
  4366  00C9  0831               	movf	??_MOS_vModbudFun3+2,w
  4367  00CA  0086               	movwf	6
  4368  00CB  0187               	clrf	7
  4369  00CC  3F40               	moviw [0]fsr1
  4370  00CD  00B2               	movwf	??_MOS_vModbudFun3+3
  4371  00CE  3F41               	moviw [1]fsr1
  4372  00CF  00B3               	movwf	??_MOS_vModbudFun3+4
  4373  00D0  0833               	movf	??_MOS_vModbudFun3+4,w
  4374  00D1  00B4               	movwf	??_MOS_vModbudFun3+5
  4375  00D2  30FB               	movlw	251
  4376  00D3  00B5               	movwf	??_MOS_vModbudFun3+6
  4377  00D4  3020               	movlw	32
  4378  00D5  00B6               	movwf	??_MOS_vModbudFun3+7
  4379  00D6  0843               	movf	MOS_vModbudFun3@i,w
  4380  00D7  0735               	addwf	??_MOS_vModbudFun3+6,w
  4381  00D8  00B7               	movwf	??_MOS_vModbudFun3+8
  4382  00D9  0844               	movf	MOS_vModbudFun3@i+1,w
  4383  00DA  3D36               	addwfc	??_MOS_vModbudFun3+7,w
  4384  00DB  00B8               	movwf	??_MOS_vModbudFun3+9
  4385  00DC  0837               	movf	??_MOS_vModbudFun3+8,w
  4386  00DD  0086               	movwf	6
  4387  00DE  0838               	movf	??_MOS_vModbudFun3+9,w
  4388  00DF  0087               	movwf	7
  4389  00E0  0834               	movf	??_MOS_vModbudFun3+5,w
  4390  00E1  0081               	movwf	1
  4391  00E2                     l1554:
  4392  00E2  3001               	movlw	1
  4393  00E3  07C3               	addwf	MOS_vModbudFun3@i,f
  4394  00E4  3000               	movlw	0
  4395  00E5  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4396  00E6                     l1556:
  4397                           
  4398                           ;Modbus_uart/Modbus.c: 54:   MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(Reg[u16Regist
      +                          erAdd+j]%256);
  4399  00E6  083B               	movf	MOS_vModbudFun3@u16RegisterAdd,w
  4400  00E7  00AF               	movwf	??_MOS_vModbudFun3
  4401  00E8  3001               	movlw	1
  4402  00E9                     u365:
  4403  00E9  35AF               	lslf	??_MOS_vModbudFun3,f
  4404  00EA  0B89               	decfsz	9,f
  4405  00EB  28E9               	goto	u365
  4406  00EC  30A0               	movlw	(low (_Reg| 0))& (0+255)
  4407  00ED  072F               	addwf	??_MOS_vModbudFun3,w
  4408  00EE  00B0               	movwf	??_MOS_vModbudFun3+1
  4409  00EF  3541               	lslf	MOS_vModbudFun3@j,w
  4410  00F0  0730               	addwf	??_MOS_vModbudFun3+1,w
  4411  00F1  00B1               	movwf	??_MOS_vModbudFun3+2
  4412  00F2  0831               	movf	??_MOS_vModbudFun3+2,w
  4413  00F3  0086               	movwf	6
  4414  00F4  0187               	clrf	7
  4415  00F5  0801               	movf	1,w
  4416  00F6  00B2               	movwf	??_MOS_vModbudFun3+3
  4417  00F7  30FB               	movlw	251
  4418  00F8  00B3               	movwf	??_MOS_vModbudFun3+4
  4419  00F9  3020               	movlw	32
  4420  00FA  00B4               	movwf	??_MOS_vModbudFun3+5
  4421  00FB  0843               	movf	MOS_vModbudFun3@i,w
  4422  00FC  0733               	addwf	??_MOS_vModbudFun3+4,w
  4423  00FD  00B5               	movwf	??_MOS_vModbudFun3+6
  4424  00FE  0844               	movf	MOS_vModbudFun3@i+1,w
  4425  00FF  3D34               	addwfc	??_MOS_vModbudFun3+5,w
  4426  0100  00B6               	movwf	??_MOS_vModbudFun3+7
  4427  0101  0835               	movf	??_MOS_vModbudFun3+6,w
  4428  0102  0086               	movwf	6
  4429  0103  0836               	movf	??_MOS_vModbudFun3+7,w
  4430  0104  0087               	movwf	7
  4431  0105  0832               	movf	??_MOS_vModbudFun3+3,w
  4432  0106  0081               	movwf	1
  4433  0107  3001               	movlw	1
  4434  0108  07C3               	addwf	MOS_vModbudFun3@i,f
  4435  0109  3000               	movlw	0
  4436  010A  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4437                           
  4438                           ;Modbus_uart/Modbus.c: 55:  }
  4439  010B  3001               	movlw	1
  4440  010C  07C1               	addwf	MOS_vModbudFun3@j,f
  4441  010D  3000               	movlw	0
  4442  010E  3DC2               	addwfc	MOS_vModbudFun3@j+1,f
  4443  010F                     l349:
  4444  010F  083E               	movf	MOS_vModbudFun3@u16RegisterLen+1,w
  4445  0110  0242               	subwf	MOS_vModbudFun3@j+1,w
  4446  0111  1D03               	skipz
  4447  0112  2915               	goto	u375
  4448  0113  083D               	movf	MOS_vModbudFun3@u16RegisterLen,w
  4449  0114  0241               	subwf	MOS_vModbudFun3@j,w
  4450  0115                     u375:
  4451  0115  1C03               	skipc
  4452  0116  2918               	goto	u371
  4453  0117  2919               	goto	u370
  4454  0118                     u371:
  4455  0118  28BD               	goto	l1552
  4456  0119                     u370:
  4457  0119                     l1558:
  4458                           
  4459                           ;Modbus_uart/Modbus.c: 56:  u16TransmitCRC=crc16(MOS_tModbusData.auTransmitBuff,i);
  4460  0119  30FB               	movlw	251
  4461  011A  00A0               	movwf	crc16@puchMsg
  4462  011B  3020               	movlw	32
  4463  011C  00A1               	movwf	crc16@puchMsg+1
  4464  011D  0844               	movf	MOS_vModbudFun3@i+1,w
  4465  011E  00A3               	movwf	crc16@usDataLen+1
  4466  011F  0843               	movf	MOS_vModbudFun3@i,w
  4467  0120  00A2               	movwf	crc16@usDataLen
  4468  0121  3185  2582  3180   	fcall	_crc16
  4469  0124  0020               	movlb	0	; select bank0
  4470  0125  0821               	movf	?_crc16+1,w
  4471  0126  00C0               	movwf	MOS_vModbudFun3@u16TransmitCRC+1
  4472  0127  0820               	movf	?_crc16,w
  4473  0128  00BF               	movwf	MOS_vModbudFun3@u16TransmitCRC
  4474  0129                     l1560:
  4475                           
  4476                           ;Modbus_uart/Modbus.c: 57:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransmitCRC
      +                          /256);
  4477  0129  0840               	movf	MOS_vModbudFun3@u16TransmitCRC+1,w
  4478  012A  00AF               	movwf	??_MOS_vModbudFun3
  4479  012B  30FB               	movlw	251
  4480  012C  00B0               	movwf	??_MOS_vModbudFun3+1
  4481  012D  3020               	movlw	32
  4482  012E  00B1               	movwf	??_MOS_vModbudFun3+2
  4483  012F  0843               	movf	MOS_vModbudFun3@i,w
  4484  0130  0730               	addwf	??_MOS_vModbudFun3+1,w
  4485  0131  00B2               	movwf	??_MOS_vModbudFun3+3
  4486  0132  0844               	movf	MOS_vModbudFun3@i+1,w
  4487  0133  3D31               	addwfc	??_MOS_vModbudFun3+2,w
  4488  0134  00B3               	movwf	??_MOS_vModbudFun3+4
  4489  0135  0832               	movf	??_MOS_vModbudFun3+3,w
  4490  0136  0086               	movwf	6
  4491  0137  0833               	movf	??_MOS_vModbudFun3+4,w
  4492  0138  0087               	movwf	7
  4493  0139  082F               	movf	??_MOS_vModbudFun3,w
  4494  013A  0081               	movwf	1
  4495  013B                     l1562:
  4496  013B  3001               	movlw	1
  4497  013C  07C3               	addwf	MOS_vModbudFun3@i,f
  4498  013D  3000               	movlw	0
  4499  013E  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4500  013F                     l1564:
  4501                           
  4502                           ;Modbus_uart/Modbus.c: 58:  MOS_tModbusData.auTransmitBuff[i++]=(uint8_t)(u16TransmitCRC
      +                          %256);
  4503  013F  30FB               	movlw	251
  4504  0140  00AF               	movwf	??_MOS_vModbudFun3
  4505  0141  3020               	movlw	32
  4506  0142  00B0               	movwf	??_MOS_vModbudFun3+1
  4507  0143  0843               	movf	MOS_vModbudFun3@i,w
  4508  0144  072F               	addwf	??_MOS_vModbudFun3,w
  4509  0145  00B1               	movwf	??_MOS_vModbudFun3+2
  4510  0146  0844               	movf	MOS_vModbudFun3@i+1,w
  4511  0147  3D30               	addwfc	??_MOS_vModbudFun3+1,w
  4512  0148  00B2               	movwf	??_MOS_vModbudFun3+3
  4513  0149  0831               	movf	??_MOS_vModbudFun3+2,w
  4514  014A  0086               	movwf	6
  4515  014B  0832               	movf	??_MOS_vModbudFun3+3,w
  4516  014C  0087               	movwf	7
  4517  014D  083F               	movf	MOS_vModbudFun3@u16TransmitCRC,w
  4518  014E  0081               	movwf	1
  4519  014F                     l1566:
  4520  014F  3001               	movlw	1
  4521  0150  07C3               	addwf	MOS_vModbudFun3@i,f
  4522  0151  3000               	movlw	0
  4523  0152  3DC4               	addwfc	MOS_vModbudFun3@i+1,f
  4524  0153                     l1568:
  4525                           
  4526                           ;Modbus_uart/Modbus.c: 60:  MOS_vModbusTransmitEnalbe();
  4527  0153  3187  277B  3180   	fcall	_MOS_vModbusTransmitEnalbe
  4528  0156                     l1570:
  4529                           
  4530                           ;Modbus_uart/Modbus.c: 62:  for(j=0; j<i; j++)
  4531  0156  0020               	movlb	0	; select bank0
  4532  0157  01C1               	clrf	MOS_vModbudFun3@j
  4533  0158  01C2               	clrf	MOS_vModbudFun3@j+1
  4534  0159  296D               	goto	l1576
  4535  015A                     l1572:
  4536                           
  4537                           ;Modbus_uart/Modbus.c: 63:  {;Modbus_uart/Modbus.c: 64:   EUSART_Write(MOS_tModbusData.a
      +                          uTransmitBuff[j]);
  4538  015A  30FB               	movlw	251
  4539  015B  00AF               	movwf	??_MOS_vModbudFun3
  4540  015C  3020               	movlw	32
  4541  015D  00B0               	movwf	??_MOS_vModbudFun3+1
  4542  015E  0841               	movf	MOS_vModbudFun3@j,w
  4543  015F  072F               	addwf	??_MOS_vModbudFun3,w
  4544  0160  0086               	movwf	6
  4545  0161  0842               	movf	MOS_vModbudFun3@j+1,w
  4546  0162  3D30               	addwfc	??_MOS_vModbudFun3+1,w
  4547  0163  0087               	movwf	7
  4548  0164  0801               	movf	1,w
  4549  0165  3186  26D9  3180   	fcall	_EUSART_Write
  4550  0168                     l1574:
  4551                           
  4552                           ;Modbus_uart/Modbus.c: 65:  }
  4553  0168  3001               	movlw	1
  4554  0169  0020               	movlb	0	; select bank0
  4555  016A  07C1               	addwf	MOS_vModbudFun3@j,f
  4556  016B  3000               	movlw	0
  4557  016C  3DC2               	addwfc	MOS_vModbudFun3@j+1,f
  4558  016D                     l1576:
  4559  016D  0844               	movf	MOS_vModbudFun3@i+1,w
  4560  016E  0242               	subwf	MOS_vModbudFun3@j+1,w
  4561  016F  1D03               	skipz
  4562  0170  2973               	goto	u385
  4563  0171  0843               	movf	MOS_vModbudFun3@i,w
  4564  0172  0241               	subwf	MOS_vModbudFun3@j,w
  4565  0173                     u385:
  4566  0173  1C03               	skipc
  4567  0174  2976               	goto	u381
  4568  0175  2977               	goto	u380
  4569  0176                     u381:
  4570  0176  295A               	goto	l1572
  4571  0177                     u380:
  4572  0177                     l1578:
  4573                           
  4574                           ;Modbus_uart/Modbus.c: 67:  MOS_vModbusReceiveEnalbe();
  4575  0177  3187  277E  3180   	fcall	_MOS_vModbusReceiveEnalbe
  4576  017A                     l355:
  4577  017A  0008               	return
  4578  017B                     __end_of_MOS_vModbudFun3:
  4579                           
  4580                           	psect	text18
  4581  0582                     __ptext18:	
  4582 ;; *************** function _crc16 *****************
  4583 ;; Defined at:
  4584 ;;		line 73 in file "Modbus_CRC/ModbusCRC.c"
  4585 ;; Parameters:    Size  Location     Type
  4586 ;;  puchMsg         2    0[BANK0 ] PTR unsigned char 
  4587 ;;		 -> MOS_tModbusData(204), 
  4588 ;;  usDataLen       2    2[BANK0 ] unsigned short 
  4589 ;; Auto vars:     Size  Location     Type
  4590 ;;  uIndex          4    9[BANK0 ] unsigned long 
  4591 ;;  uchCRCLo        1   14[BANK0 ] unsigned char 
  4592 ;;  uchCRCHi        1   13[BANK0 ] unsigned char 
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  2    0[BANK0 ] unsigned short 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
  4597 ;; Tracked objects:
  4598 ;;		On entry : 0/0
  4599 ;;		On exit  : 0/0
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4602 ;;      Params:         0       4       0       0       0       0
  4603 ;;      Locals:         0       6       0       0       0       0
  4604 ;;      Temps:          0       5       0       0       0       0
  4605 ;;      Totals:         0      15       0       0       0       0
  4606 ;;Total ram usage:       15 bytes
  4607 ;; Hardware stack levels used: 1
  4608 ;; Hardware stack levels required when called: 5
  4609 ;; This function calls:
  4610 ;;		Nothing
  4611 ;; This function is called by:
  4612 ;;		_MOS_vModbudFun3
  4613 ;;		_MOS_vModbudFun6
  4614 ;;		_MOS_vModBusHandler
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           
  4619                           ;psect for function _crc16
  4620  0582                     _crc16:
  4621  0582                     l1434:	
  4622                           ;incstack = 0
  4623                           ; Regs used in _crc16: [wreg-fsr1h+status,2+status,0+pclath]
  4624                           
  4625                           
  4626                           ;Modbus_CRC/ModbusCRC.c: 73: uint16_t crc16( uint8_t *puchMsg, uint16_t usDataLen );Modb
      +                          us_CRC/ModbusCRC.c: 74: {;Modbus_CRC/ModbusCRC.c: 75:     uint8_t uchCRCHi = 0xFF ;
  4627  0582  30FF               	movlw	255
  4628  0583  0020               	movlb	0	; select bank0
  4629  0584  00A4               	movwf	??_crc16
  4630  0585  0824               	movf	??_crc16,w
  4631  0586  00AD               	movwf	crc16@uchCRCHi
  4632                           
  4633                           ;Modbus_CRC/ModbusCRC.c: 76:     uint8_t uchCRCLo = 0xFF ;
  4634  0587  30FF               	movlw	255
  4635  0588  00A4               	movwf	??_crc16
  4636  0589  0824               	movf	??_crc16,w
  4637  058A  00AE               	movwf	crc16@uchCRCLo
  4638                           
  4639                           ;Modbus_CRC/ModbusCRC.c: 77:     uint32_t uIndex ;;Modbus_CRC/ModbusCRC.c: 79:     while
      +                           ( usDataLen-- )
  4640  058B  2DBB               	goto	l1444
  4641  058C                     l1436:
  4642                           
  4643                           ;Modbus_CRC/ModbusCRC.c: 80:     {;Modbus_CRC/ModbusCRC.c: 81:         uIndex = uchCRCHi
      +                           ^ *puchMsg++ ;
  4644  058C  0820               	movf	crc16@puchMsg,w
  4645  058D  0086               	movwf	6
  4646  058E  0821               	movf	crc16@puchMsg+1,w
  4647  058F  0087               	movwf	7
  4648  0590  0801               	movf	1,w
  4649  0591  062D               	xorwf	crc16@uchCRCHi,w
  4650  0592  00A4               	movwf	??_crc16
  4651  0593  01A5               	clrf	??_crc16+1
  4652  0594  01A6               	clrf	??_crc16+2
  4653  0595  01A7               	clrf	??_crc16+3
  4654  0596  0827               	movf	??_crc16+3,w
  4655  0597  00AC               	movwf	crc16@uIndex+3
  4656  0598  0826               	movf	??_crc16+2,w
  4657  0599  00AB               	movwf	crc16@uIndex+2
  4658  059A  0825               	movf	??_crc16+1,w
  4659  059B  00AA               	movwf	crc16@uIndex+1
  4660  059C  0824               	movf	??_crc16,w
  4661  059D  00A9               	movwf	crc16@uIndex
  4662  059E                     l1438:
  4663  059E  3001               	movlw	1
  4664  059F  07A0               	addwf	crc16@puchMsg,f
  4665  05A0  3000               	movlw	0
  4666  05A1  3DA1               	addwfc	crc16@puchMsg+1,f
  4667  05A2                     l1440:
  4668                           
  4669                           ;Modbus_CRC/ModbusCRC.c: 82:         uchCRCHi = uchCRCLo ^ auchCRCHi[uIndex] ;
  4670  05A2  082A               	movf	crc16@uIndex+1,w
  4671  05A3  0085               	movwf	5
  4672  05A4  0829               	movf	crc16@uIndex,w
  4673  05A5  0084               	movwf	4
  4674  05A6  307C               	movlw	low (_auchCRCHi| (0+32768))
  4675  05A7  0784               	addwf	4,f
  4676  05A8  3083               	movlw	high (_auchCRCHi| (0+32768))
  4677  05A9  3D85               	addwfc	5,f
  4678  05AA  0800               	movf	0,w	;code access
  4679  05AB  062E               	xorwf	crc16@uchCRCLo,w
  4680  05AC  00A4               	movwf	??_crc16
  4681  05AD  0824               	movf	??_crc16,w
  4682  05AE  00AD               	movwf	crc16@uchCRCHi
  4683  05AF                     l1442:
  4684                           
  4685                           ;Modbus_CRC/ModbusCRC.c: 83:         uchCRCLo = auchCRCLo[uIndex] ;
  4686  05AF  082A               	movf	crc16@uIndex+1,w
  4687  05B0  0085               	movwf	5
  4688  05B1  0829               	movf	crc16@uIndex,w
  4689  05B2  0084               	movwf	4
  4690  05B3  307C               	movlw	low (_auchCRCLo| (0+32768))
  4691  05B4  0784               	addwf	4,f
  4692  05B5  3082               	movlw	high (_auchCRCLo| (0+32768))
  4693  05B6  3D85               	addwfc	5,f
  4694  05B7  0800               	movf	0,w	;code access
  4695  05B8  00A4               	movwf	??_crc16
  4696  05B9  0824               	movf	??_crc16,w
  4697  05BA  00AE               	movwf	crc16@uchCRCLo
  4698  05BB                     l1444:
  4699                           
  4700                           ;Modbus_CRC/ModbusCRC.c: 79:     while ( usDataLen-- )
  4701  05BB  3001               	movlw	1
  4702  05BC  02A2               	subwf	crc16@usDataLen,f
  4703  05BD  3000               	movlw	0
  4704  05BE  3BA3               	subwfb	crc16@usDataLen+1,f
  4705  05BF  0A22               	incf	crc16@usDataLen,w
  4706  05C0  1D03               	skipz
  4707  05C1  2DC6               	goto	u321
  4708  05C2  0A23               	incf	crc16@usDataLen+1,w
  4709  05C3  1D03               	btfss	3,2
  4710  05C4  2DC6               	goto	u321
  4711  05C5  2DC7               	goto	u320
  4712  05C6                     u321:
  4713  05C6  2D8C               	goto	l1436
  4714  05C7                     u320:
  4715  05C7                     l1446:
  4716                           
  4717                           ;Modbus_CRC/ModbusCRC.c: 86:     return (uint16_t)( uchCRCHi << 8 | uchCRCLo ) ;
  4718  05C7  082E               	movf	crc16@uchCRCLo,w
  4719  05C8  00A4               	movwf	??_crc16
  4720  05C9  01A5               	clrf	??_crc16+1
  4721  05CA  082D               	movf	crc16@uchCRCHi,w
  4722  05CB  00A6               	movwf	??_crc16+2
  4723  05CC  01A7               	clrf	??_crc16+3
  4724  05CD  0826               	movf	??_crc16+2,w
  4725  05CE  00A7               	movwf	??_crc16+3
  4726  05CF  01A6               	clrf	??_crc16+2
  4727  05D0  0824               	movf	??_crc16,w
  4728  05D1  0426               	iorwf	??_crc16+2,w
  4729  05D2  00A0               	movwf	?_crc16
  4730  05D3  0825               	movf	??_crc16+1,w
  4731  05D4  0427               	iorwf	??_crc16+3,w
  4732  05D5  00A1               	movwf	?_crc16+1
  4733  05D6                     l321:
  4734  05D6  0008               	return
  4735  05D7                     __end_of_crc16:
  4736                           
  4737                           	psect	text19
  4738  077B                     __ptext19:	
  4739 ;; *************** function _MOS_vModbusTransmitEnalbe *****************
  4740 ;; Defined at:
  4741 ;;		line 28 in file "Modbus_uart/Modbus.c"
  4742 ;; Parameters:    Size  Location     Type
  4743 ;;		None
  4744 ;; Auto vars:     Size  Location     Type
  4745 ;;		None
  4746 ;; Return value:  Size  Location     Type
  4747 ;;                  1    wreg      void 
  4748 ;; Registers used:
  4749 ;;		None
  4750 ;; Tracked objects:
  4751 ;;		On entry : 0/0
  4752 ;;		On exit  : 0/0
  4753 ;;		Unchanged: 0/0
  4754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4755 ;;      Params:         0       0       0       0       0       0
  4756 ;;      Locals:         0       0       0       0       0       0
  4757 ;;      Temps:          0       0       0       0       0       0
  4758 ;;      Totals:         0       0       0       0       0       0
  4759 ;;Total ram usage:        0 bytes
  4760 ;; Hardware stack levels used: 1
  4761 ;; Hardware stack levels required when called: 5
  4762 ;; This function calls:
  4763 ;;		Nothing
  4764 ;; This function is called by:
  4765 ;;		_MOS_vModbudFun3
  4766 ;;		_MOS_vModbudFun6
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function _MOS_vModbusTransmitEnalbe
  4772  077B                     _MOS_vModbusTransmitEnalbe:
  4773  077B                     l344:	
  4774                           ;incstack = 0
  4775                           ; Regs used in _MOS_vModbusTransmitEnalbe: []
  4776                           ;Modbus_uart/Modbus.c: 30:  do { LATBbits.LATB0 = 1; } while(0);
  4777                           
  4778  077B  0022               	movlb	2	; select bank2
  4779  077C  140D               	bsf	13,0	;volatile
  4780  077D                     l346:
  4781  077D  0008               	return
  4782  077E                     __end_of_MOS_vModbusTransmitEnalbe:
  4783                           
  4784                           	psect	text20
  4785  077E                     __ptext20:	
  4786 ;; *************** function _MOS_vModbusReceiveEnalbe *****************
  4787 ;; Defined at:
  4788 ;;		line 23 in file "Modbus_uart/Modbus.c"
  4789 ;; Parameters:    Size  Location     Type
  4790 ;;		None
  4791 ;; Auto vars:     Size  Location     Type
  4792 ;;		None
  4793 ;; Return value:  Size  Location     Type
  4794 ;;                  1    wreg      void 
  4795 ;; Registers used:
  4796 ;;		None
  4797 ;; Tracked objects:
  4798 ;;		On entry : 0/0
  4799 ;;		On exit  : 0/0
  4800 ;;		Unchanged: 0/0
  4801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4802 ;;      Params:         0       0       0       0       0       0
  4803 ;;      Locals:         0       0       0       0       0       0
  4804 ;;      Temps:          0       0       0       0       0       0
  4805 ;;      Totals:         0       0       0       0       0       0
  4806 ;;Total ram usage:        0 bytes
  4807 ;; Hardware stack levels used: 1
  4808 ;; Hardware stack levels required when called: 5
  4809 ;; This function calls:
  4810 ;;		Nothing
  4811 ;; This function is called by:
  4812 ;;		_main
  4813 ;;		_MOS_vModbudFun3
  4814 ;;		_MOS_vModbudFun6
  4815 ;; This function uses a non-reentrant model
  4816 ;;
  4817                           
  4818                           
  4819                           ;psect for function _MOS_vModbusReceiveEnalbe
  4820  077E                     _MOS_vModbusReceiveEnalbe:
  4821  077E                     l339:	
  4822                           ;incstack = 0
  4823                           ; Regs used in _MOS_vModbusReceiveEnalbe: []
  4824                           ;Modbus_uart/Modbus.c: 25:  do { LATBbits.LATB0 = 0; } while(0);
  4825                           
  4826  077E  0022               	movlb	2	; select bank2
  4827  077F  100D               	bcf	13,0	;volatile
  4828  0780                     l341:
  4829  0780  0008               	return
  4830  0781                     __end_of_MOS_vModbusReceiveEnalbe:
  4831                           
  4832                           	psect	text21
  4833  06D9                     __ptext21:	
  4834 ;; *************** function _EUSART_Write *****************
  4835 ;; Defined at:
  4836 ;;		line 142 in file "mcc_generated_files/eusart.c"
  4837 ;; Parameters:    Size  Location     Type
  4838 ;;  txData          1    wreg     unsigned char 
  4839 ;; Auto vars:     Size  Location     Type
  4840 ;;  txData          1    0[BANK0 ] unsigned char 
  4841 ;; Return value:  Size  Location     Type
  4842 ;;                  1    wreg      void 
  4843 ;; Registers used:
  4844 ;;		wreg, status,2, status,0, pclath, cstack
  4845 ;; Tracked objects:
  4846 ;;		On entry : 0/0
  4847 ;;		On exit  : 0/0
  4848 ;;		Unchanged: 0/0
  4849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4850 ;;      Params:         0       0       0       0       0       0
  4851 ;;      Locals:         0       1       0       0       0       0
  4852 ;;      Temps:          0       0       0       0       0       0
  4853 ;;      Totals:         0       1       0       0       0       0
  4854 ;;Total ram usage:        1 bytes
  4855 ;; Hardware stack levels used: 1
  4856 ;; Hardware stack levels required when called: 6
  4857 ;; This function calls:
  4858 ;;		_EUSART_is_tx_done
  4859 ;; This function is called by:
  4860 ;;		_MOS_vModbudFun3
  4861 ;;		_MOS_vModbudFun6
  4862 ;; This function uses a non-reentrant model
  4863 ;;
  4864                           
  4865                           
  4866                           ;psect for function _EUSART_Write
  4867  06D9                     _EUSART_Write:
  4868                           
  4869                           ;incstack = 0
  4870                           ; Regs used in _EUSART_Write: [wreg+status,2+status,0+pclath+cstack]
  4871                           ;EUSART_Write@txData stored from wreg
  4872  06D9  0020               	movlb	0	; select bank0
  4873  06DA  00A0               	movwf	EUSART_Write@txData
  4874  06DB                     l1410:
  4875                           
  4876                           ;mcc_generated_files/eusart.c: 142: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 143: {;mcc_generated_files/eusart.c: 151:         TXREG = txData;
  4877  06DB  0820               	movf	EUSART_Write@txData,w
  4878  06DC  0023               	movlb	3	; select bank3
  4879  06DD  009A               	movwf	26	;volatile
  4880  06DE                     l1412:
  4881                           
  4882                           ;mcc_generated_files/eusart.c: 152:         PIE1bits.TXIE = 1;
  4883  06DE  0021               	movlb	1	; select bank1
  4884  06DF  1611               	bsf	17,4	;volatile
  4885  06E0                     l136:	
  4886                           ;mcc_generated_files/eusart.c: 155:     {;mcc_generated_files/eusart.c: 157:     }
  4887                           
  4888                           
  4889                           ;mcc_generated_files/eusart.c: 154:     while((1 == PIE1bits.TXIE)||(EUSART_is_tx_done()
      +                           == 0))
  4890  06E0  0021               	movlb	1	; select bank1
  4891  06E1  1A11               	btfsc	17,4	;volatile
  4892  06E2  2EE4               	goto	u281
  4893  06E3  2EE5               	goto	u280
  4894  06E4                     u281:
  4895  06E4  2EE0               	goto	l136
  4896  06E5                     u280:
  4897  06E5                     l1414:
  4898  06E5  3187  276F  3186   	fcall	_EUSART_is_tx_done
  4899  06E8  3A00               	xorlw	0
  4900  06E9  1903               	skipnz
  4901  06EA  2EEC               	goto	u291
  4902  06EB  2EED               	goto	u290
  4903  06EC                     u291:
  4904  06EC  2EE0               	goto	l136
  4905  06ED                     u290:
  4906  06ED                     l139:
  4907  06ED  0008               	return
  4908  06EE                     __end_of_EUSART_Write:
  4909                           
  4910                           	psect	text22
  4911  076F                     __ptext22:	
  4912 ;; *************** function _EUSART_is_tx_done *****************
  4913 ;; Defined at:
  4914 ;;		line 127 in file "mcc_generated_files/eusart.c"
  4915 ;; Parameters:    Size  Location     Type
  4916 ;;		None
  4917 ;; Auto vars:     Size  Location     Type
  4918 ;;		None
  4919 ;; Return value:  Size  Location     Type
  4920 ;;                  1    wreg      _Bool 
  4921 ;; Registers used:
  4922 ;;		wreg, status,2, status,0
  4923 ;; Tracked objects:
  4924 ;;		On entry : 0/0
  4925 ;;		On exit  : 0/0
  4926 ;;		Unchanged: 0/0
  4927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4928 ;;      Params:         0       0       0       0       0       0
  4929 ;;      Locals:         0       0       0       0       0       0
  4930 ;;      Temps:          0       0       0       0       0       0
  4931 ;;      Totals:         0       0       0       0       0       0
  4932 ;;Total ram usage:        0 bytes
  4933 ;; Hardware stack levels used: 1
  4934 ;; Hardware stack levels required when called: 5
  4935 ;; This function calls:
  4936 ;;		Nothing
  4937 ;; This function is called by:
  4938 ;;		_EUSART_Write
  4939 ;; This function uses a non-reentrant model
  4940 ;;
  4941                           
  4942                           
  4943                           ;psect for function _EUSART_is_tx_done
  4944  076F                     _EUSART_is_tx_done:
  4945  076F                     l1394:	
  4946                           ;incstack = 0
  4947                           ; Regs used in _EUSART_is_tx_done: [wreg+status,2+status,0]
  4948                           
  4949                           
  4950                           ;mcc_generated_files/eusart.c: 129:     return TXSTAbits.TRMT;
  4951  076F  0023               	movlb	3	; select bank3
  4952  0770  0C1E               	rrf	30,w	;volatile
  4953  0771  3901               	andlw	1
  4954  0772                     l127:
  4955  0772  0008               	return
  4956  0773                     __end_of_EUSART_is_tx_done:
  4957                           
  4958                           	psect	intentry
  4959  0004                     __pintentry:	
  4960 ;; *************** function _INTERRUPT_InterruptManager *****************
  4961 ;; Defined at:
  4962 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4963 ;; Parameters:    Size  Location     Type
  4964 ;;		None
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;		None
  4967 ;; Return value:  Size  Location     Type
  4968 ;;                  1    wreg      void 
  4969 ;; Registers used:
  4970 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4971 ;; Tracked objects:
  4972 ;;		On entry : 0/0
  4973 ;;		On exit  : 0/0
  4974 ;;		Unchanged: 0/0
  4975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  4976 ;;      Params:         0       0       0       0       0       0
  4977 ;;      Locals:         0       0       0       0       0       0
  4978 ;;      Temps:          0       0       0       0       0       0
  4979 ;;      Totals:         0       0       0       0       0       0
  4980 ;;Total ram usage:        0 bytes
  4981 ;; Hardware stack levels used: 1
  4982 ;; Hardware stack levels required when called: 4
  4983 ;; This function calls:
  4984 ;;		Absolute function
  4985 ;;		_EUSART_Receive_ISR
  4986 ;;		_EUSART_Transmit_ISR
  4987 ;;		_TMR0_ISR
  4988 ;; This function is called by:
  4989 ;;		Interrupt level 1
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           
  4993  0004                     _INTERRUPT_InterruptManager:
  4994                           
  4995                           ;incstack = 0
  4996  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4997                           
  4998                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4999  0005  3180               	pagesel	$
  5000  0006                     i1l1704:
  5001                           
  5002                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  5003  0006  1E8B               	btfss	11,5	;volatile
  5004  0007  2809               	goto	u47_21
  5005  0008  280A               	goto	u47_20
  5006  0009                     u47_21:
  5007  0009  2812               	goto	i1l233
  5008  000A                     u47_20:
  5009  000A                     i1l1706:
  5010  000A  1D0B               	btfss	11,2	;volatile
  5011  000B  280D               	goto	u48_21
  5012  000C  280E               	goto	u48_20
  5013  000D                     u48_21:
  5014  000D  2812               	goto	i1l233
  5015  000E                     u48_20:
  5016  000E                     i1l1708:
  5017                           
  5018                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  5019  000E  3187  2701  3180   	fcall	_TMR0_ISR
  5020                           
  5021                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5022  0011  2836               	goto	i1l241
  5023  0012                     i1l233:	
  5024                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  5025                           
  5026  0012  1F0B               	btfss	11,6	;volatile
  5027  0013  2815               	goto	u49_21
  5028  0014  2816               	goto	u49_20
  5029  0015                     u49_21:
  5030  0015  2836               	goto	i1l241
  5031  0016                     u49_20:
  5032  0016                     i1l1710:
  5033                           
  5034                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5035  0016  0021               	movlb	1	; select bank1
  5036  0017  1E11               	btfss	17,4	;volatile
  5037  0018  281A               	goto	u50_21
  5038  0019  281B               	goto	u50_20
  5039  001A                     u50_21:
  5040  001A  2826               	goto	i1l236
  5041  001B                     u50_20:
  5042  001B                     i1l1712:
  5043  001B  0020               	movlb	0	; select bank0
  5044  001C  1E11               	btfss	17,4	;volatile
  5045  001D  281F               	goto	u51_21
  5046  001E  2820               	goto	u51_20
  5047  001F                     u51_21:
  5048  001F  2826               	goto	i1l236
  5049  0020                     u51_20:
  5050  0020                     i1l1714:
  5051                           
  5052                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_TxDefaultInterruptHandler();
  5053  0020  085D               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  5054  0021  008A               	movwf	10
  5055  0022  085C               	movf	_EUSART_TxDefaultInterruptHandler,w
  5056  0023  000A               	callw
  5057  0024  3180               	pagesel	$
  5058                           
  5059                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5060  0025  2836               	goto	i1l241
  5061  0026                     i1l236:	
  5062                           ;mcc_generated_files/interrupt_manager.c: 65:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5063                           
  5064  0026  0021               	movlb	1	; select bank1
  5065  0027  1E91               	btfss	17,5	;volatile
  5066  0028  282A               	goto	u52_21
  5067  0029  282B               	goto	u52_20
  5068  002A                     u52_21:
  5069  002A  2836               	goto	i1l240
  5070  002B                     u52_20:
  5071  002B                     i1l1716:
  5072  002B  0020               	movlb	0	; select bank0
  5073  002C  1E91               	btfss	17,5	;volatile
  5074  002D  282F               	goto	u53_21
  5075  002E  2830               	goto	u53_20
  5076  002F                     u53_21:
  5077  002F  2836               	goto	i1l240
  5078  0030                     u53_20:
  5079  0030                     i1l1718:
  5080                           
  5081                           ;mcc_generated_files/interrupt_manager.c: 66:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 67:             EUSART_RxDefaultInterruptHandler();
  5082  0030  085B               	movf	_EUSART_RxDefaultInterruptHandler+1,w
  5083  0031  008A               	movwf	10
  5084  0032  085A               	movf	_EUSART_RxDefaultInterruptHandler,w
  5085  0033  000A               	callw
  5086  0034  3180               	pagesel	$
  5087                           
  5088                           ;mcc_generated_files/interrupt_manager.c: 68:         }
  5089  0035  2836               	goto	i1l241
  5090  0036                     i1l240:	
  5091                           ;mcc_generated_files/interrupt_manager.c: 75:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 77:     }
  5092                           
  5093  0036                     i1l241:
  5094  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5095  0037  0009               	retfie
  5096  0038                     __end_of_INTERRUPT_InterruptManager:
  5097                           
  5098                           	psect	text24
  5099  0701                     __ptext24:	
  5100 ;; *************** function _TMR0_ISR *****************
  5101 ;; Defined at:
  5102 ;;		line 111 in file "mcc_generated_files/tmr0.c"
  5103 ;; Parameters:    Size  Location     Type
  5104 ;;		None
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;		None
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5111 ;; Tracked objects:
  5112 ;;		On entry : 0/0
  5113 ;;		On exit  : 0/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5116 ;;      Params:         0       0       0       0       0       0
  5117 ;;      Locals:         0       0       0       0       0       0
  5118 ;;      Temps:          0       0       0       0       0       0
  5119 ;;      Totals:         0       0       0       0       0       0
  5120 ;;Total ram usage:        0 bytes
  5121 ;; Hardware stack levels used: 1
  5122 ;; Hardware stack levels required when called: 2
  5123 ;; This function calls:
  5124 ;;		Absolute function
  5125 ;;		_TMR0_DefaultInterruptHandler
  5126 ;; This function is called by:
  5127 ;;		_INTERRUPT_InterruptManager
  5128 ;; This function uses a non-reentrant model
  5129 ;;
  5130                           
  5131                           
  5132                           ;psect for function _TMR0_ISR
  5133  0701                     _TMR0_ISR:
  5134  0701                     i1l1658:	
  5135                           ;incstack = 0
  5136                           ; Regs used in _TMR0_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5137                           
  5138                           
  5139                           ;mcc_generated_files/tmr0.c: 115:     INTCONbits.TMR0IF = 0;
  5140  0701  110B               	bcf	11,2	;volatile
  5141  0702                     i1l1660:
  5142                           
  5143                           ;mcc_generated_files/tmr0.c: 117:     TMR0 = timer0ReloadVal;
  5144  0702  087C               	movf	_timer0ReloadVal,w	;volatile
  5145  0703  0020               	movlb	0	; select bank0
  5146  0704  0095               	movwf	21	;volatile
  5147  0705                     i1l1662:
  5148                           
  5149                           ;mcc_generated_files/tmr0.c: 119:     if(TMR0_InterruptHandler)
  5150  0705  0852               	movf	_TMR0_InterruptHandler,w
  5151  0706  0453               	iorwf	_TMR0_InterruptHandler+1,w
  5152  0707  1903               	btfsc	3,2
  5153  0708  2F0A               	goto	u43_21
  5154  0709  2F0B               	goto	u43_20
  5155  070A                     u43_21:
  5156  070A  2F10               	goto	i1l275
  5157  070B                     u43_20:
  5158  070B                     i1l1664:
  5159                           
  5160                           ;mcc_generated_files/tmr0.c: 120:     {;mcc_generated_files/tmr0.c: 121:         TMR0_In
      +                          terruptHandler();
  5161  070B  0853               	movf	_TMR0_InterruptHandler+1,w
  5162  070C  008A               	movwf	10
  5163  070D  0852               	movf	_TMR0_InterruptHandler,w
  5164  070E  000A               	callw
  5165  070F  3187               	pagesel	$
  5166  0710                     i1l275:
  5167  0710  0008               	return
  5168  0711                     __end_of_TMR0_ISR:
  5169                           
  5170                           	psect	text25
  5171  05D7                     __ptext25:	
  5172 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  5173 ;; Defined at:
  5174 ;;		line 132 in file "mcc_generated_files/tmr0.c"
  5175 ;; Parameters:    Size  Location     Type
  5176 ;;		None
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  tModbusData     2    4[COMMON] PTR struct _TModbusData
  5179 ;;		 -> MOS_tModbusData(204), NULL(0), 
  5180 ;; Return value:  Size  Location     Type
  5181 ;;                  1    wreg      void 
  5182 ;; Registers used:
  5183 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5184 ;; Tracked objects:
  5185 ;;		On entry : 0/0
  5186 ;;		On exit  : 0/0
  5187 ;;		Unchanged: 0/0
  5188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5189 ;;      Params:         0       0       0       0       0       0
  5190 ;;      Locals:         2       0       0       0       0       0
  5191 ;;      Temps:          2       0       0       0       0       0
  5192 ;;      Totals:         4       0       0       0       0       0
  5193 ;;Total ram usage:        4 bytes
  5194 ;; Hardware stack levels used: 1
  5195 ;; Hardware stack levels required when called: 1
  5196 ;; This function calls:
  5197 ;;		_Mos_PtGetModbusObject
  5198 ;; This function is called by:
  5199 ;;		_TMR0_Initialize
  5200 ;;		_TMR0_ISR
  5201 ;; This function uses a non-reentrant model
  5202 ;;
  5203                           
  5204                           
  5205                           ;psect for function _TMR0_DefaultInterruptHandler
  5206  05D7                     _TMR0_DefaultInterruptHandler:
  5207  05D7                     i1l1518:	
  5208                           ;incstack = 0
  5209                           ; Regs used in _TMR0_DefaultInterruptHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath
      +                          +cstack]
  5210                           
  5211  05D7                     i1l1520:
  5212                           
  5213                           ;mcc_generated_files/tmr0.c: 138:     tModbusData = Mos_PtGetModbusObject();
  5214  05D7  3187  2766  3185   	fcall	_Mos_PtGetModbusObject
  5215  05DA  0871               	movf	?_Mos_PtGetModbusObject+1,w
  5216  05DB  00F5               	movwf	TMR0_DefaultInterruptHandler@tModbusData+1
  5217  05DC  0870               	movf	?_Mos_PtGetModbusObject,w
  5218  05DD  00F4               	movwf	TMR0_DefaultInterruptHandler@tModbusData
  5219  05DE                     i1l1522:
  5220                           
  5221                           ;mcc_generated_files/tmr0.c: 140:     u16Count++;
  5222  05DE  3001               	movlw	1
  5223  05DF  0020               	movlb	0	; select bank0
  5224  05E0  07DE               	addwf	TMR0_DefaultInterruptHandler@u16Count,f
  5225  05E1  3000               	movlw	0
  5226  05E2  3DDF               	addwfc	TMR0_DefaultInterruptHandler@u16Count+1,f
  5227  05E3                     i1l1524:
  5228                           
  5229                           ;mcc_generated_files/tmr0.c: 143:     if(tModbusData->u8TimeoutStart!=0)
  5230  05E3  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5231  05E4  3E66               	addlw	102
  5232  05E5  0086               	movwf	6
  5233  05E6  3000               	movlw	0
  5234  05E7  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5235  05E8  0087               	movwf	7
  5236  05E9  0801               	movf	1,w
  5237  05EA  1903               	btfsc	3,2
  5238  05EB  2DED               	goto	u33_21
  5239  05EC  2DEE               	goto	u33_20
  5240  05ED                     u33_21:
  5241  05ED  2E17               	goto	i1l285
  5242  05EE                     u33_20:
  5243  05EE                     i1l1526:
  5244                           
  5245                           ;mcc_generated_files/tmr0.c: 144:   {;mcc_generated_files/tmr0.c: 145:     tModbusData->
      +                          u8TimeoutCount++;
  5246  05EE  3001               	movlw	1
  5247  05EF  00F2               	movwf	??_TMR0_DefaultInterruptHandler
  5248  05F0  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5249  05F1  3ECB               	addlw	203
  5250  05F2  0086               	movwf	6
  5251  05F3  3000               	movlw	0
  5252  05F4  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5253  05F5  0087               	movwf	7
  5254  05F6  0872               	movf	??_TMR0_DefaultInterruptHandler,w
  5255  05F7  0781               	addwf	1,f
  5256                           
  5257                           ;mcc_generated_files/tmr0.c: 146:     if(tModbusData->u8TimeoutCount>=8)
  5258  05F8  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5259  05F9  3ECB               	addlw	203
  5260  05FA  0086               	movwf	6
  5261  05FB  3000               	movlw	0
  5262  05FC  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5263  05FD  0087               	movwf	7
  5264  05FE  3008               	movlw	8
  5265  05FF  0201               	subwf	1,w
  5266  0600  1C03               	skipc
  5267  0601  2E03               	goto	u34_21
  5268  0602  2E04               	goto	u34_20
  5269  0603                     u34_21:
  5270  0603  2E17               	goto	i1l285
  5271  0604                     u34_20:
  5272  0604                     i1l1528:
  5273                           
  5274                           ;mcc_generated_files/tmr0.c: 147:    {;mcc_generated_files/tmr0.c: 148:     tModbusData-
      +                          >u8TimeoutStart=0;
  5275  0604  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5276  0605  3E66               	addlw	102
  5277  0606  0086               	movwf	6
  5278  0607  3000               	movlw	0
  5279  0608  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5280  0609  0087               	movwf	7
  5281  060A  0181               	clrf	1
  5282                           
  5283                           ;mcc_generated_files/tmr0.c: 149:     tModbusData->u8OneFrameFinish=1;
  5284  060B  0874               	movf	TMR0_DefaultInterruptHandler@tModbusData,w
  5285  060C  3E64               	addlw	100
  5286  060D  00F2               	movwf	??_TMR0_DefaultInterruptHandler
  5287  060E  3000               	movlw	0
  5288  060F  3D75               	addwfc	TMR0_DefaultInterruptHandler@tModbusData+1,w
  5289  0610  00F3               	movwf	??_TMR0_DefaultInterruptHandler+1
  5290  0611  0872               	movf	??_TMR0_DefaultInterruptHandler,w
  5291  0612  0086               	movwf	6
  5292  0613  0873               	movf	??_TMR0_DefaultInterruptHandler+1,w
  5293  0614  0087               	movwf	7
  5294  0615  3001               	movlw	1
  5295  0616  0081               	movwf	1
  5296  0617                     i1l285:
  5297  0617  0008               	return
  5298  0618                     __end_of_TMR0_DefaultInterruptHandler:
  5299                           
  5300                           	psect	text26
  5301  0781                     __ptext26:	
  5302 ;; *************** function _EUSART_Transmit_ISR *****************
  5303 ;; Defined at:
  5304 ;;		line 162 in file "mcc_generated_files/eusart.c"
  5305 ;; Parameters:    Size  Location     Type
  5306 ;;		None
  5307 ;; Auto vars:     Size  Location     Type
  5308 ;;		None
  5309 ;; Return value:  Size  Location     Type
  5310 ;;                  1    wreg      void 
  5311 ;; Registers used:
  5312 ;;		None
  5313 ;; Tracked objects:
  5314 ;;		On entry : 0/0
  5315 ;;		On exit  : 0/0
  5316 ;;		Unchanged: 0/0
  5317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5318 ;;      Params:         0       0       0       0       0       0
  5319 ;;      Locals:         0       0       0       0       0       0
  5320 ;;      Temps:          0       0       0       0       0       0
  5321 ;;      Totals:         0       0       0       0       0       0
  5322 ;;Total ram usage:        0 bytes
  5323 ;; Hardware stack levels used: 1
  5324 ;; This function calls:
  5325 ;;		Nothing
  5326 ;; This function is called by:
  5327 ;;		_EUSART_Initialize
  5328 ;;		_INTERRUPT_InterruptManager
  5329 ;; This function uses a non-reentrant model
  5330 ;;
  5331                           
  5332                           
  5333                           ;psect for function _EUSART_Transmit_ISR
  5334  0781                     _EUSART_Transmit_ISR:
  5335  0781                     i1l1636:	
  5336                           ;incstack = 0
  5337                           ; Regs used in _EUSART_Transmit_ISR: []
  5338                           
  5339                           
  5340                           ;mcc_generated_files/eusart.c: 166:         PIE1bits.TXIE = 0;
  5341  0781  0021               	movlb	1	; select bank1
  5342  0782  1211               	bcf	17,4	;volatile
  5343  0783                     i1l142:
  5344  0783  0008               	return
  5345  0784                     __end_of_EUSART_Transmit_ISR:
  5346                           
  5347                           	psect	text27
  5348  0653                     __ptext27:	
  5349 ;; *************** function _EUSART_Receive_ISR *****************
  5350 ;; Defined at:
  5351 ;;		line 170 in file "mcc_generated_files/eusart.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;		None
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;		None
  5356 ;; Return value:  Size  Location     Type
  5357 ;;                  1    wreg      void 
  5358 ;; Registers used:
  5359 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5360 ;; Tracked objects:
  5361 ;;		On entry : 0/0
  5362 ;;		On exit  : 0/0
  5363 ;;		Unchanged: 0/0
  5364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5365 ;;      Params:         0       0       0       0       0       0
  5366 ;;      Locals:         0       0       0       0       0       0
  5367 ;;      Temps:          0       0       0       0       0       0
  5368 ;;      Totals:         0       0       0       0       0       0
  5369 ;;Total ram usage:        0 bytes
  5370 ;; Hardware stack levels used: 1
  5371 ;; Hardware stack levels required when called: 3
  5372 ;; This function calls:
  5373 ;;		Absolute function
  5374 ;;		_EUSART_DefaultErrorHandler
  5375 ;;		_EUSART_DefaultFramingErrorHandler
  5376 ;;		_EUSART_DefaultOverrunErrorHandler
  5377 ;;		_EUSART_RxDataHandler
  5378 ;; This function is called by:
  5379 ;;		_EUSART_Initialize
  5380 ;;		_INTERRUPT_InterruptManager
  5381 ;; This function uses a non-reentrant model
  5382 ;;
  5383                           
  5384                           
  5385                           ;psect for function _EUSART_Receive_ISR
  5386  0653                     _EUSART_Receive_ISR:
  5387  0653                     i1l1638:	
  5388                           ;incstack = 0
  5389                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5390                           
  5391                           
  5392                           ;mcc_generated_files/eusart.c: 173:     eusartRxLastError.status = 0;
  5393  0653  01FB               	clrf	_eusartRxLastError	;volatile
  5394  0654                     i1l1640:
  5395                           
  5396                           ;mcc_generated_files/eusart.c: 175:     if(RCSTAbits.FERR){
  5397  0654  0023               	movlb	3	; select bank3
  5398  0655  1D1D               	btfss	29,2	;volatile
  5399  0656  2E58               	goto	u40_21
  5400  0657  2E59               	goto	u40_20
  5401  0658                     u40_21:
  5402  0658  2E60               	goto	i1l1646
  5403  0659                     u40_20:
  5404  0659                     i1l1642:
  5405                           
  5406                           ;mcc_generated_files/eusart.c: 176:         eusartRxLastError.ferr = 1;
  5407  0659  14FB               	bsf	_eusartRxLastError,1	;volatile
  5408  065A                     i1l1644:
  5409                           
  5410                           ;mcc_generated_files/eusart.c: 177:         EUSART_FramingErrorHandler();
  5411  065A  0020               	movlb	0	; select bank0
  5412  065B  0859               	movf	_EUSART_FramingErrorHandler+1,w
  5413  065C  008A               	movwf	10
  5414  065D  0858               	movf	_EUSART_FramingErrorHandler,w
  5415  065E  000A               	callw
  5416  065F  3186               	pagesel	$
  5417  0660                     i1l1646:
  5418                           
  5419                           ;mcc_generated_files/eusart.c: 180:     if(RCSTAbits.OERR){
  5420  0660  0023               	movlb	3	; select bank3
  5421  0661  1C9D               	btfss	29,1	;volatile
  5422  0662  2E64               	goto	u41_21
  5423  0663  2E65               	goto	u41_20
  5424  0664                     u41_21:
  5425  0664  2E6C               	goto	i1l1652
  5426  0665                     u41_20:
  5427  0665                     i1l1648:
  5428                           
  5429                           ;mcc_generated_files/eusart.c: 181:         eusartRxLastError.oerr = 1;
  5430  0665  157B               	bsf	_eusartRxLastError,2	;volatile
  5431  0666                     i1l1650:
  5432                           
  5433                           ;mcc_generated_files/eusart.c: 182:         EUSART_OverrunErrorHandler();
  5434  0666  0020               	movlb	0	; select bank0
  5435  0667  0857               	movf	_EUSART_OverrunErrorHandler+1,w
  5436  0668  008A               	movwf	10
  5437  0669  0856               	movf	_EUSART_OverrunErrorHandler,w
  5438  066A  000A               	callw
  5439  066B  3186               	pagesel	$
  5440  066C                     i1l1652:
  5441                           
  5442                           ;mcc_generated_files/eusart.c: 185:     if(eusartRxLastError.status){
  5443  066C  087B               	movf	_eusartRxLastError,w	;volatile
  5444  066D  1903               	btfsc	3,2
  5445  066E  2E70               	goto	u42_21
  5446  066F  2E71               	goto	u42_20
  5447  0670                     u42_21:
  5448  0670  2E78               	goto	i1l1656
  5449  0671                     u42_20:
  5450  0671                     i1l1654:
  5451                           
  5452                           ;mcc_generated_files/eusart.c: 186:         EUSART_ErrorHandler();
  5453  0671  0020               	movlb	0	; select bank0
  5454  0672  0855               	movf	_EUSART_ErrorHandler+1,w
  5455  0673  008A               	movwf	10
  5456  0674  0854               	movf	_EUSART_ErrorHandler,w
  5457  0675  000A               	callw
  5458  0676  3186               	pagesel	$
  5459                           
  5460                           ;mcc_generated_files/eusart.c: 187:     } else {
  5461  0677  2E7B               	goto	i1l149
  5462  0678                     i1l1656:
  5463                           
  5464                           ;mcc_generated_files/eusart.c: 188:         EUSART_RxDataHandler();
  5465  0678  3185  252C  3186   	fcall	_EUSART_RxDataHandler
  5466  067B                     i1l149:
  5467  067B  0008               	return
  5468  067C                     __end_of_EUSART_Receive_ISR:
  5469                           
  5470                           	psect	text28
  5471  0773                     __ptext28:	
  5472 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5473 ;; Defined at:
  5474 ;;		line 222 in file "mcc_generated_files/eusart.c"
  5475 ;; Parameters:    Size  Location     Type
  5476 ;;		None
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      void 
  5481 ;; Registers used:
  5482 ;;		None
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5488 ;;      Params:         0       0       0       0       0       0
  5489 ;;      Locals:         0       0       0       0       0       0
  5490 ;;      Temps:          0       0       0       0       0       0
  5491 ;;      Totals:         0       0       0       0       0       0
  5492 ;;Total ram usage:        0 bytes
  5493 ;; Hardware stack levels used: 1
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		_EUSART_Initialize
  5498 ;;		_EUSART_Receive_ISR
  5499 ;; This function uses a non-reentrant model
  5500 ;;
  5501                           
  5502                           
  5503                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5504  0773                     _EUSART_DefaultOverrunErrorHandler:
  5505  0773                     i1l1514:	
  5506                           ;incstack = 0
  5507                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5508                           
  5509                           
  5510                           ;mcc_generated_files/eusart.c: 226:     RCSTAbits.CREN = 0;
  5511  0773  0023               	movlb	3	; select bank3
  5512  0774  121D               	bcf	29,4	;volatile
  5513                           
  5514                           ;mcc_generated_files/eusart.c: 227:     RCSTAbits.CREN = 1;
  5515  0775  161D               	bsf	29,4	;volatile
  5516  0776                     i1l160:
  5517  0776  0008               	return
  5518  0777                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5519                           
  5520                           	psect	text29
  5521  0784                     __ptext29:	
  5522 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5523 ;; Defined at:
  5524 ;;		line 217 in file "mcc_generated_files/eusart.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;		None
  5527 ;; Auto vars:     Size  Location     Type
  5528 ;;		None
  5529 ;; Return value:  Size  Location     Type
  5530 ;;                  1    wreg      void 
  5531 ;; Registers used:
  5532 ;;		None
  5533 ;; Tracked objects:
  5534 ;;		On entry : 0/0
  5535 ;;		On exit  : 0/0
  5536 ;;		Unchanged: 0/0
  5537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5538 ;;      Params:         0       0       0       0       0       0
  5539 ;;      Locals:         0       0       0       0       0       0
  5540 ;;      Temps:          0       0       0       0       0       0
  5541 ;;      Totals:         0       0       0       0       0       0
  5542 ;;Total ram usage:        0 bytes
  5543 ;; Hardware stack levels used: 1
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_EUSART_Initialize
  5548 ;;		_EUSART_Receive_ISR
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5554  0784                     _EUSART_DefaultFramingErrorHandler:
  5555  0784                     i1l157:	
  5556                           ;incstack = 0
  5557                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5558                           
  5559  0784  0008               	return
  5560  0785                     __end_of_EUSART_DefaultFramingErrorHandler:
  5561                           
  5562                           	psect	text30
  5563  0777                     __ptext30:	
  5564 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5565 ;; Defined at:
  5566 ;;		line 231 in file "mcc_generated_files/eusart.c"
  5567 ;; Parameters:    Size  Location     Type
  5568 ;;		None
  5569 ;; Auto vars:     Size  Location     Type
  5570 ;;		None
  5571 ;; Return value:  Size  Location     Type
  5572 ;;                  1    wreg      void 
  5573 ;; Registers used:
  5574 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5575 ;; Tracked objects:
  5576 ;;		On entry : 0/0
  5577 ;;		On exit  : 0/0
  5578 ;;		Unchanged: 0/0
  5579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5580 ;;      Params:         0       0       0       0       0       0
  5581 ;;      Locals:         0       0       0       0       0       0
  5582 ;;      Temps:          0       0       0       0       0       0
  5583 ;;      Totals:         0       0       0       0       0       0
  5584 ;;Total ram usage:        0 bytes
  5585 ;; Hardware stack levels used: 1
  5586 ;; Hardware stack levels required when called: 2
  5587 ;; This function calls:
  5588 ;;		_EUSART_RxDataHandler
  5589 ;; This function is called by:
  5590 ;;		_EUSART_Initialize
  5591 ;;		_EUSART_Receive_ISR
  5592 ;; This function uses a non-reentrant model
  5593 ;;
  5594                           
  5595                           
  5596                           ;psect for function _EUSART_DefaultErrorHandler
  5597  0777                     _EUSART_DefaultErrorHandler:
  5598  0777                     i1l1516:	
  5599                           ;incstack = 0
  5600                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5601                           
  5602                           
  5603                           ;mcc_generated_files/eusart.c: 233:     EUSART_RxDataHandler();
  5604  0777  3185  252C  3187   	fcall	_EUSART_RxDataHandler
  5605  077A                     i1l163:
  5606  077A  0008               	return
  5607  077B                     __end_of_EUSART_DefaultErrorHandler:
  5608                           
  5609                           	psect	text31
  5610  052C                     __ptext31:	
  5611 ;; *************** function _EUSART_RxDataHandler *****************
  5612 ;; Defined at:
  5613 ;;		line 194 in file "mcc_generated_files/eusart.c"
  5614 ;; Parameters:    Size  Location     Type
  5615 ;;		None
  5616 ;; Auto vars:     Size  Location     Type
  5617 ;;  tModbusData     2    7[COMMON] PTR struct _TModbusData
  5618 ;;		 -> MOS_tModbusData(204), NULL(0), 
  5619 ;;  ucReceivedBy    1    6[COMMON] unsigned char 
  5620 ;; Return value:  Size  Location     Type
  5621 ;;                  1    wreg      void 
  5622 ;; Registers used:
  5623 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5624 ;; Tracked objects:
  5625 ;;		On entry : 0/0
  5626 ;;		On exit  : 0/0
  5627 ;;		Unchanged: 0/0
  5628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5629 ;;      Params:         0       0       0       0       0       0
  5630 ;;      Locals:         3       0       0       0       0       0
  5631 ;;      Temps:          4       0       0       0       0       0
  5632 ;;      Totals:         7       0       0       0       0       0
  5633 ;;Total ram usage:        7 bytes
  5634 ;; Hardware stack levels used: 1
  5635 ;; Hardware stack levels required when called: 1
  5636 ;; This function calls:
  5637 ;;		_Mos_PtGetModbusObject
  5638 ;; This function is called by:
  5639 ;;		_EUSART_Receive_ISR
  5640 ;;		_EUSART_DefaultErrorHandler
  5641 ;; This function uses a non-reentrant model
  5642 ;;
  5643                           
  5644                           
  5645                           ;psect for function _EUSART_RxDataHandler
  5646  052C                     _EUSART_RxDataHandler:
  5647  052C                     i1l1416:	
  5648                           ;incstack = 0
  5649                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5650                           
  5651  052C                     i1l1418:
  5652                           
  5653                           ;mcc_generated_files/eusart.c: 197:     tModbusData = Mos_PtGetModbusObject();
  5654  052C  3187  2766  3185   	fcall	_Mos_PtGetModbusObject
  5655  052F  0871               	movf	?_Mos_PtGetModbusObject+1,w
  5656  0530  00F8               	movwf	EUSART_RxDataHandler@tModbusData+1
  5657  0531  0870               	movf	?_Mos_PtGetModbusObject,w
  5658  0532  00F7               	movwf	EUSART_RxDataHandler@tModbusData
  5659  0533                     i1l1420:
  5660  0533                     i1l1422:
  5661                           
  5662                           ;mcc_generated_files/eusart.c: 200:     ucReceivedByte = RCREG;
  5663  0533  0023               	movlb	3	; select bank3
  5664  0534  0819               	movf	25,w	;volatile
  5665  0535  00F2               	movwf	??_EUSART_RxDataHandler
  5666  0536  0872               	movf	??_EUSART_RxDataHandler,w
  5667  0537  00F6               	movwf	EUSART_RxDataHandler@ucReceivedByte
  5668  0538                     i1l1424:
  5669                           
  5670                           ;mcc_generated_files/eusart.c: 202:     if(tModbusData->u8OneFrameFinish ==1)
  5671  0538  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5672  0539  3E64               	addlw	100
  5673  053A  0086               	movwf	6
  5674  053B  3000               	movlw	0
  5675  053C  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5676  053D  0087               	movwf	7
  5677  053E  0301               	decf	1,w
  5678  053F  1D03               	btfss	3,2
  5679  0540  2D42               	goto	u30_21
  5680  0541  2D43               	goto	u30_20
  5681  0542                     u30_21:
  5682  0542  2D44               	goto	i1l1428
  5683  0543                     u30_20:
  5684  0543  2D81               	goto	i1l153
  5685  0544                     i1l1428:
  5686                           
  5687                           ;mcc_generated_files/eusart.c: 207:         tModbusData->auReceiveBuff[tModbusData->u8Re
      +                          ceivedByteCount ++] = ucReceivedByte;
  5688  0544  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5689  0545  3E65               	addlw	101
  5690  0546  0086               	movwf	6
  5691  0547  3000               	movlw	0
  5692  0548  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5693  0549  0087               	movwf	7
  5694  054A  0801               	movf	1,w
  5695  054B  00F2               	movwf	??_EUSART_RxDataHandler
  5696  054C  01F3               	clrf	??_EUSART_RxDataHandler+1
  5697  054D  0872               	movf	??_EUSART_RxDataHandler,w
  5698  054E  0777               	addwf	EUSART_RxDataHandler@tModbusData,w
  5699  054F  00F4               	movwf	??_EUSART_RxDataHandler+2
  5700  0550  0873               	movf	??_EUSART_RxDataHandler+1,w
  5701  0551  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5702  0552  00F5               	movwf	??_EUSART_RxDataHandler+3
  5703  0553  0874               	movf	??_EUSART_RxDataHandler+2,w
  5704  0554  0086               	movwf	6
  5705  0555  0875               	movf	??_EUSART_RxDataHandler+3,w
  5706  0556  0087               	movwf	7
  5707  0557  0876               	movf	EUSART_RxDataHandler@ucReceivedByte,w
  5708  0558  0081               	movwf	1
  5709  0559  3001               	movlw	1
  5710  055A  00F2               	movwf	??_EUSART_RxDataHandler
  5711  055B  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5712  055C  3E65               	addlw	101
  5713  055D  0086               	movwf	6
  5714  055E  3000               	movlw	0
  5715  055F  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5716  0560  0087               	movwf	7
  5717  0561  0872               	movf	??_EUSART_RxDataHandler,w
  5718  0562  0781               	addwf	1,f
  5719                           
  5720                           ;mcc_generated_files/eusart.c: 208:         tModbusData->u8TimeoutCount = 0;
  5721  0563  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5722  0564  3ECB               	addlw	203
  5723  0565  0086               	movwf	6
  5724  0566  3000               	movlw	0
  5725  0567  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5726  0568  0087               	movwf	7
  5727  0569  0181               	clrf	1
  5728                           
  5729                           ;mcc_generated_files/eusart.c: 210:     if(tModbusData->u8ReceivedByteCount ==1)
  5730  056A  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5731  056B  3E65               	addlw	101
  5732  056C  0086               	movwf	6
  5733  056D  3000               	movlw	0
  5734  056E  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5735  056F  0087               	movwf	7
  5736  0570  0301               	decf	1,w
  5737  0571  1D03               	btfss	3,2
  5738  0572  2D74               	goto	u31_21
  5739  0573  2D75               	goto	u31_20
  5740  0574                     u31_21:
  5741  0574  2D81               	goto	i1l153
  5742  0575                     u31_20:
  5743  0575                     i1l1430:
  5744                           
  5745                           ;mcc_generated_files/eusart.c: 211:         {;mcc_generated_files/eusart.c: 212:        
      +                               tModbusData->u8TimeoutStart=1;
  5746  0575  0877               	movf	EUSART_RxDataHandler@tModbusData,w
  5747  0576  3E66               	addlw	102
  5748  0577  00F2               	movwf	??_EUSART_RxDataHandler
  5749  0578  3000               	movlw	0
  5750  0579  3D78               	addwfc	EUSART_RxDataHandler@tModbusData+1,w
  5751  057A  00F3               	movwf	??_EUSART_RxDataHandler+1
  5752  057B  0872               	movf	??_EUSART_RxDataHandler,w
  5753  057C  0086               	movwf	6
  5754  057D  0873               	movf	??_EUSART_RxDataHandler+1,w
  5755  057E  0087               	movwf	7
  5756  057F  3001               	movlw	1
  5757  0580  0081               	movwf	1
  5758  0581                     i1l153:
  5759  0581  0008               	return
  5760  0582                     __end_of_EUSART_RxDataHandler:
  5761                           
  5762                           	psect	text32
  5763  0766                     __ptext32:	
  5764 ;; *************** function _Mos_PtGetModbusObject *****************
  5765 ;; Defined at:
  5766 ;;		line 156 in file "Modbus_uart/Modbus.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;		None
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;		None
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  2    0[COMMON] PTR struct _TModbusData
  5773 ;; Registers used:
  5774 ;;		None
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4
  5780 ;;      Params:         2       0       0       0       0       0
  5781 ;;      Locals:         0       0       0       0       0       0
  5782 ;;      Temps:          0       0       0       0       0       0
  5783 ;;      Totals:         2       0       0       0       0       0
  5784 ;;Total ram usage:        2 bytes
  5785 ;; Hardware stack levels used: 1
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_EUSART_RxDataHandler
  5790 ;;		_TMR0_DefaultInterruptHandler
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           
  5795                           ;psect for function _Mos_PtGetModbusObject
  5796  0766                     _Mos_PtGetModbusObject:
  5797  0766                     i1l1398:	
  5798                           ;incstack = 0
  5799                           ; Regs used in _Mos_PtGetModbusObject: []
  5800                           
  5801                           
  5802                           ;Modbus_uart/Modbus.c: 158:  return &MOS_tModbusData;
  5803  0766  3020               	movlw	32
  5804  0767  00F1               	movwf	?_Mos_PtGetModbusObject+1
  5805  0768  3094               	movlw	148
  5806  0769  00F0               	movwf	?_Mos_PtGetModbusObject
  5807  076A                     i1l382:
  5808  076A  0008               	return
  5809  076B                     __end_of_Mos_PtGetModbusObject:
  5810  007E                     btemp	set	126	;btemp
  5811  007E                     int$flags	set	126
  5812  007E                     wtemp0	set	126
  5813  2094                     
  5814                           	psect	config
  5815                           
  5816                           ;Config register CONFIG1 @ 0x8007
  5817                           ;	Oscillator Selection
  5818                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  5819                           ;	Watchdog Timer Enable
  5820                           ;	WDTE = OFF, WDT disabled
  5821                           ;	Power-up Timer Enable
  5822                           ;	PWRTE = OFF, PWRT disabled
  5823                           ;	MCLR Pin Function Select
  5824                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  5825                           ;	Flash Program Memory Code Protection
  5826                           ;	CP = OFF, Program memory code protection is disabled
  5827                           ;	Data Memory Code Protection
  5828                           ;	CPD = OFF, Data memory code protection is disabled
  5829                           ;	Brown-out Reset Enable
  5830                           ;	BOREN = ON, Brown-out Reset enabled
  5831                           ;	Clock Out Enable
  5832                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  5833                           ;	Internal/External Switchover
  5834                           ;	IESO = ON, Internal/External Switchover mode is enabled
  5835                           ;	Fail-Safe Clock Monitor Enable
  5836                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5837  8007                     	org	32775
  5838  8007  3FE4               	dw	16356
  5839                           
  5840                           ;Config register CONFIG2 @ 0x8008
  5841                           ;	Flash Memory Self-Write Protection
  5842                           ;	WRT = OFF, Write protection off
  5843                           ;	PLL Enable
  5844                           ;	PLLEN = OFF, 4x PLL disabled
  5845                           ;	Stack Overflow/Underflow Reset Enable
  5846                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5847                           ;	Brown-out Reset Voltage Selection
  5848                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  5849                           ;	Low-Voltage Programming Enable
  5850                           ;	LVP = ON, Low-voltage programming enabled
  5851  8008                     	org	32776
  5852  8008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    512
    Data        22
    BSS         6
    Persistent  45
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     50      65
    BANK1            68      0      22
    BANK2             0      0       0
    BANK3             0      0       0
    BANK4             0      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    crc16@puchMsg	PTR unsigned char  size(2) Largest target is 204
		 -> MOS_tModbusData(BIGRAM[204]), 

    TMR0_DefaultInterruptHandler@tModbusData	PTR struct _TModbusData size(2) Largest target is 204
		 -> MOS_tModbusData(BIGRAM[204]), NULL(NULL[0]), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    sp__Mos_PtGetModbusObject	PTR struct _TModbusData size(2) Largest target is 204
		 -> MOS_tModbusData(BIGRAM[204]), 

    EUSART_RxDataHandler@tModbusData	PTR struct _TModbusData size(2) Largest target is 204
		 -> MOS_tModbusData(BIGRAM[204]), NULL(NULL[0]), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _TMR0_ISR->_TMR0_DefaultInterruptHandler
    _TMR0_DefaultInterruptHandler->_Mos_PtGetModbusObject
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler
    _EUSART_RxDataHandler->_Mos_PtGetModbusObject

Critical Paths under _main in BANK0

    _main->_MOS_vModBusHandler
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _MOS_vModBusHandler->_MOS_vModbudFun3
    _MOS_vModbudFun6->_crc16
    _MOS_vModbudFun3->_crc16

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4212
                  _EUSART_Initialize
                 _MOS_vModBusHandler
                    _MOS_vModbusInit
           _MOS_vModbusReceiveEnalbe
             _PIN_MANAGER_Initialize
                  _SYSTEM_Initialize
                    _TMR0_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     588
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Initialize                                      1     1      0      98
                                              2 BANK0      1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOS_vModbusInit                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _MOS_vModBusHandler                                  13    13      0    3036
                                             37 BANK0     13    13      0
                    _MOS_vModbudFun3
                    _MOS_vModbudFun6
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _MOS_vModbudFun6                                     15    15      0    1118
                                             15 BANK0     15    15      0
                       _EUSART_Write
           _MOS_vModbusReceiveEnalbe
          _MOS_vModbusTransmitEnalbe
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _MOS_vModbudFun3                                     22    22      0    1143
                                             15 BANK0     22    22      0
                       _EUSART_Write
           _MOS_vModbusReceiveEnalbe
          _MOS_vModbusTransmitEnalbe
                              _crc16
 ---------------------------------------------------------------------------------
 (2) _crc16                                               15    11      4     638
                                              0 BANK0     15    11      4
 ---------------------------------------------------------------------------------
 (3) _MOS_vModbusTransmitEnalbe                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MOS_vModbusReceiveEnalbe                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _EUSART_Write                                         1     1      0      22
                                              0 BANK0      1     1      0
                  _EUSART_is_tx_done
 ---------------------------------------------------------------------------------
 (4) _EUSART_is_tx_done                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0     472
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0     112
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         4     4      0     112
                                              2 COMMON     4     4      0
              _Mos_PtGetModbusObject
 ---------------------------------------------------------------------------------
 (6) _EUSART_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_Receive_ISR                                   0     0      0     360
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _EUSART_DefaultErrorHandler                           0     0      0     180
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (7) _EUSART_RxDataHandler                                 7     7      0     180
                                              2 COMMON     7     7      0
              _Mos_PtGetModbusObject
 ---------------------------------------------------------------------------------
 (8) _Mos_PtGetModbusObject                                2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Initialize
     _EUSART_SetErrorHandler
     _EUSART_SetFramingErrorHandler
     _EUSART_SetOverrunErrorHandler
     _EUSART_SetRxInterruptHandler
     _EUSART_SetTxInterruptHandler
   _MOS_vModBusHandler
     _MOS_vModbudFun3
       _EUSART_Write
         _EUSART_is_tx_done
       _MOS_vModbusReceiveEnalbe
       _MOS_vModbusTransmitEnalbe
       _crc16
     _MOS_vModbudFun6
       _EUSART_Write
       _MOS_vModbusReceiveEnalbe
       _MOS_vModbusTransmitEnalbe
       _crc16
     _crc16
   _MOS_vModbusInit
   _MOS_vModbusReceiveEnalbe
   _PIN_MANAGER_Initialize
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _WDT_Initialize
   _TMR0_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
         _Mos_PtGetModbusObject
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *
   _TMR0_ISR *
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
       _Mos_PtGetModbusObject

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             160      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      64       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     32      41       6       81.2%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               44      0      16       8       32.4%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK2                0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK3                0      0       0      12        0.0%
BITBANK4            20      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK4                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
DATA                 0      0      64      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sat Jun 12 22:29:02 2021

                ?_EUSART_SetRxInterruptHandler 0020                       __size_of_MOS_vModbusInit 000B  
                                           l25 06AC                                             l51 0700  
                                           l54 073A                                             l57 076E  
                              _timer0ReloadVal 007C                                            l118 0652  
                                          l127 0772                                            l136 06E0  
                                          l321 05D6                                            l139 06ED  
                                          l172 0765                                            l341 0780  
                                          l166 075F                                            l262 06D8  
                                          l175 074D                                            l344 077B  
                                          l336 0733                                            l361 027B  
                                          l169 0759                                            l346 077D  
                                          l178 0753                                            l339 077E  
                                          l355 017A                                            l195 0741  
                                          l349 010F                                            l365 052B  
                                          l278 0747                                            l378 0521  
                                          u320 05C7                                            u321 05C6  
                                          u280 06E5                                            u440 0485  
                                          u281 06E4                                            u441 0484  
                                          u290 06ED                                            u370 0119  
                                          u450 04F0                                            u291 06EC  
                                          u371 0118                                            u355 00C0  
                                          u451 04EF                                            u380 0177  
                                          u460 04F6                                            u381 0176  
                                          u365 00E9                                            u461 04F5  
                                          u390 0278                                            u375 0115  
                                          u391 0277                                            u455 04EC  
                                          u385 0173                                            u395 0274  
                                          _Reg 00A0                         ??_EUSART_RxDataHandler 0072  
               ?_EUSART_SetFramingErrorHandler 0020                                            wreg 0009  
                                         l1400 074E                                           l1410 06DB  
                                         l1402 0748                                           l1412 06DE  
                                         l1404 075A                                           l1500 0633  
                                         l1414 06E5                                           l1406 0754  
                                         l1510 064F                                           l1502 0635  
                                         l1440 05A2                                           l1600 01DC  
                                         l1408 0760                                           l1512 0650  
                                         l1504 0637                                           l1432 0742  
                                         l1442 05AF                                           l1434 0582  
                                         l1530 005D                                           l1610 0216  
                                         l1602 01EC                                           l1506 063F  
                                         l1450 0696                                           l1436 058C  
                                         l1444 05BB                                           l1540 008E  
                                         l1532 0068                                           l1620 0250  
                                         l1612 021A                                           l1604 01F0  
                                         l1508 0647                                           l1460 06A6  
                                         l1452 0699                                           l1446 05C7  
                                         l1438 059E                                           l1550 00BA  
                                         l1542 009E                                           l1534 0076  
                                         l1630 026E                                           l1622 0254  
                                         l1614 022A                                           l1606 0202  
                                         l1462 06AA                                           l1454 069C  
                                         l1470 076B                                           l1560 0129  
                                         l1552 00BD                                           l1544 00A2  
                                         l1536 0084                                           l1632 0278  
                                         l1624 0257                                           l1616 023C  
                                         l1608 0206                                           l1464 0734  
                                         l1456 069E                                           l1480 06D0  
                                         l1472 06C3                                           l1720 067C  
                                         l1394 076F                                           l1570 0156  
                                         l1562 013B                                           l1554 00E2  
                                         l1546 00A6                                           l1538 008A  
                                         l1626 025B                                           l1618 0240  
                                         l1490 061A                                           l1466 0737  
                                         l1458 06A1                                           l1482 06D1  
                                         l1474 06C8                                           l1634 06EE  
                                         l1730 0690                                           l1722 0688  
                                         l1572 015A                                           l1564 013F  
                                         l1556 00E6                                           l1548 00B6  
                                         l1628 0269                                           l1580 017B  
                                         l1484 073B                                           l1492 0622  
                                         l1468 0738                                           l1476 06CB  
                                         l1724 068B                                           l1574 0168  
                                         l1566 014F                                           l1558 0119  
                                         l1590 01AE                                           l1582 0184  
                                         l1670 047C                                           l1486 073F  
                                         l1494 062C                                           l1478 06CF  
                                         l1726 068E                                           l1576 016D  
                                         l1568 0153                                           l1592 01B2  
                                         l1584 0192                                           l1752 0507  
                                         l1680 04CA                                           l1496 062F  
                                         l1488 0618                                           l1728 068F  
                                         l1578 0177                                           l1594 01C2  
                                         l1586 01A0                                           l1690 04FB  
                                         l1682 04E6                                           l1674 0486  
                                         l1666 0729                                           l1498 0631  
                                         l1596 01C6                                           l1588 01A8  
                                         l1684 04F0                                           l1676 0498  
                                         l1668 072E                                           l1598 01D8  
                                         l1694 04FF                                           l1678 04AF  
                                         l1688 04F7                                           l1698 0521  
                                         _LATA 010C                                           _LATB 010D  
                                         _TMR0 0015                                           _WPUA 020C  
                                         _WPUB 020D                                           _main 067C  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                           start 0038  
                MOS_vModbudFun6@u16TransmitCRC 0034                        __end_of_TMR0_Initialize 06D9  
               ??_TMR0_DefaultInterruptHandler 0072                                  ?_EUSART_Write 0070  
               __size_of_OSCILLATOR_Initialize 0007                  __end_of_OSCILLATOR_Initialize 073B  
                                        ?_main 0070                                          i1l142 0783  
                                        i1l160 0776                                          i1l240 0036  
                                        i1l153 0581                                          i1l241 0036  
                                        i1l233 0012                                          i1l163 077A  
                                        i1l236 0026                                          i1l157 0784  
                                        i1l149 067B                                          i1l275 0710  
                                        i1l285 0617                                          i1l382 076A  
                                        _RCREG 0199                                          _RCSTA 019D  
                                        u30_20 0543                                          u30_21 0542  
                                        u31_20 0575                                          u31_21 0574  
                                        u40_20 0659                                          u40_21 0658  
                                        u41_20 0665                                          u33_20 05EE  
                                        u41_21 0664                                          u33_21 05ED  
                                        u42_20 0671                                          u34_20 0604  
                                        u50_20 001B                                          u42_21 0670  
                                        u34_21 0603                                          u50_21 001A  
                                        u43_20 070B                                          u51_20 0020  
                                        u43_21 070A                                          u51_21 001F  
                                        u52_20 002B                                          u52_21 002A  
                                        u53_20 0030                                          u53_21 002F  
                                        u47_20 000A                                          u47_21 0009  
                                        u48_20 000E                                          u48_21 000D  
                                        u49_20 0016                                          u49_21 0015  
                                        _TRISA 008C                                          _TRISB 008D  
                                        _TXREG 019A                                          _TXSTA 019E  
            __size_of_TMR0_SetInterruptHandler 0006                      ?_TMR0_SetInterruptHandler 0020  
                             __end_of_TMR0_ISR 0711                                          _crc16 0582  
                               _WDT_Initialize 076B                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
            MOS_vModBusHandler@u16CalculateCRC 004C                                __initialization 003A  
                                 __end_of_main 0696                                 ??_EUSART_Write 0020  
                  ?_INTERRUPT_InterruptManager 0070                    ??_MOS_vModbusTransmitEnalbe 0020  
                            ??_MOS_vModbudFun3 002F                              ??_MOS_vModbudFun6 002F  
               ??_EUSART_SetRxInterruptHandler 0022                                         ??_main 0052  
                            ??_MOS_vModbusInit 0020                         __end_of_WDT_Initialize 076F  
                                       ?_crc16 0020      __end_of_EUSART_DefaultFramingErrorHandler 0785  
   __size_of_EUSART_DefaultFramingErrorHandler 0001            ??_EUSART_DefaultFramingErrorHandler 0070  
           ?_EUSART_DefaultFramingErrorHandler 0070              _EUSART_DefaultFramingErrorHandler 0784  
                                       _ADCON0 009D                                         _ADCON1 009E  
                   _EUSART_OverrunErrorHandler 0056                                         _ADRESH 009C  
                                       _ADRESL 009B                                         _ANSELA 018C  
                                       _ANSELB 018D                                         _BORCON 0116  
                                       i1l1420 0533                                         i1l1430 0575  
                                       i1l1422 0533                                         i1l1424 0538  
                                       i1l1416 052C                                         i1l1520 05D7  
                                       i1l1418 052C                                         i1l1514 0773  
                                       i1l1522 05DE                                         i1l1428 0544  
                                       i1l1516 0777                                         i1l1524 05E3  
                                       i1l1526 05EE                                         i1l1518 05D7  
                                       i1l1710 0016                                         i1l1640 0654  
                                       i1l1528 0604                                         i1l1712 001B  
                                       i1l1704 0006                                         i1l1650 0666  
                                       i1l1642 0659                                         i1l1714 0020  
                                       i1l1706 000A                                         i1l1652 066C  
                                       i1l1644 065A                                         i1l1636 0781  
                                       i1l1660 0702                                         i1l1716 002B  
                                       i1l1708 000E                                         i1l1398 0766  
                                       i1l1654 0671                                         i1l1646 0660  
                                       i1l1638 0653                                         i1l1662 0705  
                                       i1l1718 0030                                         i1l1656 0678  
                                       i1l1648 0665                                         i1l1664 070B  
                                       i1l1658 0701                                         _OSCCON 0099  
                                       _SPBRGH 019C                                         _SPBRGL 019B  
                                       _WDTCON 0097                        ??_Mos_PtGetModbusObject 0072  
                          _EUSART_Transmit_ISR 0781                               ?_TMR0_Initialize 0070  
                              ?_WDT_Initialize 0070       TMR0_SetInterruptHandler@InterruptHandler 0020  
                         ?_EUSART_Transmit_ISR 0070                      _MOS_vModbusTransmitEnalbe 077B  
                            _SYSTEM_Initialize 06EE                EUSART_RxDataHandler@tModbusData 0077  
                                 crc16@puchMsg 0020                        __end_of__initialization 0059  
                           ?_SYSTEM_Initialize 0070           __end_of_EUSART_SetTxInterruptHandler 074E  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0748  
                               __pcstackCOMMON 0070                                   __pidataBANK1 06AD  
                                __end_of_crc16 05D7                            ??_SYSTEM_Initialize 0023  
                                    ?_TMR0_ISR 0070              __size_of_MOS_vModbusReceiveEnalbe 0003  
                    ?_MOS_vModbusReceiveEnalbe 0070                                 _OPTION_REGbits 0095  
                  __size_of_MOS_vModBusHandler 00B0                ??_EUSART_SetOverrunErrorHandler 0022  
                                      ??_crc16 0024                      __end_of_SYSTEM_Initialize 0701  
                        ??_EUSART_Transmit_ISR 0070           TMR0_DefaultInterruptHandler@u16Count 005E  
                                   __pbssBANK0 005E                           __end_of_EUSART_Write 06EE  
                                   __pnvCOMMON 007C                    __size_of_EUSART_Receive_ISR 0029  
                MOS_vModbudFun3@u16RegisterAdd 003B                  MOS_vModbudFun3@u16RegisterLen 003D  
                                   __pmaintext 067C                  ?_EUSART_SetTxInterruptHandler 0020  
             _EUSART_TxDefaultInterruptHandler 005C               __end_of_TMR0_SetInterruptHandler 0748  
                                   ??_TMR0_ISR 0076                                     __pintentry 0004  
                                      _BAUDCON 019F                                        _APFCON0 011D  
                                      _APFCON1 011E                   ??_EUSART_DefaultErrorHandler 0079  
                      __size_of_ADC_Initialize 0007                                _MOS_tModbusData 2094  
                              _MOS_tModbusPara 0060                  __size_of_EUSART_RxDataHandler 0056  
                                      _OSCTUNE 0098                       ??_EUSART_SetErrorHandler 0022  
                            __end_of_auchCRCHi 047C                              __end_of_auchCRCLo 037C  
                              _MOS_vModbudFun3 005D                                _MOS_vModbudFun6 017B  
                         _ADC_InterruptHandler 0079            __size_of_EUSART_DefaultErrorHandler 0004  
                              _MOS_vModbusInit 0729                                        __ptext1 06EE  
                                      __ptext2 076B                                        __ptext3 06C3  
                                      __ptext4 0742                                        __ptext5 0696  
                                      __ptext6 0734                                        __ptext7 0618  
                                      __ptext8 0748                                        __ptext9 074E  
                        _OSCILLATOR_Initialize 0734                       ??_PIN_MANAGER_Initialize 0020  
                   __size_of_SYSTEM_Initialize 0013                                        clrloop0 071E  
                         end_of_initialization 0059          __end_of_EUSART_SetOverrunErrorHandler 075A  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 0754  
                                      init_ram 0711                  MOS_vModbudFun3@u16TransmitCRC 003F  
                                      initloop 0712      MOS_vModBusHandler@u16ReceivedFunctionCode 004E  
                            _EUSART_Initialize 0618                             ?_EUSART_Initialize 0070  
           __size_of_MOS_vModbusTransmitEnalbe 0003                                      _RCSTAbits 019D  
                      MOS_vModbudFun6@u16value 003A                                  crc16@uchCRCHi 002D  
                                crc16@uchCRCLo 002E                            ??_EUSART_Initialize 0022  
                             ??_WDT_Initialize 0020                 ??_EUSART_SetTxInterruptHandler 0022  
               __size_of_Mos_PtGetModbusObject 0005                       _TMR0_SetInterruptHandler 0742  
                __end_of_Mos_PtGetModbusObject 076B                          __size_of_EUSART_Write 0015  
              __size_of_EUSART_SetErrorHandler 0006                        __end_of_MOS_vModbudFun3 017B  
                      __end_of_MOS_vModbudFun6 027C                        __end_of_MOS_vModbusInit 0734  
                    __end_of_EUSART_Initialize 0653           MOS_vModBusHandler@u16ReceivedAddress 0051  
             __end_of_MOS_vModbusReceiveEnalbe 0781                                      _TXSTAbits 019E  
           __end_of_EUSART_DefaultErrorHandler 077B                     _EUSART_DefaultErrorHandler 0777  
                                 _EUSART_Write 06D9                              __size_of_TMR0_ISR 0010  
                               _ADC_Initialize 073B                         ?_OSCILLATOR_Initialize 0070  
                          start_initialization 003A                       __size_of_TMR0_Initialize 0016  
              __size_of_PIN_MANAGER_Initialize 0017   EUSART_SetRxInterruptHandler@interruptHandler 0020  
 EUSART_SetTxInterruptHandler@interruptHandler 0020                 ?_EUSART_SetOverrunErrorHandler 0020  
                   _EUSART_FramingErrorHandler 0058                         _EUSART_SetErrorHandler 0760  
                       __end_of_ADC_Initialize 0742                                    __pdataBANK1 00A0  
                                  crc16@uIndex 0029                     __end_of_MOS_vModBusHandler 052C  
                                  __pbssBIGRAM 2094                    __end_of_EUSART_Transmit_ISR 0784  
                                  __pbssCOMMON 0079                                      ___latbits 0001  
                                __pcstackBANK0 0020                               ?_MOS_vModbudFun3 0070  
                             ?_MOS_vModbudFun6 0070                     __end_of_EUSART_Receive_ISR 067C  
                   __size_of_EUSART_Initialize 003B                               ?_MOS_vModbusInit 0070  
             _EUSART_RxDefaultInterruptHandler 005A                          _TMR0_InterruptHandler 0052  
                                    __pnvBANK0 0052                                      _auchCRCHi 037C  
                                    _auchCRCLo 027C                   __end_of_EUSART_RxDataHandler 0582  
                       _PIN_MANAGER_Initialize 0696                       _MOS_vModbusReceiveEnalbe 077E  
                              ?_ADC_Initialize 0070                   ??_INTERRUPT_InterruptManager 0079  
                               __size_of_crc16 0055                              ??_TMR0_Initialize 0022  
       EUSART_SetErrorHandler@interruptHandler 0020                                       _LATBbits 010D  
                                    clear_ram0 071D                                       _PIE1bits 0091  
                            _eusartRxLastError 007B            __size_of_INTERRUPT_InterruptManager 0034  
                   ??_TMR0_SetInterruptHandler 0022                                       _PIR1bits 0011  
              ??_EUSART_SetFramingErrorHandler 0022                              _EUSART_is_tx_done 076F  
                             MOS_vModbudFun3@i 0043                               MOS_vModbudFun3@j 0041  
                             MOS_vModbudFun6@i 003C                               MOS_vModbudFun6@j 0036  
                                     _TMR0_ISR 0701      __end_of_EUSART_DefaultOverrunErrorHandler 0777  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0070  
           ?_EUSART_DefaultOverrunErrorHandler 0070              _EUSART_DefaultOverrunErrorHandler 0773  
                           ?_EUSART_is_tx_done 0070                                     _ADCON0bits 009D  
                          ??_EUSART_is_tx_done 0020                      __end_of_EUSART_is_tx_done 0773  
             MOS_vModBusHandler@u16ReceivedCRC 004F                        ??_OSCILLATOR_Initialize 0020  
                          _EUSART_ErrorHandler 0054                    ?_EUSART_DefaultErrorHandler 0070  
                        _Mos_PtGetModbusObject 0766                           _EUSART_RxDataHandler 052C  
                                     __ptext10 0754                                       __ptext11 075A  
                                     __ptext20 077E                                       __ptext12 0760  
                                     __ptext21 06D9                                       __ptext13 073B  
                                     __ptext30 0777                                       __ptext22 076F  
                                     __ptext14 0729                                       __ptext31 052C  
                                     __ptext15 047C                                       __ptext32 0766  
                                     __ptext24 0701                                       __ptext16 017B  
                                     __ptext25 05D7                                       __ptext17 005D  
                                     __ptext26 0781                                       __ptext18 0582  
                                     __ptext27 0653                                       __ptext19 077B  
                                     __ptext28 0773                                       __ptext29 0784  
                                __size_of_main 001A           __end_of_TMR0_DefaultInterruptHandler 0618  
        __size_of_TMR0_DefaultInterruptHandler 0041                   _TMR0_DefaultInterruptHandler 05D7  
               MOS_vModbudFun3@u16TransDataLen 0039                        ?_EUSART_SetErrorHandler 0020  
EUSART_SetOverrunErrorHandler@interruptHandler 0020                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 0038                     _INTERRUPT_InterruptManager 0004  
        __end_of_EUSART_SetFramingErrorHandler 0760         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 075A                     ?_MOS_vModbusTransmitEnalbe 0070  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0070  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                   ??_MOS_vModbusReceiveEnalbe 0020                             _MOS_vModBusHandler 047C  
                      ?_PIN_MANAGER_Initialize 0070                 __end_of_EUSART_SetErrorHandler 0766  
                   __size_of_EUSART_is_tx_done 0004                               ??_ADC_Initialize 0020  
         __end_of_EUSART_SetRxInterruptHandler 0754          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 074E                  ?_TMR0_DefaultInterruptHandler 0070  
                          ?_MOS_vModBusHandler 0070                             _EUSART_Receive_ISR 0653  
EUSART_SetFramingErrorHandler@interruptHandler 0020              __end_of_MOS_vModbusTransmitEnalbe 077E  
                MOS_vModbudFun6@u16RegisterAdd 0038                                  __pstringtext1 027C  
                                __pstringtext2 037C                                     _OPTION_REG 0095  
                       ?_Mos_PtGetModbusObject 0070                            ?_EUSART_Receive_ISR 0070  
                              _TMR0_Initialize 06C3                           ??_MOS_vModBusHandler 0045  
                           EUSART_Write@txData 0020                   __size_of_EUSART_Transmit_ISR 0003  
           EUSART_RxDataHandler@ucReceivedByte 0076                 __end_of_PIN_MANAGER_Initialize 06AD  
                               crc16@usDataLen 0022                           ??_EUSART_Receive_ISR 0079  
                     __size_of_MOS_vModbudFun3 011E                       __size_of_MOS_vModbudFun6 0101  
      TMR0_DefaultInterruptHandler@tModbusData 0074  
